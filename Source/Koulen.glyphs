{
.appVersion = "1352";
copyright = "Copyright 2012 Google Inc. All Rights Reserved.";
customParameters = (
{
name = vendorID;
value = MONO;
},
{
name = panose;
value = (
2,
2,
6,
0,
6,
5,
0,
2,
2,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
43,
44,
45,
46,
60,
62,
64,
67,
69
);
},
{
name = glyphOrder;
value = (
.notdef,
CR,
space,
uni0000,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
guillemotleft,
guillemotright,
uni1780,
uni1781,
uni1782,
uni1783,
uni1784,
uni1785,
uni1786,
uni1787,
uni1788,
uni1789,
uni178A,
uni178B,
uni178C,
uni178D,
uni178E,
uni178F,
uni1790,
uni1791,
uni1792,
uni1793,
uni1794,
uni1795,
uni1796,
uni1797,
uni1798,
uni1799,
uni179A,
uni179B,
uni179C,
uni179D,
uni179E,
uni179F,
uni17A0,
uni17A1,
uni17A2,
uni17A3,
uni17A4,
uni17A5,
uni17A6,
uni17A7,
uni17A8,
uni17A9,
uni17AA,
uni17AB,
uni17AC,
uni17AD,
uni17AE,
uni17AF,
uni17B0,
uni17B1,
uni17B2,
uni17B3,
uni17B4,
uni17B5,
uni17B6,
uni17B7,
uni17B8,
uni17B9,
uni17BA,
uni17BB,
uni17BC,
uni17BD,
uni17BE,
uni17BF,
uni17C0,
uni17C1,
uni17C2,
uni17C3,
uni17C4,
uni17C5,
uni17C6,
uni17C7,
uni17C8,
uni17C9,
uni17CA,
uni17CB,
uni17CC,
uni17CD,
uni17CE,
uni17CF,
uni17D0,
uni17D1,
uni17D2,
uni17D3,
uni17D4,
uni17D5,
uni17D6,
uni17D7,
uni17D8,
uni17D9,
uni17DA,
uni17DB,
uni17DC,
uni17DD,
uni17E0,
uni17E1,
uni17E2,
uni17E3,
uni17E4,
uni17E5,
uni17E6,
uni17E7,
uni17E8,
uni17E9,
uni17D2_1780,
uni17D2_1781,
uni17D2_1782,
uni17D2_1783,
uni17D2_1784,
uni17D2_1785,
uni17D2_1786,
uni17D2_1787,
uni17D2_1788,
uni17D2_1789,
uni17D2_1789.a,
uni17D2_178A,
uni17D2_178B,
uni17D2_178C,
uni17D2_178D,
uni17D2_178E,
uni17D2_178F,
uni17D2_1790,
uni17D2_1791,
uni17D2_1792,
uni17D2_1793,
uni17D2_1794,
uni17D2_1795,
uni17D2_1796,
uni17D2_1797,
uni17D2_1798,
uni17D2_1799,
uni17D2_179A,
uni17D2_179B,
uni17D2_179C,
uni17D2_179F,
uni17D2_17A0,
uni17D2_17A2,
uni17BB.b,
uni17BC.b,
uni17BD.b,
uni17B7.a,
uni17B8.a,
uni17B9.a,
uni17BA.a,
uni17C6.a,
uni17CE.a,
uni17D0.a,
uni1789.a,
uni17D2_179A.b,
uni17BF.b,
uni17C0.b,
uni17B7_17CD,
uni17B7.r,
uni17B8.r,
uni17B9.r,
uni17BA.r,
uni17C6.r,
uni17C9.r,
uni17CD.r,
uni17B7_17CD.r,
uni17D2_178A.n,
uni17D2_178B.n,
uni17D2_178C.n,
uni17D2_17A0.n,
uni17D2_178A.r,
uni17D2_1797.r,
uni17D2_1798.r,
uni17BB.n,
uni17BC.n,
uni17BD.n,
uni17BB.n2,
uni17BC.n2,
uni17BD.n2,
uni17D2_1798.b,
uni17D2_17A0.b,
uni1794.a
);
}
);
date = "2020-02-19 02:17:00 +0000";
designer = "Danh Hong";
designerURL = "http://www.nextspell.com";
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
familyName = Koulen;
featurePrefixes = (
{
code = "lookup lookup_0 {\012sub uni17B7 by uni17B7.r;\012sub uni17B8 by uni17B8.r;\012sub uni17B9 by uni17B9.r;\012sub uni17BA by uni17BA.r;\012sub uni17C6 by uni17C6.r;\012sub uni17C9 by uni17C9.r;\012sub uni17CD by uni17CD.r;\012sub uni17B7_17CD by uni17B7_17CD.r;\012} lookup_0;\012";
name = lookup_0;
},
{
code = "lookup lookup_1 {\012sub uni17BB by uni17BB.b;\012sub uni17BC by uni17BC.b;\012sub uni17BD by uni17BD.b;\012} lookup_1;\012";
name = lookup_1;
},
{
code = "lookup lookup_10 {\012sub uni17D2_1798 by uni17D2_1798.b;\012sub uni17D2_17A0 by uni17D2_17A0.b;\012} lookup_10;";
name = lookup_10;
},
{
code = "lookup lookup_11 {\012sub uni1794 by uni1794.a;\012} lookup_11;";
name = lookup_11;
},
{
code = "lookup lookup_12 {\012sub uni17D2_179A by uni17D2_179A.b;\012} lookup_12;";
name = lookup_12;
},
{
code = "lookup lookup_13 {\012sub uni17B7 by uni17B7.a;\012sub uni17B8 by uni17B8.a;\012sub uni17B9 by uni17B9.a;\012sub uni17BA by uni17BA.a;\012sub uni17BE by uni17B8.a;\012sub uni17C6 by uni17C6.a;\012} lookup_13;\012";
name = lookup_13;
},
{
code = "lookup lookup_14 {\012sub uni1789 by uni1789.a;\012} lookup_14;";
name = lookup_14;
},
{
code = "lookup lookup_15 {\012sub uni17BF by uni17BF.b;\012sub uni17C0 by uni17C0.b;\012} lookup_15;";
name = lookup_15;
},
{
code = "lookup lookup_2 {\012sub uni17CA by uni17BB;\012} lookup_2;";
name = lookup_2;
},
{
code = "lookup lookup_3 {\012sub uni17C9 by uni17BB.b;\012sub uni17CA by uni17BB.b;\012} lookup_3;";
name = lookup_3;
},
{
code = "lookup lookup_4 {\012sub uni17C9 by uni17BB;\012sub uni17C9.r by uni17BB;\012} lookup_4;";
name = lookup_4;
},
{
code = "lookup lookup_5 {\012sub uni17D2_178A by uni17D2_178A.n;\012sub uni17D2_178B by uni17D2_178B.n;\012sub uni17D2_178C by uni17D2_178C.n;\012sub uni17D2_178F by uni17D2_178A.n;\012sub uni17D2_17A0 by uni17D2_17A0.n;\012} lookup_5;";
name = lookup_5;
},
{
code = "lookup lookup_6 {\012sub uni17BB by uni17BB.n;\012sub uni17BC by uni17BC.n;\012sub uni17BD by uni17BD.n;\012} lookup_6;";
name = lookup_6;
},
{
code = "lookup lookup_7 {\012sub uni17BB.b by uni17BB.n2;\012sub uni17BC.b by uni17BC.n2;\012sub uni17BD.b by uni17BD.n2;\012} lookup_7;";
name = lookup_7;
},
{
code = "lookup lookup_8 {\012sub uni17D2_178A by uni17D2_178A.r;\012sub uni17D2_178F by uni17D2_178A.r;\012sub uni17D2_1797 by uni17D2_1797.r;\012sub uni17D2_1798 by uni17D2_1798.r;\012} lookup_8;";
name = lookup_8;
},
{
code = "lookup lookup_9 {\012sub uni17D2_1789 by uni17D2_1789.a;\012} lookup_9;";
name = lookup_9;
},
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem khmr dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature abvs;\012feature blwf;\012feature clig;\012feature pref;\012feature pstf;\012";
name = aalt;
},
{
code = "script khmr;\012sub uni17B7 uni17CD by uni17B7_17CD;\012sub uni179A [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni179C [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni17D2_178A.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni17D2_1797.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni17D2_1798.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;";
name = abvs;
},
{
code = "script khmr;\012sub uni17D2 uni1780 by uni17D2_1780;\012sub uni17D2 uni1781 by uni17D2_1781;\012sub uni17D2 uni1782 by uni17D2_1782;\012sub uni17D2 uni1784 by uni17D2_1784;\012sub uni17D2 uni1785 by uni17D2_1785;\012sub uni17D2 uni1786 by uni17D2_1786;\012sub uni17D2 uni1787 by uni17D2_1787;\012sub uni17D2 uni1789 by uni17D2_1789;\012sub uni17D2 uni178A by uni17D2_178A;\012sub uni17D2 uni178B by uni17D2_178B;\012sub uni17D2 uni178C by uni17D2_178C;\012sub uni17D2 uni178E by uni17D2_178E;\012sub uni17D2 uni178F by uni17D2_178F;\012sub uni17D2 uni1790 by uni17D2_1790;\012sub uni17D2 uni1791 by uni17D2_1791;\012sub uni17D2 uni1792 by uni17D2_1792;\012sub uni17D2 uni1793 by uni17D2_1793;\012sub uni17D2 uni1795 by uni17D2_1795;\012sub uni17D2 uni1796 by uni17D2_1796;\012sub uni17D2 uni1797 by uni17D2_1797;\012sub uni17D2 uni1798 by uni17D2_1798;\012sub uni17D2 uni179B by uni17D2_179B;\012sub uni17D2 uni179C by uni17D2_179C;\012sub uni17D2 uni17A0 by uni17D2_17A0;\012sub uni17D2 uni17A2 by uni17D2_17A2;\012sub [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni17A1 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni179F uni17CA' lookup lookup_2 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni17A0 uni17CA' lookup lookup_2 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni17CA' lookup lookup_2 uni17B6 uni17C6 ;\012sub uni179F uni17CA' lookup lookup_2 uni17BE ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17C9 uni17CA]' lookup lookup_3 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 [uni17B7.a uni17B8.a uni17B9.a uni17BA.a] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17BE ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17C6 ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17D0 ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17B6 uni17C6 ;\012sub uni178E [uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178F uni17D2_17A0]' lookup lookup_5 ;\012sub uni178E [uni17BB uni17BC uni17BD]' lookup lookup_6 ;\012sub [uni17D2_178A.n uni17D2_178B.n uni17D2_178C.n uni17D2_17A0.n] [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_7 ;\012sub uni179A [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798]' lookup lookup_8 ;\012sub uni179C [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798]' lookup lookup_8 ;\012sub uni1789.a uni17D2_1789' lookup lookup_9 ;\012sub uni17D2_179F [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012sub uni17A1 [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012";
name = blwf;
},
{
code = "script khmr;\012sub [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni17A1 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1794' lookup lookup_11 uni17B6 ;\012sub uni1794' lookup lookup_11 uni17C4 ;\012sub uni1794' lookup lookup_11 uni17C5 ;\012sub uni1794' lookup lookup_11 uni17C9 uni17B6 ;\012sub uni1794' lookup lookup_11 uni17C9 uni17C4 ;\012sub uni1794' lookup lookup_11 uni17C9 uni17C5 ;\012sub uni1794' lookup lookup_11 uni17CA uni17B6 ;\012sub uni1794' lookup lookup_11 uni17CA uni17C4 ;\012sub uni1794' lookup lookup_11 uni17CA uni17C5 ;\012sub uni1794' lookup lookup_11 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] uni17B6 ;\012sub uni1794' lookup lookup_11 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] uni17C4 ;\012sub uni1794' lookup lookup_11 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] uni17C5 ;\012sub uni1794' lookup lookup_11 uni17BB uni17B6 ;\012sub uni1794' lookup lookup_11 uni17BB uni17C4 ;\012sub uni1794' lookup lookup_11 uni17BB uni17C5 ;\012sub uni17D2_179A' lookup lookup_12 [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2] [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] ;\012sub uni17CA [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6]' lookup lookup_13 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17C9 uni17CA]' lookup lookup_3 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni1789' lookup lookup_14 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] ;\012sub uni1789' lookup lookup_14 [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] ;\012sub uni1789.a uni17D2_1789' lookup lookup_9 ;\012sub uni17D2_179F [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012sub uni17A1 [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012";
name = clig;
},
{
code = "script khmr;\012sub uni17D2 uni179A by uni17D2_179A;\012sub uni17D2_179A' lookup lookup_12 [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2] [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] ;";
name = pref;
},
{
code = "script khmr;\012sub uni17D2 uni1783 by uni17D2_1783;\012sub uni17D2 uni1788 by uni17D2_1788;\012sub uni17D2 uni178D by uni17D2_178D;\012sub uni17D2 uni1794 by uni17D2_1794;\012sub uni17D2 uni1799 by uni17D2_1799;\012sub uni17D2 uni179F by uni17D2_179F;\012sub [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] [uni17BF uni17C0]' lookup lookup_15 ;\012sub uni1789 [uni17BF uni17C0]' lookup lookup_15 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17BF uni17C0]' lookup lookup_15 ;\012";
name = pstf;
}
);
fontMaster = (
{
ascender = 2189;
capHeight = 1462;
customParameters = (
{
name = typoAscender;
value = 2189;
},
{
name = typoDescender;
value = -850;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2189;
},
{
name = winDescent;
value = 850;
},
{
name = hheaAscender;
value = 2189;
},
{
name = hheaDescender;
value = -850;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 59 44 28 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01264 4 48 8 39 5 21 7 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01268 2 56 6 44 2 28 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0124160 3136 2560 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 128 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01266 2 50 6 42 2 23 5 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
199,
199,
122,
122,
1300,
-70,
0,
-500,
-840,
1300,
-70,
0,
-500,
-840,
127,
127,
199,
49,
247,
42,
125,
125,
257,
2090,
-800,
2090,
-800,
198,
198,
107,
107,
1462,
0,
1556,
1098,
0,
-492,
1485,
-20,
1556,
1118,
-20,
-492,
50,
50,
50,
50,
1483,
588,
1483,
573
);
}
);
descender = -850;
id = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
weightValue = 400;
widthValue = 5;
xHeight = 1098;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"922 1462 LINE",
"102 1462 LINE",
"102 0 LINE",
"922 0 LINE"
);
},
{
closed = 1;
nodes = (
"823 1364 LINE",
"823 98 LINE",
"201 98 LINE",
"201 1364 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */\0120 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 4 1 1 2 1 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = .notdef;
},
{
glyphname = CR;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 1044;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 532;
}
);
note = space;
unicode = 0020;
},
{
glyphname = uni0000;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 0;
}
);
note = uni0000;
},
{
glyphname = exclam;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"284 387 QCURVE",
"327 858 LINE",
"329 1415 LINE SMOOTH",
"329 1425 OFFCURVE",
"319 1425 QCURVE SMOOTH",
"89 1425 LINE SMOOTH",
"81 1425 OFFCURVE",
"81 1415 QCURVE SMOOTH",
"81 858 LINE",
"124 387 LINE",
"126 377 OFFCURVE",
"134 377 QCURVE",
"134 377 LINE",
"274 377 LINE SMOOTH",
"282 377 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"327 10 QCURVE SMOOTH",
"327 233 LINE SMOOTH",
"327 242 OFFCURVE",
"319 242 QCURVE SMOOTH",
"89 242 LINE SMOOTH",
"81 242 OFFCURVE",
"81 233 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"319 0 LINE SMOOTH",
"327 0 OFFCURVE"
);
}
);
width = 415;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"303 950 QCURVE SMOOTH",
"342 1417 LINE",
"344 1425 OFFCURVE",
"334 1425 QCURVE SMOOTH",
"131 1425 LINE SMOOTH",
"123 1425 OFFCURVE",
"121 1417 QCURVE",
"88 954 LINE SMOOTH",
"88 944 OFFCURVE",
"96 944 QCURVE",
"96 944 LINE",
"297 944 LINE SMOOTH",
"303 944 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"670 950 QCURVE SMOOTH",
"709 1417 LINE",
"711 1425 OFFCURVE",
"700 1425 QCURVE SMOOTH",
"498 1425 LINE SMOOTH",
"489 1425 OFFCURVE",
"487 1417 QCURVE",
"455 954 LINE SMOOTH",
"455 944 OFFCURVE",
"463 944 QCURVE",
"463 944 LINE",
"663 944 LINE SMOOTH",
"670 944 OFFCURVE"
);
}
);
width = 800;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"385 416 QCURVE SMOOTH",
"385 616 LINE",
"573 616 LINE",
"573 416 LINE SMOOTH",
"573 406 OFFCURVE",
"584 406 QCURVE SMOOTH",
"762 406 LINE SMOOTH",
"766 406 OFFCURVE",
"766 416 QCURVE SMOOTH",
"766 616 LINE",
"903 616 LINE SMOOTH",
"913 616 OFFCURVE",
"913 627 QCURVE SMOOTH",
"913 788 LINE SMOOTH",
"913 801 OFFCURVE",
"903 801 QCURVE SMOOTH",
"766 801 LINE",
"766 1028 LINE",
"903 1028 LINE SMOOTH",
"913 1028 OFFCURVE",
"913 1040 QCURVE SMOOTH",
"913 1208 LINE SMOOTH",
"913 1217 OFFCURVE",
"903 1217 QCURVE SMOOTH",
"766 1217 LINE",
"766 1421 LINE SMOOTH",
"766 1425 OFFCURVE",
"762 1425 QCURVE SMOOTH",
"582 1425 LINE SMOOTH",
"573 1425 OFFCURVE",
"573 1417 QCURVE SMOOTH",
"573 1217 LINE",
"385 1217 LINE",
"385 1417 LINE SMOOTH",
"385 1425 OFFCURVE",
"381 1425 QCURVE SMOOTH",
"201 1425 LINE SMOOTH",
"195 1425 OFFCURVE",
"195 1417 QCURVE SMOOTH",
"195 1217 LINE",
"55 1217 LINE SMOOTH",
"43 1217 OFFCURVE",
"43 1206 QCURVE SMOOTH",
"43 1040 LINE SMOOTH",
"43 1028 OFFCURVE",
"55 1028 QCURVE SMOOTH",
"195 1028 LINE",
"195 801 LINE",
"55 801 LINE SMOOTH",
"49 801 OFFCURVE",
"43 791 OFFCURVE",
"43 788 QCURVE SMOOTH",
"43 627 LINE SMOOTH",
"43 616 OFFCURVE",
"55 616 QCURVE SMOOTH",
"195 616 LINE",
"195 416 LINE SMOOTH",
"195 406 OFFCURVE",
"205 406 QCURVE",
"205 406 LINE",
"377 406 LINE SMOOTH",
"385 406 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"573 1028 LINE",
"573 801 LINE",
"385 801 LINE",
"385 1028 LINE"
);
}
);
width = 970;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"472 8 QCURVE SMOOTH",
"472 129 LINE",
"573 162 OFFCURVE",
"700 332 OFFCURVE",
"700 449 QCURVE SMOOTH",
"700 551 OFFCURVE",
"603 686 OFFCURVE",
"519 731 QCURVE SMOOTH",
"349 825 LINE SMOOTH",
"290 860 OFFCURVE",
"245 932 OFFCURVE",
"245 983 QCURVE SMOOTH",
"245 1036 OFFCURVE",
"317 1114 OFFCURVE",
"368 1114 QCURVE SMOOTH",
"417 1114 OFFCURVE",
"493 1042 OFFCURVE",
"493 983 QCURVE SMOOTH",
"495 846 LINE SMOOTH",
"495 840 OFFCURVE",
"501 840 QCURVE SMOOTH",
"689 840 LINE SMOOTH",
"695 840 OFFCURVE",
"695 846 QCURVE SMOOTH",
"695 983 LINE SMOOTH",
"695 1094 OFFCURVE",
"566 1266 OFFCURVE",
"468 1296 QCURVE",
"468 1417 LINE SMOOTH",
"468 1425 OFFCURVE",
"458 1425 QCURVE SMOOTH",
"280 1425 LINE SMOOTH",
"271 1425 OFFCURVE",
"271 1417 QCURVE SMOOTH",
"271 1298 LINE",
"171 1268 OFFCURVE",
"38 1098 OFFCURVE",
"38 983 QCURVE SMOOTH",
"38 879 OFFCURVE",
"126 711 OFFCURVE",
"222 657 QCURVE SMOOTH",
"271 631 OFFCURVE",
"386 569 OFFCURVE",
"413 553 QCURVE SMOOTH",
"493 508 OFFCURVE",
"493 444 QCURVE SMOOTH",
"493 395 OFFCURVE",
"421 315 OFFCURVE",
"368 315 QCURVE SMOOTH",
"317 315 OFFCURVE",
"241 395 OFFCURVE",
"241 449 QCURVE SMOOTH",
"241 526 LINE SMOOTH",
"241 535 OFFCURVE",
"235 535 QCURVE SMOOTH",
"48 535 LINE SMOOTH",
"40 535 OFFCURVE",
"40 526 QCURVE SMOOTH",
"40 449 LINE SMOOTH",
"40 336 OFFCURVE",
"173 158 OFFCURVE",
"276 127 QCURVE",
"276 8 LINE SMOOTH",
"276 0 OFFCURVE",
"284 0 QCURVE",
"284 0 LINE",
"462 0 LINE SMOOTH",
"472 0 OFFCURVE"
);
}
);
width = 768;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"487 838 OFFCURVE",
"558 958 OFFCURVE",
"558 1032 QCURVE SMOOTH",
"558 1178 LINE SMOOTH",
"558 1251 OFFCURVE",
"489 1374 OFFCURVE",
"370 1446 OFFCURVE",
"296 1446 QCURVE SMOOTH",
"225 1446 OFFCURVE",
"104 1374 OFFCURVE",
"32 1251 OFFCURVE",
"32 1178 QCURVE SMOOTH",
"32 1032 LINE SMOOTH",
"32 961 OFFCURVE",
"104 838 OFFCURVE",
"225 764 OFFCURVE",
"296 764 QCURVE",
"296 764 LINE",
"368 764 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"401 10 QCURVE",
"1216 1417 LINE SMOOTH",
"1220 1425 OFFCURVE",
"1210 1425 QCURVE SMOOTH",
"972 1425 LINE SMOOTH",
"966 1425 OFFCURVE",
"960 1417 QCURVE",
"143 10 LINE SMOOTH",
"138 0 OFFCURVE",
"149 0 QCURVE",
"149 0 LINE",
"388 0 LINE SMOOTH",
"397 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"196 991 OFFCURVE",
"196 1032 QCURVE SMOOTH",
"196 1174 LINE SMOOTH",
"196 1214 OFFCURVE",
"251 1274 OFFCURVE",
"292 1274 QCURVE SMOOTH",
"333 1274 OFFCURVE",
"386 1214 OFFCURVE",
"386 1174 QCURVE SMOOTH",
"386 1032 LINE SMOOTH",
"386 989 OFFCURVE",
"333 930 OFFCURVE",
"292 930 QCURVE",
"292 930 LINE",
"253 930 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1275 53 OFFCURVE",
"1347 174 OFFCURVE",
"1347 248 QCURVE SMOOTH",
"1347 393 LINE SMOOTH",
"1347 467 OFFCURVE",
"1277 590 OFFCURVE",
"1158 662 OFFCURVE",
"1085 662 QCURVE SMOOTH",
"1013 662 OFFCURVE",
"892 590 OFFCURVE",
"820 467 OFFCURVE",
"820 393 QCURVE SMOOTH",
"820 248 LINE SMOOTH",
"820 176 OFFCURVE",
"892 53 OFFCURVE",
"1013 -20 OFFCURVE",
"1085 -20 QCURVE",
"1085 -20 LINE",
"1156 -20 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"986 207 OFFCURVE",
"986 248 QCURVE SMOOTH",
"986 389 LINE SMOOTH",
"986 430 OFFCURVE",
"1042 489 OFFCURVE",
"1083 489 QCURVE SMOOTH",
"1124 489 OFFCURVE",
"1177 430 OFFCURVE",
"1177 389 QCURVE SMOOTH",
"1177 248 LINE SMOOTH",
"1177 205 OFFCURVE",
"1124 145 OFFCURVE",
"1083 145 QCURVE",
"1083 145 LINE",
"1044 145 OFFCURVE"
);
}
);
width = 1388;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"802 8 QCURVE SMOOTH",
"804 649 LINE",
"985 649 LINE SMOOTH",
"993 649 OFFCURVE",
"993 657 QCURVE SMOOTH",
"993 885 LINE SMOOTH",
"993 895 OFFCURVE",
"982 895 QCURVE SMOOTH",
"425 895 LINE SMOOTH",
"362 895 OFFCURVE",
"298 973 OFFCURVE",
"298 1042 QCURVE SMOOTH",
"298 1100 OFFCURVE",
"374 1182 OFFCURVE",
"425 1182 QCURVE SMOOTH",
"704 1182 LINE SMOOTH",
"716 1182 OFFCURVE",
"716 1194 QCURVE SMOOTH",
"716 1411 LINE SMOOTH",
"716 1425 OFFCURVE",
"702 1425 QCURVE SMOOTH",
"425 1425 LINE SMOOTH",
"321 1425 OFFCURVE",
"151 1323 OFFCURVE",
"51 1149 OFFCURVE",
"51 1042 QCURVE SMOOTH",
"51 958 OFFCURVE",
"100 821 OFFCURVE",
"143 774 QCURVE",
"90 723 OFFCURVE",
"24 592 OFFCURVE",
"24 522 QCURVE SMOOTH",
"24 387 LINE SMOOTH",
"24 297 OFFCURVE",
"126 117 OFFCURVE",
"309 -2 OFFCURVE",
"430 -2 QCURVE",
"430 -2 LINE",
"794 0 LINE SMOOTH",
"802 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"307 289 OFFCURVE",
"268 356 OFFCURVE",
"268 387 QCURVE SMOOTH",
"268 522 LINE SMOOTH",
"268 549 OFFCURVE",
"309 606 OFFCURVE",
"380 649 OFFCURVE",
"423 649 QCURVE SMOOTH",
"565 649 LINE",
"563 246 LINE",
"430 244 LINE",
"430 244 LINE",
"380 244 OFFCURVE"
);
}
);
width = 1017;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"303 950 QCURVE SMOOTH",
"342 1417 LINE",
"344 1425 OFFCURVE",
"334 1425 QCURVE SMOOTH",
"131 1425 LINE SMOOTH",
"123 1425 OFFCURVE",
"121 1417 QCURVE",
"88 954 LINE SMOOTH",
"88 944 OFFCURVE",
"96 944 QCURVE",
"96 944 LINE",
"297 944 LINE SMOOTH",
"303 944 OFFCURVE"
);
}
);
width = 434;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"585 -12 QCURVE SMOOTH",
"583 219 LINE SMOOTH",
"583 227 OFFCURVE",
"573 227 QCURVE SMOOTH",
"462 227 LINE",
"405 233 OFFCURVE",
"321 328 OFFCURVE",
"321 391 QCURVE SMOOTH",
"321 1040 LINE SMOOTH",
"321 1106 OFFCURVE",
"403 1200 OFFCURVE",
"462 1200 QCURVE SMOOTH",
"579 1200 LINE SMOOTH",
"589 1200 OFFCURVE",
"589 1208 QCURVE SMOOTH",
"589 1440 LINE SMOOTH",
"589 1448 OFFCURVE",
"579 1448 QCURVE SMOOTH",
"466 1448 LINE",
"464 1448 LINE SMOOTH",
"358 1444 OFFCURVE",
"181 1331 OFFCURVE",
"77 1149 OFFCURVE",
"77 1040 QCURVE SMOOTH",
"75 391 LINE SMOOTH",
"75 281 OFFCURVE",
"181 96 OFFCURVE",
"358 -16 OFFCURVE",
"464 -20 QCURVE SMOOTH",
"575 -20 LINE",
"575 -20 LINE",
"585 -20 OFFCURVE"
);
}
);
width = 667;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"485 96 OFFCURVE",
"591 281 OFFCURVE",
"591 391 QCURVE SMOOTH",
"589 1040 LINE SMOOTH",
"589 1149 OFFCURVE",
"485 1331 OFFCURVE",
"308 1444 OFFCURVE",
"202 1448 QCURVE SMOOTH",
"200 1448 LINE",
"87 1448 LINE SMOOTH",
"77 1448 OFFCURVE",
"77 1440 QCURVE SMOOTH",
"77 1208 LINE SMOOTH",
"77 1200 OFFCURVE",
"87 1200 QCURVE SMOOTH",
"200 1200 LINE SMOOTH",
"263 1200 OFFCURVE",
"345 1106 OFFCURVE",
"345 1040 QCURVE SMOOTH",
"345 391 LINE SMOOTH",
"345 328 OFFCURVE",
"261 233 OFFCURVE",
"200 227 QCURVE",
"91 227 LINE SMOOTH",
"81 227 OFFCURVE",
"81 219 QCURVE SMOOTH",
"81 -12 LINE SMOOTH",
"81 -20 OFFCURVE",
"91 -20 QCURVE",
"91 -20 LINE",
"200 -20 LINE SMOOTH",
"308 -16 OFFCURVE"
);
}
);
width = 667;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"626 1212 LINE",
"538 1331 LINE",
"405 1235 LINE",
"417 1423 LINE",
"266 1423 LINE",
"276 1235 LINE",
"145 1335 LINE",
"55 1217 LINE",
"227 1110 LINE",
"57 1006 LINE",
"145 887 LINE",
"274 987 LINE",
"266 809 LINE",
"415 809 LINE",
"407 989 LINE",
"536 891 LINE",
"626 1010 LINE",
"456 1112 LINE"
);
}
);
width = 720;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"541 272 QCURVE SMOOTH",
"541 639 LINE",
"846 639 LINE SMOOTH",
"848 639 OFFCURVE",
"856 645 OFFCURVE",
"856 649 QCURVE SMOOTH",
"856 811 LINE SMOOTH",
"856 823 OFFCURVE",
"846 823 QCURVE SMOOTH",
"541 823 LINE",
"541 1196 LINE SMOOTH",
"541 1200 OFFCURVE",
"532 1200 QCURVE SMOOTH",
"360 1200 LINE SMOOTH",
"350 1200 OFFCURVE",
"350 1196 QCURVE SMOOTH",
"350 823 LINE",
"59 823 LINE SMOOTH",
"53 823 OFFCURVE",
"47 813 OFFCURVE",
"47 811 QCURVE SMOOTH",
"47 649 LINE SMOOTH",
"47 639 OFFCURVE",
"59 639 QCURVE SMOOTH",
"350 639 LINE",
"350 272 LINE SMOOTH",
"350 262 OFFCURVE",
"360 262 QCURVE",
"360 262 LINE",
"532 262 LINE SMOOTH",
"541 262 OFFCURVE"
);
}
);
width = 905;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"259 -190 OFFCURVE",
"329 -72 OFFCURVE",
"329 0 QCURVE SMOOTH",
"329 238 LINE SMOOTH",
"329 246 OFFCURVE",
"321 246 QCURVE SMOOTH",
"89 246 LINE SMOOTH",
"81 246 OFFCURVE",
"81 238 QCURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE SMOOTH",
"204 0 LINE",
"204 -53 OFFCURVE",
"132 -131 OFFCURVE",
"81 -131 QCURVE",
"81 -258 LINE",
"81 -258 LINE",
"147 -258 OFFCURVE"
);
}
);
width = 415;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"504 600 QCURVE SMOOTH",
"504 823 LINE SMOOTH",
"504 831 OFFCURVE",
"494 831 QCURVE SMOOTH",
"98 831 LINE SMOOTH",
"88 831 OFFCURVE",
"88 823 QCURVE SMOOTH",
"88 600 LINE SMOOTH",
"88 592 OFFCURVE",
"98 592 QCURVE",
"98 592 LINE",
"494 592 LINE SMOOTH",
"504 592 OFFCURVE"
);
}
);
width = 620;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 8 QCURVE SMOOTH",
"329 240 LINE SMOOTH",
"329 248 OFFCURVE",
"321 248 QCURVE SMOOTH",
"89 248 LINE SMOOTH",
"81 248 OFFCURVE",
"81 240 QCURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 415;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"290 10 QCURVE SMOOTH",
"548 1417 LINE SMOOTH",
"550 1425 OFFCURVE",
"540 1425 QCURVE SMOOTH",
"327 1425 LINE SMOOTH",
"319 1425 OFFCURVE",
"317 1417 QCURVE SMOOTH",
"63 10 LINE SMOOTH",
"61 0 OFFCURVE",
"71 0 QCURVE",
"71 0 LINE",
"280 0 LINE SMOOTH",
"288 0 OFFCURVE"
);
}
);
width = 612;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"831 92 OFFCURVE",
"944 279 OFFCURVE",
"944 391 QCURVE SMOOTH",
"942 1040 LINE SMOOTH",
"942 1153 OFFCURVE",
"829 1337 OFFCURVE",
"632 1448 OFFCURVE",
"501 1448 QCURVE SMOOTH",
"372 1448 OFFCURVE",
"172 1337 OFFCURVE",
"59 1153 OFFCURVE",
"59 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 279 OFFCURVE",
"170 92 OFFCURVE",
"370 -20 OFFCURVE",
"501 -20 QCURVE",
"501 -20 LINE",
"632 -20 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"587 227 OFFCURVE",
"501 227 QCURVE SMOOTH",
"413 227 OFFCURVE",
"307 315 OFFCURVE",
"307 391 QCURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1112 OFFCURVE",
"413 1202 OFFCURVE",
"501 1202 QCURVE SMOOTH",
"587 1202 OFFCURVE",
"694 1112 OFFCURVE",
"694 1040 QCURVE SMOOTH",
"696 391 LINE",
"696 391 LINE",
"696 315 OFFCURVE"
);
}
);
width = 1017;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"331 10 QCURVE SMOOTH",
"329 1417 LINE SMOOTH",
"329 1425 OFFCURVE",
"321 1425 QCURVE SMOOTH",
"91 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"323 0 LINE SMOOTH",
"331 0 OFFCURVE"
);
}
);
width = 430;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"825 10 QCURVE SMOOTH",
"825 242 LINE SMOOTH",
"825 250 OFFCURVE",
"816 250 QCURVE SMOOTH",
"356 250 LINE",
"745 784 LINE SMOOTH",
"786 838 OFFCURVE",
"833 977 OFFCURVE",
"833 1044 QCURVE SMOOTH",
"833 1151 OFFCURVE",
"724 1335 OFFCURVE",
"544 1448 OFFCURVE",
"433 1448 QCURVE SMOOTH",
"329 1448 OFFCURVE",
"147 1337 OFFCURVE",
"34 1149 OFFCURVE",
"34 1034 QCURVE SMOOTH",
"34 934 LINE SMOOTH",
"34 924 OFFCURVE",
"42 924 QCURVE SMOOTH",
"272 924 LINE SMOOTH",
"282 924 OFFCURVE",
"282 934 QCURVE SMOOTH",
"282 1034 LINE SMOOTH",
"282 1108 OFFCURVE",
"370 1204 OFFCURVE",
"433 1204 QCURVE SMOOTH",
"499 1204 OFFCURVE",
"585 1104 OFFCURVE",
"585 1044 QCURVE SMOOTH",
"585 1022 OFFCURVE",
"566 963 OFFCURVE",
"552 944 QCURVE SMOOTH",
"46 250 LINE",
"42 246 OFFCURVE",
"42 242 QCURVE SMOOTH",
"42 10 LINE SMOOTH",
"42 0 OFFCURVE",
"52 0 QCURVE",
"52 0 LINE",
"816 0 LINE SMOOTH",
"825 0 OFFCURVE"
);
}
);
width = 899;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"726 88 OFFCURVE",
"835 276 OFFCURVE",
"835 391 QCURVE SMOOTH",
"835 453 LINE SMOOTH",
"835 530 OFFCURVE",
"773 676 OFFCURVE",
"720 737 QCURVE",
"773 797 OFFCURVE",
"833 928 OFFCURVE",
"833 1018 QCURVE SMOOTH",
"833 1051 LINE SMOOTH",
"833 1159 OFFCURVE",
"726 1339 OFFCURVE",
"544 1448 OFFCURVE",
"433 1448 QCURVE SMOOTH",
"331 1448 OFFCURVE",
"149 1343 OFFCURVE",
"36 1167 OFFCURVE",
"36 1055 QCURVE SMOOTH",
"36 946 LINE SMOOTH",
"36 936 OFFCURVE",
"44 936 QCURVE SMOOTH",
"274 936 LINE SMOOTH",
"282 936 OFFCURVE",
"282 946 QCURVE SMOOTH",
"282 1044 LINE SMOOTH",
"282 1110 OFFCURVE",
"370 1202 OFFCURVE",
"433 1202 QCURVE SMOOTH",
"499 1202 OFFCURVE",
"587 1110 OFFCURVE",
"587 1044 QCURVE SMOOTH",
"587 1016 LINE SMOOTH",
"587 946 OFFCURVE",
"501 860 OFFCURVE",
"446 860 QCURVE SMOOTH",
"366 860 LINE SMOOTH",
"358 860 OFFCURVE",
"358 852 QCURVE SMOOTH",
"356 623 LINE SMOOTH",
"356 612 OFFCURVE",
"366 612 QCURVE SMOOTH",
"446 612 LINE SMOOTH",
"507 612 OFFCURVE",
"587 510 OFFCURVE",
"587 446 QCURVE SMOOTH",
"587 391 LINE SMOOTH",
"587 328 OFFCURVE",
"505 227 OFFCURVE",
"433 227 QCURVE SMOOTH",
"368 227 OFFCURVE",
"282 324 OFFCURVE",
"282 391 QCURVE SMOOTH",
"282 483 LINE SMOOTH",
"282 494 OFFCURVE",
"272 494 QCURVE SMOOTH",
"42 494 LINE SMOOTH",
"34 494 OFFCURVE",
"34 483 QCURVE SMOOTH",
"34 391 LINE SMOOTH",
"34 279 OFFCURVE",
"143 90 OFFCURVE",
"325 -23 OFFCURVE",
"433 -23 QCURVE",
"433 -23 LINE",
"544 -23 OFFCURVE"
);
}
);
width = 901;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"726 10 QCURVE SMOOTH",
"726 250 LINE",
"872 250 LINE SMOOTH",
"880 250 OFFCURVE",
"880 260 QCURVE SMOOTH",
"880 483 LINE SMOOTH",
"880 494 OFFCURVE",
"870 494 QCURVE SMOOTH",
"726 494 LINE",
"724 1417 LINE SMOOTH",
"724 1425 OFFCURVE",
"718 1425 QCURVE SMOOTH",
"487 1425 LINE SMOOTH",
"479 1425 OFFCURVE",
"474 1417 QCURVE",
"28 485 LINE",
"28 260 LINE SMOOTH",
"28 250 OFFCURVE",
"36 250 QCURVE SMOOTH",
"479 250 LINE",
"479 10 LINE SMOOTH",
"479 0 OFFCURVE",
"487 0 QCURVE",
"487 0 LINE",
"718 0 LINE SMOOTH",
"726 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"270 494 LINE",
"479 940 LINE",
"479 494 LINE"
);
}
);
width = 923;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"741 92 OFFCURVE",
"850 281 OFFCURVE",
"850 393 QCURVE SMOOTH",
"850 532 LINE SMOOTH",
"850 641 OFFCURVE",
"739 821 OFFCURVE",
"553 930 OFFCURVE",
"442 930 QCURVE SMOOTH",
"410 930 OFFCURVE",
"330 913 OFFCURVE",
"305 901 QCURVE",
"315 1184 LINE",
"795 1184 LINE SMOOTH",
"803 1184 OFFCURVE",
"803 1194 QCURVE SMOOTH",
"803 1417 LINE SMOOTH",
"803 1425 OFFCURVE",
"795 1425 QCURVE SMOOTH",
"106 1425 LINE SMOOTH",
"98 1425 OFFCURVE",
"98 1417 QCURVE SMOOTH",
"86 1194 LINE",
"61 633 LINE SMOOTH",
"61 623 OFFCURVE",
"72 623 QCURVE SMOOTH",
"291 606 LINE",
"295 612 LINE SMOOTH",
"352 682 OFFCURVE",
"440 682 QCURVE SMOOTH",
"508 682 OFFCURVE",
"600 596 OFFCURVE",
"600 532 QCURVE SMOOTH",
"600 393 LINE SMOOTH",
"600 326 OFFCURVE",
"512 229 OFFCURVE",
"448 229 QCURVE SMOOTH",
"385 229 OFFCURVE",
"295 324 OFFCURVE",
"295 393 QCURVE SMOOTH",
"295 440 LINE SMOOTH",
"295 449 OFFCURVE",
"287 449 QCURVE SMOOTH",
"55 449 LINE SMOOTH",
"45 449 OFFCURVE",
"45 440 QCURVE SMOOTH",
"45 379 LINE SMOOTH",
"45 272 OFFCURVE",
"156 90 OFFCURVE",
"340 -20 OFFCURVE",
"448 -20 QCURVE",
"448 -20 LINE",
"559 -20 OFFCURVE"
);
}
);
width = 886;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"751 90 OFFCURVE",
"860 276 OFFCURVE",
"860 387 QCURVE SMOOTH",
"860 514 LINE SMOOTH",
"860 627 OFFCURVE",
"753 813 OFFCURVE",
"571 924 OFFCURVE",
"460 924 QCURVE SMOOTH",
"381 924 OFFCURVE",
"307 893 QCURVE",
"307 1034 LINE SMOOTH",
"307 1102 OFFCURVE",
"397 1198 OFFCURVE",
"460 1198 QCURVE SMOOTH",
"526 1198 OFFCURVE",
"614 1102 OFFCURVE",
"614 1034 QCURVE SMOOTH",
"614 993 LINE SMOOTH",
"614 985 OFFCURVE",
"622 985 QCURVE SMOOTH",
"852 985 LINE SMOOTH",
"862 985 OFFCURVE",
"862 993 QCURVE SMOOTH",
"862 1034 LINE SMOOTH",
"862 1149 OFFCURVE",
"753 1335 OFFCURVE",
"571 1448 OFFCURVE",
"460 1448 QCURVE SMOOTH",
"352 1448 OFFCURVE",
"168 1335 OFFCURVE",
"57 1147 OFFCURVE",
"57 1034 QCURVE SMOOTH",
"59 387 LINE SMOOTH",
"59 276 OFFCURVE",
"170 92 OFFCURVE",
"352 -20 OFFCURVE",
"460 -20 QCURVE",
"460 -20 LINE",
"571 -20 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"307 322 OFFCURVE",
"307 387 QCURVE SMOOTH",
"307 514 LINE SMOOTH",
"307 582 OFFCURVE",
"397 676 OFFCURVE",
"460 676 QCURVE SMOOTH",
"524 676 OFFCURVE",
"612 580 OFFCURVE",
"612 514 QCURVE SMOOTH",
"612 387 LINE SMOOTH",
"612 319 OFFCURVE",
"524 225 OFFCURVE",
"460 225 QCURVE",
"460 225 LINE",
"397 225 OFFCURVE"
);
}
);
width = 931;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"454 10 QCURVE SMOOTH",
"847 1186 LINE",
"847 1415 LINE SMOOTH",
"847 1425 OFFCURVE",
"839 1425 QCURVE SMOOTH",
"46 1425 LINE SMOOTH",
"38 1425 OFFCURVE",
"38 1415 QCURVE SMOOTH",
"38 1192 LINE SMOOTH",
"38 1184 OFFCURVE",
"46 1184 QCURVE SMOOTH",
"605 1184 LINE",
"183 10 LINE SMOOTH",
"179 0 OFFCURVE",
"188 0 QCURVE",
"188 0 LINE",
"441 0 LINE SMOOTH",
"450 0 OFFCURVE"
);
}
);
width = 905;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"737 90 OFFCURVE",
"846 276 OFFCURVE",
"846 387 QCURVE SMOOTH",
"846 514 LINE SMOOTH",
"846 600 OFFCURVE",
"782 752 OFFCURVE",
"727 807 QCURVE",
"772 858 OFFCURVE",
"823 989 OFFCURVE",
"823 1065 QCURVE SMOOTH",
"823 1171 OFFCURVE",
"721 1343 OFFCURVE",
"551 1448 OFFCURVE",
"446 1448 QCURVE SMOOTH",
"342 1448 OFFCURVE",
"170 1346 OFFCURVE",
"70 1171 OFFCURVE",
"70 1065 QCURVE SMOOTH",
"70 989 OFFCURVE",
"121 856 OFFCURVE",
"166 807 QCURVE",
"111 750 OFFCURVE",
"45 600 OFFCURVE",
"45 514 QCURVE SMOOTH",
"45 387 LINE SMOOTH",
"45 276 OFFCURVE",
"156 92 OFFCURVE",
"338 -20 OFFCURVE",
"446 -20 QCURVE",
"446 -20 LINE",
"557 -20 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"315 1010 OFFCURVE",
"315 1065 QCURVE SMOOTH",
"315 1122 OFFCURVE",
"393 1204 OFFCURVE",
"446 1204 QCURVE SMOOTH",
"500 1204 OFFCURVE",
"575 1122 OFFCURVE",
"575 1065 QCURVE SMOOTH",
"575 1008 OFFCURVE",
"500 928 OFFCURVE",
"446 928 QCURVE",
"446 928 LINE",
"393 928 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"293 322 OFFCURVE",
"293 387 QCURVE SMOOTH",
"293 514 LINE SMOOTH",
"293 582 OFFCURVE",
"383 676 OFFCURVE",
"446 676 QCURVE SMOOTH",
"510 676 OFFCURVE",
"598 580 OFFCURVE",
"598 514 QCURVE SMOOTH",
"598 387 LINE SMOOTH",
"598 319 OFFCURVE",
"510 225 OFFCURVE",
"446 225 QCURVE",
"446 225 LINE",
"383 225 OFFCURVE"
);
}
);
width = 919;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"734 92 OFFCURVE",
"845 281 OFFCURVE",
"845 393 QCURVE SMOOTH",
"843 913 LINE",
"843 1040 LINE SMOOTH",
"843 1151 OFFCURVE",
"732 1337 OFFCURVE",
"550 1448 OFFCURVE",
"441 1448 QCURVE SMOOTH",
"333 1448 OFFCURVE",
"151 1337 OFFCURVE",
"42 1153 OFFCURVE",
"42 1040 QCURVE SMOOTH",
"42 913 LINE SMOOTH",
"42 801 OFFCURVE",
"151 614 OFFCURVE",
"331 504 OFFCURVE",
"441 504 QCURVE SMOOTH",
"521 504 OFFCURVE",
"595 535 QCURVE",
"595 393 LINE SMOOTH",
"595 326 OFFCURVE",
"505 229 OFFCURVE",
"441 229 QCURVE SMOOTH",
"378 229 OFFCURVE",
"288 326 OFFCURVE",
"288 393 QCURVE SMOOTH",
"288 434 LINE SMOOTH",
"288 442 OFFCURVE",
"280 442 QCURVE SMOOTH",
"50 442 LINE SMOOTH",
"40 442 OFFCURVE",
"40 434 QCURVE SMOOTH",
"40 393 LINE SMOOTH",
"40 281 OFFCURVE",
"149 92 OFFCURVE",
"333 -20 OFFCURVE",
"441 -20 QCURVE",
"441 -20 LINE",
"552 -20 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"290 848 OFFCURVE",
"290 913 QCURVE SMOOTH",
"290 1040 LINE SMOOTH",
"290 1108 OFFCURVE",
"378 1202 OFFCURVE",
"441 1202 QCURVE SMOOTH",
"505 1202 OFFCURVE",
"595 1106 OFFCURVE",
"595 1040 QCURVE SMOOTH",
"595 913 LINE SMOOTH",
"595 846 OFFCURVE",
"507 752 OFFCURVE",
"441 752 QCURVE",
"441 752 LINE",
"378 752 OFFCURVE"
);
}
);
width = 919;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 616 QCURVE SMOOTH",
"329 848 LINE SMOOTH",
"329 856 OFFCURVE",
"321 856 QCURVE SMOOTH",
"89 856 LINE SMOOTH",
"81 856 OFFCURVE",
"81 848 QCURVE SMOOTH",
"81 616 LINE SMOOTH",
"81 608 OFFCURVE",
"89 608 QCURVE",
"89 608 LINE",
"321 608 LINE SMOOTH",
"329 608 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"329 8 QCURVE SMOOTH",
"329 240 LINE SMOOTH",
"329 248 OFFCURVE",
"321 248 QCURVE SMOOTH",
"89 248 LINE SMOOTH",
"81 248 OFFCURVE",
"81 240 QCURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 415;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 616 QCURVE SMOOTH",
"329 848 LINE SMOOTH",
"329 856 OFFCURVE",
"321 856 QCURVE SMOOTH",
"89 856 LINE SMOOTH",
"81 856 OFFCURVE",
"81 848 QCURVE SMOOTH",
"81 616 LINE SMOOTH",
"81 608 OFFCURVE",
"89 608 QCURVE",
"89 608 LINE",
"321 608 LINE SMOOTH",
"329 608 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"259 -190 OFFCURVE",
"329 -72 OFFCURVE",
"329 0 QCURVE SMOOTH",
"329 238 LINE SMOOTH",
"329 246 OFFCURVE",
"321 246 QCURVE SMOOTH",
"89 246 LINE SMOOTH",
"81 246 OFFCURVE",
"81 238 QCURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE SMOOTH",
"204 0 LINE",
"204 -53 OFFCURVE",
"132 -131 OFFCURVE",
"81 -131 QCURVE",
"81 -258 LINE",
"81 -258 LINE",
"147 -258 OFFCURVE"
);
}
);
width = 415;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"643 248 QCURVE",
"745 373 LINE SMOOTH",
"752 383 OFFCURVE",
"745 389 QCURVE SMOOTH",
"321 733 LINE",
"731 1065 LINE SMOOTH",
"735 1069 OFFCURVE",
"729 1081 QCURVE",
"629 1206 LINE",
"620 1214 OFFCURVE",
"614 1208 QCURVE",
"61 768 LINE SMOOTH",
"45 756 OFFCURVE",
"45 715 OFFCURVE",
"61 698 QCURVE",
"629 246 LINE",
"629 246 LINE",
"635 240 OFFCURVE"
);
}
);
width = 872;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"856 821 QCURVE SMOOTH",
"856 983 LINE SMOOTH",
"856 995 OFFCURVE",
"846 995 QCURVE SMOOTH",
"59 995 LINE SMOOTH",
"47 995 OFFCURVE",
"47 983 QCURVE SMOOTH",
"47 821 LINE SMOOTH",
"47 811 OFFCURVE",
"59 811 QCURVE",
"59 811 LINE",
"846 811 LINE SMOOTH",
"856 811 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"858 473 QCURVE SMOOTH",
"858 635 LINE SMOOTH",
"858 647 OFFCURVE",
"848 647 QCURVE SMOOTH",
"61 647 LINE SMOOTH",
"49 647 OFFCURVE",
"49 635 QCURVE SMOOTH",
"49 473 LINE SMOOTH",
"49 463 OFFCURVE",
"61 463 QCURVE",
"61 463 LINE",
"848 463 LINE SMOOTH",
"858 463 OFFCURVE"
);
}
);
width = 907;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"782 756 OFFCURVE",
"765 768 QCURVE",
"212 1208 LINE",
"206 1214 OFFCURVE",
"198 1206 QCURVE",
"98 1081 LINE",
"91 1069 OFFCURVE",
"95 1065 QCURVE SMOOTH",
"505 733 LINE",
"81 389 LINE",
"75 383 OFFCURVE",
"81 373 QCURVE",
"184 248 LINE",
"192 240 OFFCURVE",
"198 246 QCURVE",
"198 246 LINE",
"765 698 LINE",
"782 715 OFFCURVE"
);
}
);
width = 872;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"552 385 QCURVE SMOOTH",
"552 483 LINE SMOOTH",
"552 532 OFFCURVE",
"595 614 OFFCURVE",
"646 666 QCURVE SMOOTH",
"722 750 OFFCURVE",
"800 862 OFFCURVE",
"829 967 OFFCURVE",
"829 1034 QCURVE SMOOTH",
"829 1149 OFFCURVE",
"722 1337 OFFCURVE",
"540 1448 OFFCURVE",
"429 1448 QCURVE SMOOTH",
"319 1448 OFFCURVE",
"137 1337 OFFCURVE",
"28 1149 OFFCURVE",
"28 1034 QCURVE SMOOTH",
"28 885 LINE SMOOTH",
"28 877 OFFCURVE",
"36 877 QCURVE SMOOTH",
"268 877 LINE SMOOTH",
"276 877 OFFCURVE",
"276 885 QCURVE SMOOTH",
"276 1034 LINE SMOOTH",
"276 1106 OFFCURVE",
"364 1202 OFFCURVE",
"429 1202 QCURVE SMOOTH",
"495 1202 OFFCURVE",
"581 1106 OFFCURVE",
"581 1034 QCURVE SMOOTH",
"581 995 OFFCURVE",
"565 938 OFFCURVE",
"507 870 OFFCURVE",
"446 809 QCURVE SMOOTH",
"380 743 OFFCURVE",
"304 578 OFFCURVE",
"304 496 QCURVE SMOOTH",
"304 385 LINE SMOOTH",
"304 377 OFFCURVE",
"315 377 QCURVE",
"315 377 LINE",
"542 377 LINE SMOOTH",
"552 377 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"552 10 QCURVE SMOOTH",
"552 238 LINE SMOOTH",
"552 246 OFFCURVE",
"542 246 QCURVE SMOOTH",
"315 246 LINE SMOOTH",
"304 246 OFFCURVE",
"304 238 QCURVE SMOOTH",
"304 10 LINE SMOOTH",
"304 0 OFFCURVE",
"315 0 QCURVE",
"315 0 LINE",
"542 0 LINE SMOOTH",
"552 0 OFFCURVE"
);
}
);
width = 890;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"716 -16 OFFCURVE",
"882 -8 OFFCURVE",
"1003 -2 OFFCURVE",
"1024 0 QCURVE SMOOTH",
"1034 2 OFFCURVE",
"1034 10 QCURVE SMOOTH",
"1034 264 LINE SMOOTH",
"1034 274 OFFCURVE",
"1024 274 QCURVE",
"884 262 OFFCURVE",
"579 256 OFFCURVE",
"460 256 QCURVE SMOOTH",
"397 256 OFFCURVE",
"307 324 OFFCURVE",
"307 391 QCURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1108 OFFCURVE",
"395 1200 OFFCURVE",
"458 1202 QCURVE SMOOTH",
"589 1202 LINE SMOOTH",
"655 1202 OFFCURVE",
"741 1108 OFFCURVE",
"741 1040 QCURVE SMOOTH",
"739 731 LINE SMOOTH",
"739 637 OFFCURVE",
"721 569 OFFCURVE",
"686 569 QCURVE SMOOTH",
"657 569 OFFCURVE",
"635 643 OFFCURVE",
"635 731 QCURVE SMOOTH",
"635 1006 LINE SMOOTH",
"635 1012 OFFCURVE",
"628 1012 QCURVE SMOOTH",
"407 1012 LINE SMOOTH",
"399 1012 OFFCURVE",
"399 1006 QCURVE SMOOTH",
"399 737 LINE SMOOTH",
"399 569 OFFCURVE",
"540 350 OFFCURVE",
"678 350 QCURVE SMOOTH",
"792 350 OFFCURVE",
"927 453 OFFCURVE",
"989 629 OFFCURVE",
"989 737 QCURVE SMOOTH",
"991 1034 LINE SMOOTH",
"993 1145 OFFCURVE",
"888 1333 OFFCURVE",
"706 1448 OFFCURVE",
"589 1448 QCURVE SMOOTH",
"458 1448 LINE SMOOTH",
"350 1448 OFFCURVE",
"168 1335 OFFCURVE",
"59 1153 OFFCURVE",
"59 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 279 OFFCURVE",
"168 92 OFFCURVE",
"350 -20 OFFCURVE",
"460 -20 QCURVE",
"460 -20 LINE",
"538 -20 OFFCURVE"
);
}
);
width = 1107;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"20 0 QCURVE SMOOTH",
"248 0 LINE SMOOTH",
"256 0 OFFCURVE",
"258 10 QCURVE SMOOTH",
"280 160 LINE",
"559 160 LINE",
"581 10 LINE SMOOTH",
"583 0 OFFCURVE",
"592 0 QCURVE SMOOTH",
"819 0 LINE SMOOTH",
"829 0 OFFCURVE",
"827 10 QCURVE SMOOTH",
"583 1417 LINE SMOOTH",
"581 1425 OFFCURVE",
"573 1425 QCURVE SMOOTH",
"276 1425 LINE SMOOTH",
"268 1425 OFFCURVE",
"266 1417 QCURVE SMOOTH",
"12 10 LINE",
"12 10 LINE",
"12 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"413 954 LINE",
"422 1030 LINE",
"434 954 LINE",
"518 379 LINE",
"321 379 LINE"
);
}
);
width = 874;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"769 117 OFFCURVE",
"884 313 OFFCURVE",
"884 432 QCURVE SMOOTH",
"884 518 OFFCURVE",
"818 674 OFFCURVE",
"759 733 QCURVE",
"814 780 OFFCURVE",
"894 932 OFFCURVE",
"894 1020 QCURVE SMOOTH",
"894 1128 OFFCURVE",
"788 1313 OFFCURVE",
"603 1425 OFFCURVE",
"487 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"456 0 LINE SMOOTH",
"575 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"552 1182 OFFCURVE",
"646 1085 OFFCURVE",
"646 1020 QCURVE SMOOTH",
"646 961 OFFCURVE",
"558 860 OFFCURVE",
"487 860 QCURVE SMOOTH",
"331 860 LINE",
"331 860 LINE",
"331 1182 LINE",
"487 1182 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"530 612 OFFCURVE",
"636 506 OFFCURVE",
"636 432 QCURVE SMOOTH",
"636 358 OFFCURVE",
"530 250 OFFCURVE",
"456 250 QCURVE SMOOTH",
"329 250 LINE",
"329 250 LINE",
"331 612 LINE",
"456 612 LINE SMOOTH"
);
}
);
width = 950;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"751 92 OFFCURVE",
"860 281 OFFCURVE",
"860 397 QCURVE SMOOTH",
"860 492 LINE SMOOTH",
"860 500 OFFCURVE",
"852 500 QCURVE SMOOTH",
"620 500 LINE SMOOTH",
"612 500 OFFCURVE",
"612 492 QCURVE SMOOTH",
"612 397 LINE SMOOTH",
"612 332 OFFCURVE",
"524 227 OFFCURVE",
"458 227 QCURVE SMOOTH",
"395 227 OFFCURVE",
"307 322 OFFCURVE",
"307 397 QCURVE SMOOTH",
"307 1036 LINE SMOOTH",
"307 1102 OFFCURVE",
"385 1202 OFFCURVE",
"458 1202 QCURVE SMOOTH",
"524 1202 OFFCURVE",
"612 1104 OFFCURVE",
"612 1036 QCURVE SMOOTH",
"612 942 LINE SMOOTH",
"612 934 OFFCURVE",
"620 934 QCURVE SMOOTH",
"850 934 LINE SMOOTH",
"858 934 OFFCURVE",
"858 942 QCURVE SMOOTH",
"858 1036 LINE SMOOTH",
"858 1151 OFFCURVE",
"751 1337 OFFCURVE",
"571 1448 OFFCURVE",
"458 1448 QCURVE SMOOTH",
"346 1448 OFFCURVE",
"163 1335 OFFCURVE",
"59 1149 OFFCURVE",
"59 1036 QCURVE SMOOTH",
"57 397 LINE SMOOTH",
"57 281 OFFCURVE",
"163 92 OFFCURVE",
"346 -20 OFFCURVE",
"458 -20 QCURVE",
"458 -20 LINE",
"571 -20 OFFCURVE"
);
}
);
width = 927;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"771 119 OFFCURVE",
"886 313 OFFCURVE",
"886 432 QCURVE SMOOTH",
"886 1020 LINE SMOOTH",
"886 1133 OFFCURVE",
"775 1319 OFFCURVE",
"589 1430 OFFCURVE",
"476 1427 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"458 2 LINE SMOOTH",
"579 4 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"542 1184 OFFCURVE",
"638 1087 OFFCURVE",
"638 1022 QCURVE SMOOTH",
"638 432 LINE SMOOTH",
"638 358 OFFCURVE",
"534 252 OFFCURVE",
"458 252 QCURVE SMOOTH",
"331 252 LINE",
"331 252 LINE",
"333 1180 LINE",
"476 1182 LINE SMOOTH"
);
}
);
width = 966;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"759 8 QCURVE SMOOTH",
"759 242 LINE SMOOTH",
"759 252 OFFCURVE",
"751 252 QCURVE SMOOTH",
"329 252 LINE",
"329 610 LINE",
"751 610 LINE SMOOTH",
"759 610 OFFCURVE",
"759 618 QCURVE SMOOTH",
"757 850 LINE SMOOTH",
"757 858 OFFCURVE",
"749 858 QCURVE SMOOTH",
"329 858 LINE",
"329 1178 LINE",
"749 1178 LINE SMOOTH",
"757 1178 OFFCURVE",
"757 1186 QCURVE SMOOTH",
"757 1415 LINE SMOOTH",
"757 1425 OFFCURVE",
"749 1425 QCURVE SMOOTH",
"91 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"751 0 LINE SMOOTH",
"759 0 OFFCURVE"
);
}
);
width = 860;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"331 10 QCURVE SMOOTH",
"331 610 LINE",
"751 610 LINE SMOOTH",
"761 610 OFFCURVE",
"761 618 QCURVE SMOOTH",
"759 850 LINE SMOOTH",
"759 860 OFFCURVE",
"751 860 QCURVE SMOOTH",
"331 860 LINE",
"331 1178 LINE",
"751 1178 LINE SMOOTH",
"759 1178 OFFCURVE",
"759 1186 QCURVE SMOOTH",
"759 1417 LINE SMOOTH",
"759 1425 OFFCURVE",
"749 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"321 0 LINE SMOOTH",
"331 0 OFFCURVE"
);
}
);
width = 862;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"749 90 OFFCURVE",
"858 276 OFFCURVE",
"858 391 QCURVE SMOOTH",
"858 731 LINE SMOOTH",
"858 741 OFFCURVE",
"850 741 QCURVE SMOOTH",
"467 741 LINE SMOOTH",
"456 741 OFFCURVE",
"456 731 QCURVE SMOOTH",
"456 502 LINE SMOOTH",
"456 492 OFFCURVE",
"467 492 QCURVE SMOOTH",
"610 492 LINE",
"610 391 LINE SMOOTH",
"610 322 OFFCURVE",
"522 227 OFFCURVE",
"456 227 QCURVE SMOOTH",
"395 227 OFFCURVE",
"305 324 OFFCURVE",
"305 391 QCURVE SMOOTH",
"305 1040 LINE SMOOTH",
"305 1106 OFFCURVE",
"397 1204 OFFCURVE",
"456 1204 QCURVE SMOOTH",
"522 1204 OFFCURVE",
"610 1102 OFFCURVE",
"610 1024 QCURVE SMOOTH",
"610 946 LINE SMOOTH",
"610 938 OFFCURVE",
"618 938 QCURVE SMOOTH",
"848 938 LINE SMOOTH",
"858 938 OFFCURVE",
"858 946 QCURVE SMOOTH",
"858 1040 LINE SMOOTH",
"858 1155 OFFCURVE",
"751 1339 OFFCURVE",
"569 1448 OFFCURVE",
"456 1448 QCURVE SMOOTH",
"348 1448 OFFCURVE",
"166 1337 OFFCURVE",
"57 1151 OFFCURVE",
"57 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 276 OFFCURVE",
"166 90 OFFCURVE",
"346 -20 OFFCURVE",
"456 -20 QCURVE",
"456 -20 LINE",
"569 -20 OFFCURVE"
);
}
);
width = 921;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"329 612 LINE",
"636 612 LINE",
"636 10 LINE SMOOTH",
"636 0 OFFCURVE",
"646 0 QCURVE SMOOTH",
"876 0 LINE SMOOTH",
"886 0 OFFCURVE",
"886 10 QCURVE SMOOTH",
"882 1417 LINE SMOOTH",
"882 1425 OFFCURVE",
"872 1425 QCURVE SMOOTH",
"644 1425 LINE SMOOTH",
"636 1425 OFFCURVE",
"636 1417 QCURVE SMOOTH",
"636 860 LINE",
"329 860 LINE",
"331 1417 LINE SMOOTH",
"331 1425 OFFCURVE",
"321 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 972;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"331 10 QCURVE SMOOTH",
"329 1417 LINE SMOOTH",
"329 1425 OFFCURVE",
"321 1425 QCURVE SMOOTH",
"91 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"323 0 LINE SMOOTH",
"331 0 OFFCURVE"
);
}
);
width = 430;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"708 94 OFFCURVE",
"817 285 OFFCURVE",
"817 397 QCURVE SMOOTH",
"815 1413 LINE SMOOTH",
"815 1423 OFFCURVE",
"807 1423 QCURVE SMOOTH",
"577 1423 LINE SMOOTH",
"569 1423 OFFCURVE",
"569 1415 QCURVE SMOOTH",
"569 397 LINE SMOOTH",
"569 330 OFFCURVE",
"479 227 OFFCURVE",
"417 227 QCURVE SMOOTH",
"350 227 OFFCURVE",
"264 322 OFFCURVE",
"264 397 QCURVE SMOOTH",
"264 489 LINE SMOOTH",
"264 500 OFFCURVE",
"256 500 QCURVE SMOOTH",
"24 500 LINE SMOOTH",
"16 500 OFFCURVE",
"16 492 QCURVE SMOOTH",
"16 397 LINE SMOOTH",
"16 279 OFFCURVE",
"120 88 OFFCURVE",
"303 -20 OFFCURVE",
"417 -20 QCURVE",
"417 -20 LINE",
"528 -20 OFFCURVE"
);
}
);
width = 890;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"329 498 LINE",
"400 610 LINE",
"677 8 LINE",
"679 0 OFFCURVE",
"689 0 QCURVE SMOOTH",
"939 0 LINE SMOOTH",
"953 0 OFFCURVE",
"949 8 QCURVE SMOOTH",
"552 852 LINE",
"906 1417 LINE",
"910 1425 OFFCURVE",
"902 1425 QCURVE SMOOTH",
"667 1425 LINE SMOOTH",
"659 1425 OFFCURVE",
"652 1417 QCURVE",
"331 930 LINE",
"331 1415 LINE SMOOTH",
"331 1425 OFFCURVE",
"323 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1415 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 960;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"761 10 QCURVE SMOOTH",
"761 242 LINE SMOOTH",
"761 252 OFFCURVE",
"751 252 QCURVE SMOOTH",
"329 252 LINE",
"331 1415 LINE SMOOTH",
"331 1425 OFFCURVE",
"321 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1415 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"751 0 LINE SMOOTH",
"761 0 OFFCURVE"
);
}
);
width = 813;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"331 1055 LINE",
"544 743 LINE",
"759 1055 LINE",
"761 10 LINE SMOOTH",
"761 0 OFFCURVE",
"769 0 QCURVE SMOOTH",
"1001 0 LINE SMOOTH",
"1009 0 OFFCURVE",
"1009 10 QCURVE SMOOTH",
"1005 1417 LINE SMOOTH",
"1005 1425 OFFCURVE",
"996 1425 QCURVE SMOOTH",
"745 1425 LINE SMOOTH",
"736 1425 OFFCURVE",
"730 1417 QCURVE SMOOTH",
"544 1147 LINE",
"357 1417 LINE SMOOTH",
"351 1425 OFFCURVE",
"343 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 1099;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"323 16 QCURVE SMOOTH",
"308 754 LINE",
"663 0 LINE",
"843 0 LINE SMOOTH",
"853 0 OFFCURVE",
"853 12 QCURVE SMOOTH",
"851 1409 LINE SMOOTH",
"851 1425 OFFCURVE",
"839 1425 QCURVE SMOOTH",
"636 1425 LINE SMOOTH",
"618 1425 OFFCURVE",
"618 1409 QCURVE SMOOTH",
"628 618 LINE",
"282 1425 LINE",
"97 1425 LINE SMOOTH",
"81 1425 OFFCURVE",
"81 1409 QCURVE SMOOTH",
"83 14 LINE SMOOTH",
"83 0 OFFCURVE",
"99 0 QCURVE",
"99 0 LINE",
"304 0 LINE SMOOTH",
"323 0 OFFCURVE"
);
}
);
width = 950;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"753 92 OFFCURVE",
"862 279 OFFCURVE",
"862 391 QCURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1153 OFFCURVE",
"751 1337 OFFCURVE",
"571 1448 OFFCURVE",
"460 1448 QCURVE SMOOTH",
"352 1448 OFFCURVE",
"168 1337 OFFCURVE",
"59 1153 OFFCURVE",
"59 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 279 OFFCURVE",
"168 92 OFFCURVE",
"350 -20 OFFCURVE",
"460 -20 QCURVE",
"460 -20 LINE",
"571 -20 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"307 324 OFFCURVE",
"307 391 QCURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1110 OFFCURVE",
"397 1202 OFFCURVE",
"460 1202 QCURVE SMOOTH",
"526 1202 OFFCURVE",
"612 1108 OFFCURVE",
"612 1040 QCURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 328 OFFCURVE",
"522 227 OFFCURVE",
"460 227 QCURVE",
"460 227 LINE",
"397 227 OFFCURVE"
);
}
);
width = 935;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"331 10 QCURVE SMOOTH",
"331 526 LINE",
"487 526 LINE SMOOTH",
"595 526 OFFCURVE",
"779 641 OFFCURVE",
"894 854 OFFCURVE",
"894 999 QCURVE SMOOTH",
"894 1196 OFFCURVE",
"675 1425 OFFCURVE",
"487 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"321 0 LINE SMOOTH",
"331 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"562 1182 OFFCURVE",
"648 1079 OFFCURVE",
"648 999 QCURVE SMOOTH",
"648 899 OFFCURVE",
"552 774 OFFCURVE",
"487 774 QCURVE SMOOTH",
"331 774 LINE",
"331 774 LINE",
"331 1180 LINE",
"487 1182 LINE SMOOTH"
);
}
);
width = 935;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"770 -131 QCURVE",
"931 31 LINE SMOOTH",
"938 37 OFFCURVE",
"929 45 QCURVE SMOOTH",
"802 174 LINE",
"829 221 OFFCURVE",
"862 332 OFFCURVE",
"862 391 QCURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1155 OFFCURVE",
"751 1339 OFFCURVE",
"569 1448 OFFCURVE",
"460 1448 QCURVE SMOOTH",
"348 1448 OFFCURVE",
"166 1335 OFFCURVE",
"59 1149 OFFCURVE",
"59 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 279 OFFCURVE",
"168 90 OFFCURVE",
"352 -20 OFFCURVE",
"460 -20 QCURVE SMOOTH",
"540 -20 OFFCURVE",
"614 12 QCURVE",
"755 -131 LINE",
"755 -131 LINE",
"762 -137 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"307 317 OFFCURVE",
"307 391 QCURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1104 OFFCURVE",
"391 1202 OFFCURVE",
"460 1202 QCURVE SMOOTH",
"526 1202 OFFCURVE",
"612 1106 OFFCURVE",
"612 1040 QCURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 332 OFFCURVE",
"530 227 OFFCURVE",
"460 227 QCURVE",
"460 227 LINE",
"403 227 OFFCURVE"
);
}
);
width = 954;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"331 612 LINE",
"466 612 LINE SMOOTH",
"542 612 OFFCURVE",
"646 504 OFFCURVE",
"646 430 QCURVE SMOOTH",
"646 6 LINE SMOOTH",
"646 0 OFFCURVE",
"654 0 QCURVE SMOOTH",
"886 0 LINE SMOOTH",
"896 0 OFFCURVE",
"896 10 QCURVE SMOOTH",
"894 430 LINE SMOOTH",
"894 596 OFFCURVE",
"783 719 QCURVE",
"808 739 OFFCURVE",
"869 823 OFFCURVE",
"915 944 OFFCURVE",
"915 1020 QCURVE SMOOTH",
"915 1135 OFFCURVE",
"804 1317 OFFCURVE",
"618 1425 OFFCURVE",
"507 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"573 1180 OFFCURVE",
"669 1085 OFFCURVE",
"669 1020 QCURVE SMOOTH",
"669 952 OFFCURVE",
"570 858 OFFCURVE",
"507 858 QCURVE SMOOTH",
"331 858 LINE",
"331 858 LINE",
"331 1180 LINE",
"507 1180 LINE SMOOTH"
);
}
);
width = 987;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"722 88 OFFCURVE",
"831 274 OFFCURVE",
"831 391 QCURVE SMOOTH",
"831 512 OFFCURVE",
"712 678 OFFCURVE",
"610 735 QCURVE SMOOTH",
"603 739 OFFCURVE",
"548 768 OFFCURVE",
"479 807 OFFCURVE",
"419 838 OFFCURVE",
"409 844 QCURVE SMOOTH",
"333 885 OFFCURVE",
"276 975 OFFCURVE",
"276 1042 QCURVE SMOOTH",
"276 1108 OFFCURVE",
"366 1204 OFFCURVE",
"429 1204 QCURVE SMOOTH",
"491 1204 OFFCURVE",
"581 1114 OFFCURVE",
"581 1042 QCURVE SMOOTH",
"583 874 LINE SMOOTH",
"583 866 OFFCURVE",
"591 866 QCURVE SMOOTH",
"821 866 LINE SMOOTH",
"829 866 OFFCURVE",
"829 874 QCURVE SMOOTH",
"829 1042 LINE SMOOTH",
"829 1155 OFFCURVE",
"720 1337 OFFCURVE",
"538 1446 OFFCURVE",
"429 1446 QCURVE SMOOTH",
"323 1446 OFFCURVE",
"141 1339 OFFCURVE",
"30 1157 OFFCURVE",
"30 1042 QCURVE SMOOTH",
"30 918 OFFCURVE",
"139 719 OFFCURVE",
"251 653 QCURVE SMOOTH",
"313 618 OFFCURVE",
"452 541 OFFCURVE",
"485 522 QCURVE SMOOTH",
"583 467 OFFCURVE",
"583 391 QCURVE SMOOTH",
"583 326 OFFCURVE",
"493 227 OFFCURVE",
"429 227 QCURVE SMOOTH",
"366 227 OFFCURVE",
"276 324 OFFCURVE",
"276 391 QCURVE SMOOTH",
"276 485 LINE SMOOTH",
"276 496 OFFCURVE",
"268 496 QCURVE SMOOTH",
"38 496 LINE SMOOTH",
"28 496 OFFCURVE",
"28 485 QCURVE SMOOTH",
"28 391 LINE SMOOTH",
"28 279 OFFCURVE",
"137 92 OFFCURVE",
"319 -20 OFFCURVE",
"429 -20 QCURVE",
"429 -20 LINE",
"540 -20 OFFCURVE"
);
}
);
width = 892;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"526 10 QCURVE SMOOTH",
"524 1178 LINE",
"793 1178 LINE SMOOTH",
"801 1178 OFFCURVE",
"801 1188 QCURVE SMOOTH",
"801 1417 LINE SMOOTH",
"801 1425 OFFCURVE",
"790 1425 QCURVE SMOOTH",
"12 1425 LINE SMOOTH",
"4 1425 OFFCURVE",
"4 1417 QCURVE SMOOTH",
"2 1188 LINE SMOOTH",
"2 1178 OFFCURVE",
"12 1178 QCURVE SMOOTH",
"278 1178 LINE",
"278 10 LINE SMOOTH",
"278 0 OFFCURVE",
"287 0 QCURVE",
"287 0 LINE",
"518 0 LINE SMOOTH",
"526 0 OFFCURVE"
);
}
);
width = 819;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"753 90 OFFCURVE",
"862 279 OFFCURVE",
"862 393 QCURVE SMOOTH",
"858 1417 LINE SMOOTH",
"858 1425 OFFCURVE",
"850 1425 QCURVE SMOOTH",
"620 1425 LINE SMOOTH",
"612 1425 OFFCURVE",
"612 1417 QCURVE SMOOTH",
"612 393 LINE SMOOTH",
"612 324 OFFCURVE",
"524 227 OFFCURVE",
"458 227 QCURVE SMOOTH",
"395 227 OFFCURVE",
"307 324 OFFCURVE",
"307 393 QCURVE SMOOTH",
"307 1417 LINE SMOOTH",
"307 1425 OFFCURVE",
"299 1425 QCURVE SMOOTH",
"69 1425 LINE SMOOTH",
"61 1425 OFFCURVE",
"61 1417 QCURVE SMOOTH",
"57 393 LINE SMOOTH",
"57 281 OFFCURVE",
"166 92 OFFCURVE",
"350 -20 OFFCURVE",
"458 -20 QCURVE",
"458 -20 LINE",
"571 -20 OFFCURVE"
);
}
);
width = 942;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"569 10 QCURVE SMOOTH",
"847 1417 LINE",
"850 1425 OFFCURVE",
"839 1425 QCURVE SMOOTH",
"610 1425 LINE SMOOTH",
"602 1425 OFFCURVE",
"600 1417 QCURVE SMOOTH",
"436 479 LINE",
"268 1417 LINE SMOOTH",
"266 1425 OFFCURVE",
"258 1425 QCURVE SMOOTH",
"26 1425 LINE SMOOTH",
"16 1425 OFFCURVE",
"18 1417 QCURVE SMOOTH",
"301 10 LINE SMOOTH",
"303 0 OFFCURVE",
"311 0 QCURVE",
"311 0 LINE",
"559 0 LINE SMOOTH",
"567 0 OFFCURVE"
);
}
);
width = 886;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"528 10 QCURVE SMOOTH",
"632 745 LINE",
"737 10 LINE",
"741 0 OFFCURVE",
"747 0 QCURVE SMOOTH",
"995 0 LINE",
"995 0 OFFCURVE",
"1003 6 OFFCURVE",
"1005 10 QCURVE",
"1249 1417 LINE SMOOTH",
"1251 1425 OFFCURVE",
"1241 1425 QCURVE SMOOTH",
"1013 1425 LINE SMOOTH",
"1005 1425 OFFCURVE",
"1003 1417 QCURVE",
"870 492 LINE",
"737 1417 LINE",
"735 1425 OFFCURVE",
"727 1425 QCURVE SMOOTH",
"542 1425 LINE SMOOTH",
"532 1425 OFFCURVE",
"530 1417 QCURVE",
"395 492 LINE",
"264 1417 LINE",
"262 1425 OFFCURVE",
"254 1425 QCURVE SMOOTH",
"24 1425 LINE SMOOTH",
"16 1425 OFFCURVE",
"18 1417 QCURVE SMOOTH",
"260 10 LINE SMOOTH",
"262 0 OFFCURVE",
"270 0 QCURVE",
"270 0 LINE",
"518 0 LINE SMOOTH",
"526 0 OFFCURVE"
);
}
);
width = 1288;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"260 10 QCURVE SMOOTH",
"401 539 LINE",
"540 10 LINE",
"545 0 OFFCURVE",
"553 0 QCURVE SMOOTH",
"782 0 LINE SMOOTH",
"792 0 OFFCURVE",
"788 10 QCURVE SMOOTH",
"557 743 LINE",
"786 1417 LINE SMOOTH",
"788 1425 OFFCURVE",
"780 1425 QCURVE SMOOTH",
"553 1425 LINE SMOOTH",
"542 1425 OFFCURVE",
"540 1417 QCURVE SMOOTH",
"401 930 LINE",
"264 1417 LINE SMOOTH",
"262 1425 OFFCURVE",
"252 1425 QCURVE SMOOTH",
"22 1425 LINE SMOOTH",
"14 1425 OFFCURVE",
"16 1417 QCURVE SMOOTH",
"246 741 LINE",
"12 10 LINE",
"10 0 OFFCURVE",
"18 0 QCURVE",
"18 0 LINE",
"248 0 LINE SMOOTH",
"258 0 OFFCURVE"
);
}
);
width = 827;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"516 8 QCURVE SMOOTH",
"514 598 LINE",
"791 1417 LINE SMOOTH",
"793 1425 OFFCURVE",
"785 1425 QCURVE SMOOTH",
"555 1425 LINE SMOOTH",
"547 1425 OFFCURVE",
"545 1417 QCURVE SMOOTH",
"391 866 LINE",
"240 1417 LINE SMOOTH",
"238 1425 OFFCURVE",
"228 1425 QCURVE SMOOTH",
"0 1425 LINE SMOOTH",
"-8 1425 OFFCURVE",
"-6 1417 QCURVE SMOOTH",
"268 590 LINE",
"266 8 LINE SMOOTH",
"266 0 OFFCURVE",
"273 0 QCURVE",
"273 0 LINE",
"508 0 LINE SMOOTH",
"516 0 OFFCURVE"
);
}
);
width = 821;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"800 10 QCURVE SMOOTH",
"798 229 LINE SMOOTH",
"798 240 OFFCURVE",
"790 240 QCURVE SMOOTH",
"297 240 LINE",
"796 1194 LINE",
"796 1415 LINE SMOOTH",
"796 1425 OFFCURVE",
"786 1425 QCURVE SMOOTH",
"45 1425 LINE SMOOTH",
"36 1425 OFFCURVE",
"36 1415 QCURVE SMOOTH",
"36 1200 LINE SMOOTH",
"36 1192 OFFCURVE",
"45 1192 QCURVE SMOOTH",
"520 1192 LINE",
"18 233 LINE",
"16 10 LINE SMOOTH",
"16 0 OFFCURVE",
"26 0 QCURVE",
"26 0 LINE",
"790 0 LINE SMOOTH",
"800 0 OFFCURVE"
);
}
);
width = 847;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"605 8 QCURVE SMOOTH",
"605 231 LINE SMOOTH",
"605 240 OFFCURVE",
"595 240 QCURVE SMOOTH",
"313 240 LINE",
"313 1186 LINE",
"595 1186 LINE SMOOTH",
"605 1186 OFFCURVE",
"605 1194 QCURVE SMOOTH",
"605 1417 LINE SMOOTH",
"605 1425 OFFCURVE",
"595 1425 QCURVE SMOOTH",
"83 1425 LINE SMOOTH",
"75 1425 OFFCURVE",
"75 1417 QCURVE SMOOTH",
"75 8 LINE SMOOTH",
"75 0 OFFCURVE",
"83 0 QCURVE",
"83 0 LINE",
"595 0 LINE SMOOTH",
"605 0 OFFCURVE"
);
}
);
width = 684;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"553 10 QCURVE SMOOTH",
"294 1417 LINE SMOOTH",
"292 1425 OFFCURVE",
"284 1425 QCURVE SMOOTH",
"71 1425 LINE SMOOTH",
"61 1425 OFFCURVE",
"63 1417 QCURVE SMOOTH",
"319 10 LINE SMOOTH",
"321 0 OFFCURVE",
"329 0 QCURVE",
"329 0 LINE",
"544 0 LINE SMOOTH",
"555 0 OFFCURVE"
);
}
);
width = 616;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"607 8 QCURVE SMOOTH",
"607 1417 LINE SMOOTH",
"607 1425 OFFCURVE",
"599 1425 QCURVE SMOOTH",
"87 1425 LINE SMOOTH",
"77 1425 OFFCURVE",
"77 1417 QCURVE SMOOTH",
"77 1194 LINE SMOOTH",
"77 1186 OFFCURVE",
"87 1186 QCURVE SMOOTH",
"370 1186 LINE",
"370 240 LINE",
"87 240 LINE SMOOTH",
"77 240 OFFCURVE",
"77 231 QCURVE SMOOTH",
"77 8 LINE SMOOTH",
"77 0 OFFCURVE",
"87 0 QCURVE",
"87 0 LINE",
"599 0 LINE SMOOTH",
"607 0 OFFCURVE"
);
}
);
width = 684;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"687 967 LINE",
"409 1401 LINE",
"396 1417 OFFCURVE",
"333 1417 OFFCURVE",
"317 1401 QCURVE",
"38 965 LINE",
"188 856 LINE",
"188 856 LINE",
"362 1141 LINE",
"538 856 LINE"
);
}
);
width = 753;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1033 -207 QCURVE SMOOTH",
"1033 2 LINE SMOOTH",
"1033 10 OFFCURVE",
"1025 10 QCURVE SMOOTH",
"89 10 LINE SMOOTH",
"81 10 OFFCURVE",
"81 2 QCURVE SMOOTH",
"81 -207 LINE SMOOTH",
"81 -215 OFFCURVE",
"89 -215 QCURVE",
"89 -215 LINE",
"1025 -215 LINE SMOOTH",
"1033 -215 OFFCURVE"
);
}
);
width = 1120;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 1534 OFFCURVE",
"497 1542 QCURVE",
"333 1896 LINE",
"331 1905 OFFCURVE",
"323 1905 QCURVE SMOOTH",
"89 1905 LINE SMOOTH",
"77 1905 OFFCURVE",
"81 1896 QCURVE SMOOTH",
"272 1542 LINE SMOOTH",
"276 1534 OFFCURVE",
"284 1534 QCURVE SMOOTH",
"489 1534 LINE SMOOTH"
);
}
);
width = 583;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"20 0 QCURVE SMOOTH",
"248 0 LINE SMOOTH",
"256 0 OFFCURVE",
"258 10 QCURVE SMOOTH",
"280 160 LINE",
"559 160 LINE",
"581 10 LINE SMOOTH",
"583 0 OFFCURVE",
"592 0 QCURVE SMOOTH",
"819 0 LINE SMOOTH",
"829 0 OFFCURVE",
"827 10 QCURVE SMOOTH",
"583 1417 LINE SMOOTH",
"581 1425 OFFCURVE",
"573 1425 QCURVE SMOOTH",
"276 1425 LINE SMOOTH",
"268 1425 OFFCURVE",
"266 1417 QCURVE SMOOTH",
"12 10 LINE",
"12 10 LINE",
"12 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"413 954 LINE",
"422 1030 LINE",
"434 954 LINE",
"518 379 LINE",
"321 379 LINE"
);
}
);
width = 874;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"769 117 OFFCURVE",
"884 313 OFFCURVE",
"884 432 QCURVE SMOOTH",
"884 518 OFFCURVE",
"818 674 OFFCURVE",
"759 733 QCURVE",
"814 780 OFFCURVE",
"894 932 OFFCURVE",
"894 1020 QCURVE SMOOTH",
"894 1128 OFFCURVE",
"788 1313 OFFCURVE",
"603 1425 OFFCURVE",
"487 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"456 0 LINE SMOOTH",
"575 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"552 1182 OFFCURVE",
"646 1085 OFFCURVE",
"646 1020 QCURVE SMOOTH",
"646 961 OFFCURVE",
"558 860 OFFCURVE",
"487 860 QCURVE SMOOTH",
"331 860 LINE",
"331 860 LINE",
"331 1182 LINE",
"487 1182 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"530 612 OFFCURVE",
"636 506 OFFCURVE",
"636 432 QCURVE SMOOTH",
"636 358 OFFCURVE",
"530 250 OFFCURVE",
"456 250 QCURVE SMOOTH",
"329 250 LINE",
"329 250 LINE",
"331 612 LINE",
"456 612 LINE SMOOTH"
);
}
);
width = 950;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"751 92 OFFCURVE",
"860 281 OFFCURVE",
"860 397 QCURVE SMOOTH",
"860 492 LINE SMOOTH",
"860 500 OFFCURVE",
"852 500 QCURVE SMOOTH",
"620 500 LINE SMOOTH",
"612 500 OFFCURVE",
"612 492 QCURVE SMOOTH",
"612 397 LINE SMOOTH",
"612 332 OFFCURVE",
"524 227 OFFCURVE",
"458 227 QCURVE SMOOTH",
"395 227 OFFCURVE",
"307 322 OFFCURVE",
"307 397 QCURVE SMOOTH",
"307 1036 LINE SMOOTH",
"307 1102 OFFCURVE",
"385 1202 OFFCURVE",
"458 1202 QCURVE SMOOTH",
"524 1202 OFFCURVE",
"612 1104 OFFCURVE",
"612 1036 QCURVE SMOOTH",
"612 942 LINE SMOOTH",
"612 934 OFFCURVE",
"620 934 QCURVE SMOOTH",
"850 934 LINE SMOOTH",
"858 934 OFFCURVE",
"858 942 QCURVE SMOOTH",
"858 1036 LINE SMOOTH",
"858 1151 OFFCURVE",
"751 1337 OFFCURVE",
"571 1448 OFFCURVE",
"458 1448 QCURVE SMOOTH",
"346 1448 OFFCURVE",
"163 1335 OFFCURVE",
"59 1149 OFFCURVE",
"59 1036 QCURVE SMOOTH",
"57 397 LINE SMOOTH",
"57 281 OFFCURVE",
"163 92 OFFCURVE",
"346 -20 OFFCURVE",
"458 -20 QCURVE",
"458 -20 LINE",
"571 -20 OFFCURVE"
);
}
);
width = 927;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"771 119 OFFCURVE",
"886 313 OFFCURVE",
"886 432 QCURVE SMOOTH",
"886 1020 LINE SMOOTH",
"886 1133 OFFCURVE",
"775 1319 OFFCURVE",
"589 1430 OFFCURVE",
"476 1427 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"458 2 LINE SMOOTH",
"579 4 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"542 1184 OFFCURVE",
"638 1087 OFFCURVE",
"638 1022 QCURVE SMOOTH",
"638 432 LINE SMOOTH",
"638 358 OFFCURVE",
"534 252 OFFCURVE",
"458 252 QCURVE SMOOTH",
"331 252 LINE",
"331 252 LINE",
"333 1180 LINE",
"476 1182 LINE SMOOTH"
);
}
);
width = 966;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"759 8 QCURVE SMOOTH",
"759 242 LINE SMOOTH",
"759 252 OFFCURVE",
"751 252 QCURVE SMOOTH",
"329 252 LINE",
"329 610 LINE",
"751 610 LINE SMOOTH",
"759 610 OFFCURVE",
"759 618 QCURVE SMOOTH",
"757 850 LINE SMOOTH",
"757 858 OFFCURVE",
"749 858 QCURVE SMOOTH",
"329 858 LINE",
"329 1178 LINE",
"749 1178 LINE SMOOTH",
"757 1178 OFFCURVE",
"757 1186 QCURVE SMOOTH",
"757 1415 LINE SMOOTH",
"757 1425 OFFCURVE",
"749 1425 QCURVE SMOOTH",
"91 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"751 0 LINE SMOOTH",
"759 0 OFFCURVE"
);
}
);
width = 860;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"331 10 QCURVE SMOOTH",
"331 610 LINE",
"751 610 LINE SMOOTH",
"761 610 OFFCURVE",
"761 618 QCURVE SMOOTH",
"759 850 LINE SMOOTH",
"759 860 OFFCURVE",
"751 860 QCURVE SMOOTH",
"331 860 LINE",
"331 1178 LINE",
"751 1178 LINE SMOOTH",
"759 1178 OFFCURVE",
"759 1186 QCURVE SMOOTH",
"759 1417 LINE SMOOTH",
"759 1425 OFFCURVE",
"749 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"321 0 LINE SMOOTH",
"331 0 OFFCURVE"
);
}
);
width = 862;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"749 90 OFFCURVE",
"858 276 OFFCURVE",
"858 391 QCURVE SMOOTH",
"858 731 LINE SMOOTH",
"858 741 OFFCURVE",
"850 741 QCURVE SMOOTH",
"467 741 LINE SMOOTH",
"456 741 OFFCURVE",
"456 731 QCURVE SMOOTH",
"456 502 LINE SMOOTH",
"456 492 OFFCURVE",
"467 492 QCURVE SMOOTH",
"610 492 LINE",
"610 391 LINE SMOOTH",
"610 322 OFFCURVE",
"522 227 OFFCURVE",
"456 227 QCURVE SMOOTH",
"395 227 OFFCURVE",
"305 324 OFFCURVE",
"305 391 QCURVE SMOOTH",
"305 1040 LINE SMOOTH",
"305 1106 OFFCURVE",
"397 1204 OFFCURVE",
"456 1204 QCURVE SMOOTH",
"522 1204 OFFCURVE",
"610 1102 OFFCURVE",
"610 1024 QCURVE SMOOTH",
"610 946 LINE SMOOTH",
"610 938 OFFCURVE",
"618 938 QCURVE SMOOTH",
"848 938 LINE SMOOTH",
"858 938 OFFCURVE",
"858 946 QCURVE SMOOTH",
"858 1040 LINE SMOOTH",
"858 1155 OFFCURVE",
"751 1339 OFFCURVE",
"569 1448 OFFCURVE",
"456 1448 QCURVE SMOOTH",
"348 1448 OFFCURVE",
"166 1337 OFFCURVE",
"57 1151 OFFCURVE",
"57 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 276 OFFCURVE",
"166 90 OFFCURVE",
"346 -20 OFFCURVE",
"456 -20 QCURVE",
"456 -20 LINE",
"569 -20 OFFCURVE"
);
}
);
width = 921;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"329 612 LINE",
"636 612 LINE",
"636 10 LINE SMOOTH",
"636 0 OFFCURVE",
"646 0 QCURVE SMOOTH",
"876 0 LINE SMOOTH",
"886 0 OFFCURVE",
"886 10 QCURVE SMOOTH",
"882 1417 LINE SMOOTH",
"882 1425 OFFCURVE",
"872 1425 QCURVE SMOOTH",
"644 1425 LINE SMOOTH",
"636 1425 OFFCURVE",
"636 1417 QCURVE SMOOTH",
"636 860 LINE",
"329 860 LINE",
"331 1417 LINE SMOOTH",
"331 1425 OFFCURVE",
"321 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 972;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"331 10 QCURVE SMOOTH",
"329 1417 LINE SMOOTH",
"329 1425 OFFCURVE",
"321 1425 QCURVE SMOOTH",
"91 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"323 0 LINE SMOOTH",
"331 0 OFFCURVE"
);
}
);
width = 430;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"708 94 OFFCURVE",
"817 285 OFFCURVE",
"817 397 QCURVE SMOOTH",
"815 1413 LINE SMOOTH",
"815 1423 OFFCURVE",
"807 1423 QCURVE SMOOTH",
"577 1423 LINE SMOOTH",
"569 1423 OFFCURVE",
"569 1415 QCURVE SMOOTH",
"569 397 LINE SMOOTH",
"569 330 OFFCURVE",
"479 227 OFFCURVE",
"417 227 QCURVE SMOOTH",
"350 227 OFFCURVE",
"264 322 OFFCURVE",
"264 397 QCURVE SMOOTH",
"264 489 LINE SMOOTH",
"264 500 OFFCURVE",
"256 500 QCURVE SMOOTH",
"24 500 LINE SMOOTH",
"16 500 OFFCURVE",
"16 492 QCURVE SMOOTH",
"16 397 LINE SMOOTH",
"16 279 OFFCURVE",
"120 88 OFFCURVE",
"303 -20 OFFCURVE",
"417 -20 QCURVE",
"417 -20 LINE",
"528 -20 OFFCURVE"
);
}
);
width = 890;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"329 498 LINE",
"400 610 LINE",
"677 8 LINE",
"679 0 OFFCURVE",
"689 0 QCURVE SMOOTH",
"939 0 LINE SMOOTH",
"953 0 OFFCURVE",
"949 8 QCURVE SMOOTH",
"552 852 LINE",
"906 1417 LINE",
"910 1425 OFFCURVE",
"902 1425 QCURVE SMOOTH",
"667 1425 LINE SMOOTH",
"659 1425 OFFCURVE",
"652 1417 QCURVE",
"331 930 LINE",
"331 1415 LINE SMOOTH",
"331 1425 OFFCURVE",
"323 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1415 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 960;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"761 10 QCURVE SMOOTH",
"761 242 LINE SMOOTH",
"761 252 OFFCURVE",
"751 252 QCURVE SMOOTH",
"329 252 LINE",
"331 1415 LINE SMOOTH",
"331 1425 OFFCURVE",
"321 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"83 1425 OFFCURVE",
"83 1415 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"751 0 LINE SMOOTH",
"761 0 OFFCURVE"
);
}
);
width = 813;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"331 1055 LINE",
"544 743 LINE",
"759 1055 LINE",
"761 10 LINE SMOOTH",
"761 0 OFFCURVE",
"769 0 QCURVE SMOOTH",
"1001 0 LINE SMOOTH",
"1009 0 OFFCURVE",
"1009 10 QCURVE SMOOTH",
"1005 1417 LINE SMOOTH",
"1005 1425 OFFCURVE",
"996 1425 QCURVE SMOOTH",
"745 1425 LINE SMOOTH",
"736 1425 OFFCURVE",
"730 1417 QCURVE SMOOTH",
"544 1147 LINE",
"357 1417 LINE SMOOTH",
"351 1425 OFFCURVE",
"343 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
}
);
width = 1099;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"323 16 QCURVE SMOOTH",
"308 754 LINE",
"663 0 LINE",
"843 0 LINE SMOOTH",
"853 0 OFFCURVE",
"853 12 QCURVE SMOOTH",
"851 1409 LINE SMOOTH",
"851 1425 OFFCURVE",
"839 1425 QCURVE SMOOTH",
"636 1425 LINE SMOOTH",
"618 1425 OFFCURVE",
"618 1409 QCURVE SMOOTH",
"628 618 LINE",
"282 1425 LINE",
"97 1425 LINE SMOOTH",
"81 1425 OFFCURVE",
"81 1409 QCURVE SMOOTH",
"83 14 LINE SMOOTH",
"83 0 OFFCURVE",
"99 0 QCURVE",
"99 0 LINE",
"304 0 LINE SMOOTH",
"323 0 OFFCURVE"
);
}
);
width = 950;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"753 92 OFFCURVE",
"862 279 OFFCURVE",
"862 391 QCURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1153 OFFCURVE",
"751 1337 OFFCURVE",
"571 1448 OFFCURVE",
"460 1448 QCURVE SMOOTH",
"352 1448 OFFCURVE",
"168 1337 OFFCURVE",
"59 1153 OFFCURVE",
"59 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 279 OFFCURVE",
"168 92 OFFCURVE",
"350 -20 OFFCURVE",
"460 -20 QCURVE",
"460 -20 LINE",
"571 -20 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"307 324 OFFCURVE",
"307 391 QCURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1110 OFFCURVE",
"397 1202 OFFCURVE",
"460 1202 QCURVE SMOOTH",
"526 1202 OFFCURVE",
"612 1108 OFFCURVE",
"612 1040 QCURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 328 OFFCURVE",
"522 227 OFFCURVE",
"460 227 QCURVE",
"460 227 LINE",
"397 227 OFFCURVE"
);
}
);
width = 935;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"331 10 QCURVE SMOOTH",
"331 526 LINE",
"487 526 LINE SMOOTH",
"595 526 OFFCURVE",
"779 641 OFFCURVE",
"894 854 OFFCURVE",
"894 999 QCURVE SMOOTH",
"894 1196 OFFCURVE",
"675 1425 OFFCURVE",
"487 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"91 0 QCURVE",
"91 0 LINE",
"321 0 LINE SMOOTH",
"331 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"562 1182 OFFCURVE",
"648 1079 OFFCURVE",
"648 999 QCURVE SMOOTH",
"648 899 OFFCURVE",
"552 774 OFFCURVE",
"487 774 QCURVE SMOOTH",
"331 774 LINE",
"331 774 LINE",
"331 1180 LINE",
"487 1182 LINE SMOOTH"
);
}
);
width = 952;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"770 -131 QCURVE",
"931 31 LINE SMOOTH",
"938 37 OFFCURVE",
"929 45 QCURVE SMOOTH",
"802 174 LINE",
"829 221 OFFCURVE",
"862 332 OFFCURVE",
"862 391 QCURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1155 OFFCURVE",
"751 1339 OFFCURVE",
"569 1448 OFFCURVE",
"460 1448 QCURVE SMOOTH",
"348 1448 OFFCURVE",
"166 1335 OFFCURVE",
"59 1149 OFFCURVE",
"59 1040 QCURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 279 OFFCURVE",
"168 90 OFFCURVE",
"352 -20 OFFCURVE",
"460 -20 QCURVE SMOOTH",
"540 -20 OFFCURVE",
"614 12 QCURVE",
"755 -131 LINE",
"755 -131 LINE",
"762 -137 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"307 317 OFFCURVE",
"307 391 QCURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1104 OFFCURVE",
"391 1202 OFFCURVE",
"460 1202 QCURVE SMOOTH",
"526 1202 OFFCURVE",
"612 1106 OFFCURVE",
"612 1040 QCURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 332 OFFCURVE",
"530 227 OFFCURVE",
"460 227 QCURVE",
"460 227 LINE",
"403 227 OFFCURVE"
);
}
);
width = 954;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"329 10 QCURVE SMOOTH",
"331 612 LINE",
"466 612 LINE SMOOTH",
"542 612 OFFCURVE",
"646 504 OFFCURVE",
"646 430 QCURVE SMOOTH",
"646 6 LINE SMOOTH",
"646 0 OFFCURVE",
"654 0 QCURVE SMOOTH",
"886 0 LINE SMOOTH",
"896 0 OFFCURVE",
"896 10 QCURVE SMOOTH",
"894 430 LINE SMOOTH",
"894 596 OFFCURVE",
"783 719 QCURVE",
"808 739 OFFCURVE",
"869 823 OFFCURVE",
"915 944 OFFCURVE",
"915 1020 QCURVE SMOOTH",
"915 1135 OFFCURVE",
"804 1317 OFFCURVE",
"618 1425 OFFCURVE",
"507 1425 QCURVE SMOOTH",
"93 1425 LINE SMOOTH",
"85 1425 OFFCURVE",
"85 1417 QCURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"321 0 LINE SMOOTH",
"329 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"573 1180 OFFCURVE",
"669 1085 OFFCURVE",
"669 1020 QCURVE SMOOTH",
"669 952 OFFCURVE",
"570 858 OFFCURVE",
"507 858 QCURVE SMOOTH",
"331 858 LINE",
"331 858 LINE",
"331 1180 LINE",
"507 1180 LINE SMOOTH"
);
}
);
width = 987;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"722 88 OFFCURVE",
"831 274 OFFCURVE",
"831 391 QCURVE SMOOTH",
"831 512 OFFCURVE",
"712 678 OFFCURVE",
"610 735 QCURVE SMOOTH",
"603 739 OFFCURVE",
"548 768 OFFCURVE",
"479 807 OFFCURVE",
"419 838 OFFCURVE",
"409 844 QCURVE SMOOTH",
"333 885 OFFCURVE",
"276 975 OFFCURVE",
"276 1042 QCURVE SMOOTH",
"276 1108 OFFCURVE",
"366 1204 OFFCURVE",
"429 1204 QCURVE SMOOTH",
"491 1204 OFFCURVE",
"581 1114 OFFCURVE",
"581 1042 QCURVE SMOOTH",
"583 874 LINE SMOOTH",
"583 866 OFFCURVE",
"591 866 QCURVE SMOOTH",
"821 866 LINE SMOOTH",
"829 866 OFFCURVE",
"829 874 QCURVE SMOOTH",
"829 1042 LINE SMOOTH",
"829 1155 OFFCURVE",
"720 1337 OFFCURVE",
"538 1446 OFFCURVE",
"429 1446 QCURVE SMOOTH",
"323 1446 OFFCURVE",
"141 1339 OFFCURVE",
"30 1157 OFFCURVE",
"30 1042 QCURVE SMOOTH",
"30 918 OFFCURVE",
"139 719 OFFCURVE",
"251 653 QCURVE SMOOTH",
"313 618 OFFCURVE",
"452 541 OFFCURVE",
"485 522 QCURVE SMOOTH",
"583 467 OFFCURVE",
"583 391 QCURVE SMOOTH",
"583 326 OFFCURVE",
"493 227 OFFCURVE",
"429 227 QCURVE SMOOTH",
"366 227 OFFCURVE",
"276 324 OFFCURVE",
"276 391 QCURVE SMOOTH",
"276 485 LINE SMOOTH",
"276 496 OFFCURVE",
"268 496 QCURVE SMOOTH",
"38 496 LINE SMOOTH",
"28 496 OFFCURVE",
"28 485 QCURVE SMOOTH",
"28 391 LINE SMOOTH",
"28 279 OFFCURVE",
"137 92 OFFCURVE",
"319 -20 OFFCURVE",
"429 -20 QCURVE",
"429 -20 LINE",
"540 -20 OFFCURVE"
);
}
);
width = 892;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"526 10 QCURVE SMOOTH",
"524 1178 LINE",
"793 1178 LINE SMOOTH",
"801 1178 OFFCURVE",
"801 1188 QCURVE SMOOTH",
"801 1417 LINE SMOOTH",
"801 1425 OFFCURVE",
"790 1425 QCURVE SMOOTH",
"12 1425 LINE SMOOTH",
"4 1425 OFFCURVE",
"4 1417 QCURVE SMOOTH",
"2 1188 LINE SMOOTH",
"2 1178 OFFCURVE",
"12 1178 QCURVE SMOOTH",
"278 1178 LINE",
"278 10 LINE SMOOTH",
"278 0 OFFCURVE",
"287 0 QCURVE",
"287 0 LINE",
"518 0 LINE SMOOTH",
"526 0 OFFCURVE"
);
}
);
width = 819;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"753 90 OFFCURVE",
"862 279 OFFCURVE",
"862 393 QCURVE SMOOTH",
"858 1417 LINE SMOOTH",
"858 1425 OFFCURVE",
"850 1425 QCURVE SMOOTH",
"620 1425 LINE SMOOTH",
"612 1425 OFFCURVE",
"612 1417 QCURVE SMOOTH",
"612 393 LINE SMOOTH",
"612 324 OFFCURVE",
"524 227 OFFCURVE",
"458 227 QCURVE SMOOTH",
"395 227 OFFCURVE",
"307 324 OFFCURVE",
"307 393 QCURVE SMOOTH",
"307 1417 LINE SMOOTH",
"307 1425 OFFCURVE",
"299 1425 QCURVE SMOOTH",
"69 1425 LINE SMOOTH",
"61 1425 OFFCURVE",
"61 1417 QCURVE SMOOTH",
"57 393 LINE SMOOTH",
"57 281 OFFCURVE",
"166 92 OFFCURVE",
"350 -20 OFFCURVE",
"458 -20 QCURVE",
"458 -20 LINE",
"571 -20 OFFCURVE"
);
}
);
width = 942;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"569 10 QCURVE SMOOTH",
"847 1417 LINE",
"850 1425 OFFCURVE",
"839 1425 QCURVE SMOOTH",
"610 1425 LINE SMOOTH",
"602 1425 OFFCURVE",
"600 1417 QCURVE SMOOTH",
"436 479 LINE",
"268 1417 LINE SMOOTH",
"266 1425 OFFCURVE",
"258 1425 QCURVE SMOOTH",
"26 1425 LINE SMOOTH",
"16 1425 OFFCURVE",
"18 1417 QCURVE SMOOTH",
"301 10 LINE SMOOTH",
"303 0 OFFCURVE",
"311 0 QCURVE",
"311 0 LINE",
"559 0 LINE SMOOTH",
"567 0 OFFCURVE"
);
}
);
width = 886;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"528 10 QCURVE SMOOTH",
"632 745 LINE",
"737 10 LINE",
"741 0 OFFCURVE",
"747 0 QCURVE SMOOTH",
"995 0 LINE",
"995 0 OFFCURVE",
"1003 6 OFFCURVE",
"1005 10 QCURVE",
"1249 1417 LINE SMOOTH",
"1251 1425 OFFCURVE",
"1241 1425 QCURVE SMOOTH",
"1013 1425 LINE SMOOTH",
"1005 1425 OFFCURVE",
"1003 1417 QCURVE",
"870 492 LINE",
"737 1417 LINE",
"735 1425 OFFCURVE",
"727 1425 QCURVE SMOOTH",
"542 1425 LINE SMOOTH",
"532 1425 OFFCURVE",
"530 1417 QCURVE",
"395 492 LINE",
"264 1417 LINE",
"262 1425 OFFCURVE",
"254 1425 QCURVE SMOOTH",
"24 1425 LINE SMOOTH",
"16 1425 OFFCURVE",
"18 1417 QCURVE SMOOTH",
"260 10 LINE SMOOTH",
"262 0 OFFCURVE",
"270 0 QCURVE",
"270 0 LINE",
"518 0 LINE SMOOTH",
"526 0 OFFCURVE"
);
}
);
width = 1288;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"260 10 QCURVE SMOOTH",
"401 539 LINE",
"540 10 LINE",
"545 0 OFFCURVE",
"553 0 QCURVE SMOOTH",
"782 0 LINE SMOOTH",
"792 0 OFFCURVE",
"788 10 QCURVE SMOOTH",
"557 743 LINE",
"786 1417 LINE SMOOTH",
"788 1425 OFFCURVE",
"780 1425 QCURVE SMOOTH",
"553 1425 LINE SMOOTH",
"542 1425 OFFCURVE",
"540 1417 QCURVE SMOOTH",
"401 930 LINE",
"264 1417 LINE SMOOTH",
"262 1425 OFFCURVE",
"252 1425 QCURVE SMOOTH",
"22 1425 LINE SMOOTH",
"14 1425 OFFCURVE",
"16 1417 QCURVE SMOOTH",
"246 741 LINE",
"12 10 LINE",
"10 0 OFFCURVE",
"18 0 QCURVE",
"18 0 LINE",
"248 0 LINE SMOOTH",
"258 0 OFFCURVE"
);
}
);
width = 827;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"516 8 QCURVE SMOOTH",
"514 598 LINE",
"791 1417 LINE SMOOTH",
"793 1425 OFFCURVE",
"785 1425 QCURVE SMOOTH",
"555 1425 LINE SMOOTH",
"547 1425 OFFCURVE",
"545 1417 QCURVE SMOOTH",
"391 866 LINE",
"240 1417 LINE SMOOTH",
"238 1425 OFFCURVE",
"228 1425 QCURVE SMOOTH",
"0 1425 LINE SMOOTH",
"-8 1425 OFFCURVE",
"-6 1417 QCURVE SMOOTH",
"268 590 LINE",
"266 8 LINE SMOOTH",
"266 0 OFFCURVE",
"273 0 QCURVE",
"273 0 LINE",
"508 0 LINE SMOOTH",
"516 0 OFFCURVE"
);
}
);
width = 821;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"800 10 QCURVE SMOOTH",
"798 229 LINE SMOOTH",
"798 240 OFFCURVE",
"790 240 QCURVE SMOOTH",
"297 240 LINE",
"796 1194 LINE",
"796 1415 LINE SMOOTH",
"796 1425 OFFCURVE",
"786 1425 QCURVE SMOOTH",
"45 1425 LINE SMOOTH",
"36 1425 OFFCURVE",
"36 1415 QCURVE SMOOTH",
"36 1200 LINE SMOOTH",
"36 1192 OFFCURVE",
"45 1192 QCURVE SMOOTH",
"520 1192 LINE",
"18 233 LINE",
"16 10 LINE SMOOTH",
"16 0 OFFCURVE",
"26 0 QCURVE",
"26 0 LINE",
"790 0 LINE SMOOTH",
"800 0 OFFCURVE"
);
}
);
width = 847;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"753 8 QCURVE SMOOTH",
"753 231 LINE SMOOTH",
"753 240 OFFCURVE",
"743 240 QCURVE SMOOTH",
"460 240 LINE",
"460 1186 LINE",
"743 1186 LINE SMOOTH",
"753 1186 OFFCURVE",
"753 1194 QCURVE SMOOTH",
"753 1417 LINE SMOOTH",
"753 1425 OFFCURVE",
"743 1425 QCURVE SMOOTH",
"231 1425 LINE SMOOTH",
"223 1425 OFFCURVE",
"223 1417 QCURVE SMOOTH",
"223 848 LINE",
"24 848 LINE SMOOTH",
"14 848 OFFCURVE",
"14 840 QCURVE SMOOTH",
"14 616 LINE SMOOTH",
"14 608 OFFCURVE",
"24 608 QCURVE SMOOTH",
"223 608 LINE",
"223 8 LINE SMOOTH",
"223 0 OFFCURVE",
"231 0 QCURVE",
"231 0 LINE",
"743 0 LINE SMOOTH",
"753 0 OFFCURVE"
);
}
);
width = 831;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"319 8 QCURVE SMOOTH",
"319 1417 LINE SMOOTH",
"319 1425 OFFCURVE",
"310 1425 QCURVE SMOOTH",
"89 1425 LINE SMOOTH",
"81 1425 OFFCURVE",
"81 1417 QCURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 0 OFFCURVE",
"89 0 QCURVE",
"89 0 LINE",
"314 0 LINE SMOOTH",
"319 0 OFFCURVE"
);
}
);
width = 405;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"607 8 QCURVE SMOOTH",
"607 608 LINE",
"806 608 LINE SMOOTH",
"816 608 OFFCURVE",
"816 616 QCURVE SMOOTH",
"816 840 LINE SMOOTH",
"816 848 OFFCURVE",
"806 848 QCURVE SMOOTH",
"607 848 LINE",
"607 1417 LINE SMOOTH",
"607 1425 OFFCURVE",
"599 1425 QCURVE SMOOTH",
"87 1425 LINE SMOOTH",
"77 1425 OFFCURVE",
"77 1417 QCURVE SMOOTH",
"77 1194 LINE SMOOTH",
"77 1186 OFFCURVE",
"87 1186 QCURVE SMOOTH",
"370 1186 LINE",
"370 240 LINE",
"87 240 LINE SMOOTH",
"77 240 OFFCURVE",
"77 231 QCURVE SMOOTH",
"77 8 LINE SMOOTH",
"77 0 OFFCURVE",
"87 0 QCURVE",
"87 0 LINE",
"599 0 LINE SMOOTH",
"607 0 OFFCURVE"
);
}
);
width = 831;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"792 684 OFFCURVE",
"859 799 OFFCURVE",
"859 883 QCURVE SMOOTH",
"859 891 OFFCURVE",
"851 891 QCURVE SMOOTH",
"667 891 LINE SMOOTH",
"659 891 OFFCURVE",
"659 883 QCURVE SMOOTH",
"659 844 OFFCURVE",
"616 807 OFFCURVE",
"587 807 QCURVE SMOOTH",
"560 807 OFFCURVE",
"489 846 OFFCURVE",
"399 887 OFFCURVE",
"339 887 QCURVE SMOOTH",
"257 887 OFFCURVE",
"140 809 OFFCURVE",
"77 696 OFFCURVE",
"77 643 QCURVE SMOOTH",
"77 635 OFFCURVE",
"85 635 QCURVE SMOOTH",
"270 635 LINE SMOOTH",
"278 635 OFFCURVE",
"278 643 QCURVE SMOOTH",
"278 672 OFFCURVE",
"319 711 OFFCURVE",
"358 711 QCURVE SMOOTH",
"392 711 OFFCURVE",
"470 668 OFFCURVE",
"566 625 OFFCURVE",
"624 625 QCURVE",
"624 625 LINE",
"683 625 OFFCURVE"
);
}
);
width = 972;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1016 215 QCURVE",
"1155 360 LINE SMOOTH",
"1165 371 OFFCURVE",
"1157 377 QCURVE",
"831 694 LINE",
"1161 999 LINE",
"1167 1006 OFFCURVE",
"1161 1016 QCURVE",
"1026 1169 LINE",
"1020 1180 OFFCURVE",
"1012 1171 QCURVE SMOOTH",
"577 727 LINE SMOOTH",
"561 711 OFFCURVE",
"565 666 OFFCURVE",
"577 655 QCURVE",
"1001 213 LINE",
"1001 213 LINE",
"1007 207 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"504 215 QCURVE",
"643 360 LINE SMOOTH",
"653 371 OFFCURVE",
"645 377 QCURVE",
"319 694 LINE",
"649 999 LINE",
"655 1006 OFFCURVE",
"649 1016 QCURVE",
"514 1169 LINE",
"508 1180 OFFCURVE",
"500 1171 QCURVE SMOOTH",
"65 727 LINE SMOOTH",
"49 711 OFFCURVE",
"53 666 OFFCURVE",
"65 655 QCURVE",
"489 213 LINE",
"489 213 LINE",
"495 207 OFFCURVE"
);
}
);
width = 1243;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1189 719 OFFCURVE",
"1177 729 QCURVE",
"753 1171 LINE SMOOTH",
"747 1178 OFFCURVE",
"739 1169 QCURVE SMOOTH",
"599 1024 LINE SMOOTH",
"589 1014 OFFCURVE",
"597 1008 QCURVE",
"923 690 LINE",
"593 385 LINE SMOOTH",
"587 379 OFFCURVE",
"593 369 QCURVE",
"728 215 LINE",
"734 205 OFFCURVE",
"743 213 QCURVE",
"743 213 LINE",
"1177 657 LINE SMOOTH",
"1193 674 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"677 719 OFFCURVE",
"665 729 QCURVE",
"241 1171 LINE SMOOTH",
"235 1178 OFFCURVE",
"227 1169 QCURVE SMOOTH",
"87 1024 LINE SMOOTH",
"77 1014 OFFCURVE",
"85 1008 QCURVE",
"411 690 LINE",
"81 385 LINE SMOOTH",
"75 379 OFFCURVE",
"81 369 QCURVE",
"216 215 LINE",
"222 205 OFFCURVE",
"231 213 QCURVE",
"231 213 LINE",
"665 657 LINE SMOOTH",
"681 674 OFFCURVE"
);
}
);
width = 1243;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = uni1780;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1100 QCURVE SMOOTH",
"399 1100 LINE SMOOTH",
"149 1100 OFFCURVE",
"149 850 QCURVE SMOOTH",
"149 0 LINE",
"499 0 LINE",
"499 850 LINE",
"798 850 LINE",
"798 0 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH",
"1148 1100 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1148 1499 LINE",
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni1780;
unicode = 1780;
},
{
glyphname = uni1781;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 899 OFFCURVE",
"299 899 QCURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE",
"499 770 QCURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1148 0 OFFCURVE",
"1148 250 QCURVE SMOOTH",
"1148 600 LINE",
"798 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE",
"575 586 LINE"
);
}
);
width = 1298;
}
);
note = uni1781;
unicode = 1781;
},
{
glyphname = uni1782;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1100 QCURVE SMOOTH",
"399 1100 LINE SMOOTH",
"149 1100 OFFCURVE",
"149 850 QCURVE SMOOTH",
"149 0 LINE",
"499 0 LINE",
"499 27 LINE",
"731 455 LINE",
"598 526 LINE",
"499 342 LINE",
"499 850 LINE",
"798 850 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH",
"1148 1100 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1148 1499 LINE",
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni1782;
unicode = 1782;
},
{
glyphname = uni1783;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"399 0 QCURVE SMOOTH",
"1548 0 LINE SMOOTH",
"1798 0 OFFCURVE",
"1798 250 QCURVE SMOOTH",
"1798 999 LINE",
"1509 1249 LINE",
"1798 1249 LINE",
"1798 1499 LINE",
"1499 1499 LINE",
"1298 1157 LINE",
"1450 999 LINE",
"1450 250 LINE",
"1149 250 LINE",
"1149 999 LINE",
"860 1249 LINE",
"1149 1249 LINE",
"1149 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"799 999 LINE",
"799 250 LINE",
"500 250 LINE",
"500 1499 LINE",
"49 1499 LINE",
"49 1249 LINE",
"149 1249 LINE",
"149 1249 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE"
);
}
);
width = 1949;
}
);
note = uni1783;
unicode = 1783;
},
{
glyphname = uni1784;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"497 999 LINE",
"98 999 LINE",
"98 801 LINE",
"147 801 LINE",
"147 0 LINE",
"497 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1149 0 LINE",
"1149 999 LINE",
"979 1106 LINE",
"1007 1112 OFFCURVE",
"1036 1126 QCURVE SMOOTH",
"1089 1153 OFFCURVE",
"1149 1247 OFFCURVE",
"1149 1300 QCURVE SMOOTH",
"1149 1499 LINE",
"788 1499 LINE",
"788 1300 LINE",
"497 1300 LINE",
"497 1599 LINE",
"147 1599 LINE",
"147 1300 LINE SMOOTH",
"147 1100 OFFCURVE",
"397 1100 QCURVE",
"397 1100 LINE",
"798 1100 LINE",
"798 293 LINE",
"649 438 LINE",
"497 293 LINE"
);
}
);
width = 1298;
}
);
note = uni1784;
unicode = 1784;
},
{
glyphname = uni1785;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE SMOOTH",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni1785;
unicode = 1785;
},
{
glyphname = uni1786;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 270 LINE",
"500 500 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 500 LINE",
"49 500 LINE",
"49 250 LINE",
"150 250 LINE",
"150 0 LINE",
"500 0 LINE",
"500 229 LINE",
"801 0 LINE",
"1151 0 LINE"
);
}
);
width = 1298;
}
);
note = uni1786;
unicode = 1786;
},
{
glyphname = uni1787;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 0 LINE",
"500 0 LINE",
"649 145 LINE",
"801 0 LINE",
"1151 0 LINE",
"1151 1100 LINE",
"801 1100 LINE",
"801 293 LINE",
"649 438 LINE",
"500 293 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1599 LINE",
"801 1599 LINE",
"801 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni1787;
unicode = 1787;
},
{
glyphname = uni1788;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 250 LINE SMOOTH",
"798 0 OFFCURVE",
"1048 0 QCURVE SMOOTH",
"2199 0 LINE SMOOTH",
"2449 0 OFFCURVE",
"2449 250 QCURVE SMOOTH",
"2449 999 LINE",
"2158 1249 LINE",
"2449 1249 LINE",
"2449 1499 LINE",
"2150 1499 LINE",
"1949 1157 LINE",
"2099 999 LINE",
"2099 250 LINE",
"1800 250 LINE",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 250 LINE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE"
);
}
);
width = 2598;
}
);
note = uni1788;
unicode = 1788;
},
{
glyphname = uni1789;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1011 -700 QCURVE",
"1599 -700 LINE SMOOTH",
"1800 -700 OFFCURVE",
"1800 -500 QCURVE SMOOTH",
"1800 -299 LINE SMOOTH",
"1800 -100 OFFCURVE",
"1599 -100 QCURVE SMOOTH",
"1300 -100 LINE",
"1300 -350 LINE",
"1449 -350 LINE",
"1449 -500 LINE",
"1153 -500 LINE",
"747 -201 OFFCURVE",
"399 -201 QCURVE SMOOTH",
"149 -201 LINE",
"149 -201 LINE",
"149 -451 LINE",
"399 -451 LINE SMOOTH",
"647 -451 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1200 1249 LINE",
"1449 1249 LINE",
"1449 0 LINE",
"1800 0 LINE",
"1800 1499 LINE",
"1200 1499 LINE"
);
}
);
width = 1949;
}
);
note = uni1789;
unicode = 1789;
},
{
glyphname = uni178A;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1300 QCURVE SMOOTH",
"1148 1599 LINE",
"798 1599 LINE",
"798 1350 LINE",
"499 1350 LINE",
"499 1401 LINE",
"548 1401 LINE",
"548 1499 LINE",
"149 1499 LINE",
"149 1499 LINE",
"149 1151 LINE",
"950 1151 LINE SMOOTH",
"1148 1151 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"649 438 LINE",
"499 293 LINE",
"499 1051 LINE",
"149 1051 LINE",
"149 0 LINE",
"499 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1051 LINE",
"798 1051 LINE",
"798 293 LINE"
);
}
);
width = 1298;
}
);
note = uni178A;
unicode = 178A;
},
{
glyphname = uni178B;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"999 1599 LINE",
"999 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"799 999 LINE",
"799 250 LINE",
"500 250 LINE",
"500 1499 LINE",
"49 1499 LINE",
"49 1249 LINE",
"149 1249 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1149 0 OFFCURVE",
"1149 250 QCURVE",
"1149 250 LINE",
"1149 999 LINE",
"860 1249 LINE",
"1149 1249 LINE",
"1149 1599 LINE"
);
}
);
width = 1298;
}
);
note = uni178B;
unicode = 178B;
},
{
glyphname = uni178C;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 770 QCURVE",
"149 670 LINE",
"149 0 LINE",
"499 0 LINE",
"798 150 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 350 LINE",
"499 201 LINE",
"499 559 LINE",
"575 586 LINE",
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE",
"149 899 LINE",
"548 899 LINE",
"548 1051 LINE",
"499 1051 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 1206 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni178C;
unicode = 178C;
},
{
glyphname = uni178D;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 500 LINE",
"700 500 LINE",
"700 250 LINE",
"798 250 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 229 LINE",
"1449 0 LINE",
"1800 0 LINE",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 270 LINE",
"1148 500 LINE"
);
}
);
width = 1949;
}
);
note = uni178D;
unicode = 178D;
},
{
glyphname = uni178E;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1800 0 LINE",
"1800 1249 LINE",
"2099 1249 LINE",
"2099 0 LINE",
"2449 0 LINE",
"2449 1249 LINE SMOOTH",
"2449 1499 OFFCURVE",
"2199 1499 QCURVE SMOOTH",
"1699 1499 LINE SMOOTH",
"1449 1499 OFFCURVE",
"1449 1249 QCURVE SMOOTH",
"1449 293 LINE",
"1300 438 LINE",
"1148 293 LINE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1249 LINE",
"798 0 LINE",
"1148 0 LINE",
"1300 145 LINE",
"1449 0 LINE"
);
}
);
width = 2598;
}
);
note = uni178E;
unicode = 178E;
},
{
glyphname = uni178F;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 850 LINE",
"798 850 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH",
"1148 1100 OFFCURVE",
"899 1100 QCURVE SMOOTH",
"399 1100 LINE SMOOTH",
"149 1100 OFFCURVE",
"149 850 QCURVE",
"149 850 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE"
);
},
{
closed = 1;
nodes = (
"1148 1499 LINE",
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni178F;
unicode = 178F;
},
{
glyphname = uni1790;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE SMOOTH",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1599 LINE",
"801 1599 LINE",
"801 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni1790;
unicode = 1790;
},
{
glyphname = uni1791;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 737 OFFCURVE",
"499 659 QCURVE SMOOTH",
"798 586 LINE",
"798 250 LINE",
"499 250 LINE",
"499 551 LINE",
"149 621 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1148 0 OFFCURVE",
"1148 250 QCURVE SMOOTH",
"1148 489 LINE",
"1046 539 LINE",
"1148 571 OFFCURVE",
"1148 643 QCURVE SMOOTH",
"1148 850 LINE",
"917 850 LINE",
"872 813 OFFCURVE",
"851 791 QCURVE",
"714 821 LINE SMOOTH",
"499 872 OFFCURVE",
"499 999 QCURVE SMOOTH",
"499 1249 LINE",
"798 1249 LINE",
"798 1151 LINE",
"749 1151 LINE",
"749 950 LINE",
"999 950 LINE SMOOTH",
"1148 950 OFFCURVE",
"1148 1051 QCURVE",
"1148 1051 LINE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni1791;
unicode = 1791;
},
{
glyphname = uni1792;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 999 LINE",
"150 0 LINE",
"500 0 LINE",
"649 145 LINE",
"801 0 LINE",
"1151 0 LINE",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 293 LINE",
"649 438 LINE",
"500 293 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
}
);
width = 1298;
}
);
note = uni1792;
unicode = 1792;
},
{
glyphname = uni1793;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"749 899 LINE",
"1148 899 LINE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 754 OFFCURVE",
"724 596 QCURVE SMOOTH",
"798 575 LINE",
"798 293 LINE",
"649 438 LINE",
"499 293 LINE",
"499 600 LINE",
"149 600 LINE",
"149 0 LINE",
"499 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 698 LINE",
"798 780 LINE",
"499 862 OFFCURVE",
"499 999 QCURVE",
"499 999 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1100 LINE",
"749 1100 LINE"
);
}
);
width = 1298;
}
);
note = uni1793;
unicode = 1793;
},
{
glyphname = uni1794;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 999 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni1794;
unicode = 1794;
},
{
glyphname = uni1795;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"649 145 LINE",
"801 0 LINE",
"1151 0 LINE",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 293 LINE",
"649 438 LINE",
"500 293 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1599 LINE",
"801 1599 LINE",
"801 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 0 LINE",
"500 0 LINE"
);
}
);
width = 1298;
}
);
note = uni1795;
unicode = 1795;
},
{
glyphname = uni1796;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni1796;
unicode = 1796;
},
{
glyphname = uni1797;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1149 850 LINE SMOOTH",
"1149 1100 OFFCURVE",
"899 1100 QCURVE SMOOTH",
"399 1100 LINE SMOOTH",
"149 1100 OFFCURVE",
"149 850 QCURVE SMOOTH",
"149 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 0 LINE",
"500 850 LINE",
"799 850 LINE",
"799 0 LINE",
"1149 0 LINE"
);
},
{
closed = 1;
nodes = (
"1149 1499 LINE",
"149 1499 LINE",
"149 1249 LINE",
"1149 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni1797;
unicode = 1797;
},
{
glyphname = uni1798;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 250 LINE"
);
}
);
width = 1298;
}
);
note = uni1798;
unicode = 1798;
},
{
glyphname = uni1799;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"1550 0 LINE SMOOTH",
"1800 0 OFFCURVE",
"1800 250 QCURVE SMOOTH",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 999 LINE",
"860 1249 LINE",
"1148 1249 LINE",
"1148 1499 LINE",
"849 1499 LINE",
"649 1157 LINE",
"798 999 LINE",
"798 250 LINE",
"499 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"600 1249 LINE",
"600 1499 LINE",
"149 1499 LINE"
);
}
);
width = 1949;
}
);
note = uni1799;
unicode = 1799;
},
{
glyphname = uni179A;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE"
);
}
);
width = 649;
}
);
note = uni179A;
unicode = 179A;
},
{
glyphname = uni179B;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 250 LINE SMOOTH",
"798 0 OFFCURVE",
"1048 0 QCURVE SMOOTH",
"1550 0 LINE SMOOTH",
"1800 0 OFFCURVE",
"1800 250 QCURVE SMOOTH",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 250 LINE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE"
);
}
);
width = 1949;
}
);
note = uni179B;
unicode = 179B;
},
{
glyphname = uni179C;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1599 LINE",
"350 1599 LINE",
"350 1499 LINE",
"201 1499 LINE"
);
}
);
width = 649;
}
);
note = uni179C;
unicode = 179C;
},
{
glyphname = uni179D;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1100 OFFCURVE",
"899 1100 QCURVE SMOOTH",
"399 1100 LINE SMOOTH",
"149 1100 OFFCURVE",
"149 850 QCURVE SMOOTH",
"149 0 LINE",
"499 0 LINE",
"499 27 LINE",
"729 451 LINE",
"798 451 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 451 LINE",
"1148 451 LINE",
"1249 451 LINE",
"1249 649 LINE",
"1148 649 LINE",
"1148 850 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1148 1499 LINE",
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE"
);
},
{
closed = 1;
nodes = (
"598 526 LINE",
"499 342 LINE",
"499 850 LINE",
"798 850 LINE",
"798 649 LINE",
"649 649 LINE",
"649 498 LINE"
);
}
);
width = 1298;
}
);
note = uni179D;
unicode = 179D;
},
{
glyphname = uni179E;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE SMOOTH",
"1151 649 LINE",
"1249 649 LINE",
"1249 850 LINE",
"1151 850 LINE",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"801 850 LINE",
"649 850 LINE",
"649 649 LINE",
"801 649 LINE",
"801 250 LINE"
);
}
);
width = 1298;
}
);
note = uni179E;
unicode = 179E;
},
{
glyphname = uni179F;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1237 LINE",
"305 1090 LINE",
"149 1049 OFFCURVE",
"149 850 QCURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 850 LINE",
"798 850 LINE",
"798 250 LINE SMOOTH",
"798 0 OFFCURVE",
"1048 0 QCURVE SMOOTH",
"1550 0 LINE SMOOTH",
"1800 0 OFFCURVE",
"1800 250 QCURVE SMOOTH",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 850 LINE SMOOTH",
"1148 1100 OFFCURVE",
"899 1100 QCURVE SMOOTH",
"583 1100 LINE",
"583 1100 LINE",
"409 1249 LINE",
"999 1249 LINE",
"999 1499 LINE",
"299 1499 LINE"
);
}
);
width = 1949;
}
);
note = uni179F;
unicode = 179F;
},
{
glyphname = uni17A0;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1800 1249 LINE SMOOTH",
"1800 1499 OFFCURVE",
"1550 1499 QCURVE SMOOTH",
"1051 1499 LINE SMOOTH",
"801 1499 OFFCURVE",
"801 1249 QCURVE SMOOTH",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE",
"1151 250 LINE",
"1151 1249 LINE",
"1450 1249 LINE",
"1450 0 LINE",
"1800 0 LINE"
);
}
);
width = 1949;
}
);
note = uni17A0;
unicode = 17A0;
},
{
glyphname = uni17A1;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 737 OFFCURVE",
"499 659 QCURVE SMOOTH",
"798 586 LINE",
"798 250 LINE",
"499 250 LINE",
"499 551 LINE",
"149 621 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1148 0 OFFCURVE",
"1148 250 QCURVE SMOOTH",
"1148 489 LINE",
"1046 539 LINE",
"1148 571 OFFCURVE",
"1148 643 QCURVE SMOOTH",
"1148 850 LINE",
"917 850 LINE",
"872 813 OFFCURVE",
"851 791 QCURVE",
"714 821 LINE SMOOTH",
"499 872 OFFCURVE",
"499 999 QCURVE SMOOTH",
"499 1249 LINE",
"798 1249 LINE",
"798 1151 LINE",
"749 1151 LINE",
"749 950 LINE",
"999 950 LINE SMOOTH",
"1148 950 OFFCURVE",
"1148 1051 QCURVE",
"1148 1051 LINE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1148 -408 LINE",
"1148 -100 LINE",
"749 -100 LINE",
"749 -299 LINE",
"798 -299 LINE",
"798 -700 LINE",
"1148 -700 LINE",
"1300 -555 LINE",
"1449 -700 LINE",
"1800 -700 LINE",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 -408 LINE",
"1300 -260 LINE"
);
}
);
width = 1949;
}
);
note = uni17A1;
unicode = 17A1;
},
{
glyphname = uni17A2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
},
{
closed = 1;
nodes = (
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 250 LINE",
"700 250 LINE",
"700 0 LINE",
"1151 0 LINE",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni17A2;
unicode = 17A2;
},
{
glyphname = uni17A3;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
},
{
closed = 1;
nodes = (
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 250 LINE",
"700 250 LINE",
"700 0 LINE",
"1151 0 LINE",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni17A3;
unicode = 17A3;
},
{
glyphname = uni17A4;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1151 999 LINE",
"860 1249 LINE",
"1450 1249 LINE",
"1450 0 LINE",
"1800 0 LINE",
"1800 1249 LINE SMOOTH",
"1800 1499 OFFCURVE",
"1550 1499 QCURVE SMOOTH",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 600 LINE",
"801 250 LINE",
"700 250 LINE",
"700 0 LINE",
"1151 0 LINE"
);
},
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
}
);
width = 1949;
}
);
note = uni17A4;
unicode = 17A4;
},
{
glyphname = uni17A5;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 850 LINE",
"798 850 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH",
"1148 1100 OFFCURVE",
"899 1100 QCURVE SMOOTH",
"399 1100 LINE SMOOTH",
"149 1100 OFFCURVE",
"149 850 QCURVE",
"149 850 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE"
);
},
{
closed = 1;
nodes = (
"798 1499 LINE",
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE",
"1148 1599 LINE",
"798 1599 LINE"
);
}
);
width = 1298;
}
);
note = uni17A5;
unicode = 17A5;
},
{
glyphname = uni17A6;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1550 1950 QCURVE SMOOTH",
"1148 1950 LINE",
"1148 2300 LINE",
"798 2300 LINE",
"798 1651 LINE",
"1148 1651 LINE",
"1148 1749 LINE",
"1449 1749 LINE",
"1449 -467 LINE",
"1099 -467 LINE",
"1099 -209 LINE SMOOTH",
"1099 -82 OFFCURVE",
"798 -82 QCURVE SMOOTH",
"499 -82 LINE SMOOTH",
"198 -82 OFFCURVE",
"198 -209 QCURVE SMOOTH",
"198 -594 LINE",
"600 -594 LINE",
"600 -381 LINE",
"499 -381 LINE",
"499 -209 LINE",
"798 -209 LINE",
"798 -467 LINE SMOOTH",
"798 -594 OFFCURVE",
"1099 -594 QCURVE SMOOTH",
"1550 -594 LINE SMOOTH",
"1800 -594 OFFCURVE",
"1800 -467 QCURVE",
"1800 -467 LINE",
"1800 1749 LINE SMOOTH",
"1800 1950 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 0 LINE",
"1148 0 LINE"
);
}
);
width = 1949;
}
);
note = uni17A6;
unicode = 17A6;
},
{
glyphname = uni17A7;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 559 LINE",
"575 586 LINE",
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 899 OFFCURVE",
"299 899 QCURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE",
"499 770 QCURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE"
);
}
);
width = 1298;
}
);
note = uni17A7;
unicode = 17A7;
},
{
glyphname = uni17A8;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 559 LINE",
"575 586 LINE",
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 899 OFFCURVE",
"299 899 QCURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE",
"499 770 QCURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE"
);
},
{
closed = 1;
nodes = (
"1148 1901 LINE",
"149 1901 LINE",
"149 1651 LINE",
"1148 1651 LINE"
);
}
);
width = 1298;
}
);
note = uni17A8;
unicode = 17A8;
},
{
glyphname = uni17A9;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 559 LINE",
"575 586 LINE",
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 899 OFFCURVE",
"299 899 QCURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE",
"499 770 QCURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"999 -201 LINE",
"999 -201 LINE",
"999 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE"
);
},
{
closed = 1;
nodes = (
"1300 -201 LINE",
"1300 600 LINE",
"1099 600 LINE",
"1099 -201 LINE"
);
}
);
width = 1298;
}
);
note = uni17A9;
unicode = 17A9;
},
{
glyphname = uni17AA;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 559 LINE",
"575 586 LINE",
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 899 OFFCURVE",
"299 899 QCURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE",
"499 770 QCURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE"
);
},
{
closed = 1;
nodes = (
"798 1901 LINE",
"149 1901 LINE",
"149 1651 LINE",
"1148 1651 LINE",
"1148 2001 LINE",
"798 2001 LINE"
);
}
);
width = 1298;
}
);
note = uni17AA;
unicode = 17AA;
},
{
glyphname = uni17AB;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1151 -350 QCURVE SMOOTH",
"1151 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"801 -350 LINE",
"801 -500 OFFCURVE",
"451 -500 QCURVE SMOOTH",
"150 -500 LINE",
"150 -500 LINE",
"150 -700 LINE",
"451 -700 LINE SMOOTH",
"1151 -700 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 999 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni17AB;
unicode = 17AB;
},
{
glyphname = uni17AC;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1151 -350 QCURVE SMOOTH",
"1151 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"801 -350 LINE",
"801 -500 OFFCURVE",
"451 -500 QCURVE SMOOTH",
"150 -500 LINE",
"150 -700 LINE",
"451 -700 LINE SMOOTH",
"831 -700 OFFCURVE",
"981 -623 QCURVE",
"1063 -700 OFFCURVE",
"1200 -700 QCURVE SMOOTH",
"1300 -700 LINE",
"1300 -500 LINE",
"1200 -500 LINE SMOOTH",
"1157 -500 OFFCURVE",
"1126 -475 QCURVE",
"1126 -475 LINE",
"1151 -420 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1151 0 OFFCURVE",
"1151 250 QCURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 999 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni17AC;
unicode = 17AC;
},
{
glyphname = uni17AD;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 -350 QCURVE SMOOTH",
"1148 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"798 -350 LINE",
"798 -500 OFFCURVE",
"448 -500 QCURVE SMOOTH",
"149 -500 LINE",
"149 -500 LINE",
"149 -700 LINE",
"448 -700 LINE SMOOTH",
"1148 -700 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni17AD;
unicode = 17AD;
},
{
glyphname = uni17AE;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 -350 QCURVE SMOOTH",
"1148 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"798 -350 LINE",
"798 -500 OFFCURVE",
"448 -500 QCURVE SMOOTH",
"149 -500 LINE",
"149 -700 LINE",
"448 -700 LINE SMOOTH",
"831 -700 OFFCURVE",
"978 -623 QCURVE",
"1062 -700 OFFCURVE",
"1200 -700 QCURVE SMOOTH",
"1300 -700 LINE",
"1300 -500 LINE",
"1200 -500 LINE SMOOTH",
"1157 -500 OFFCURVE",
"1126 -475 QCURVE",
"1126 -475 LINE",
"1148 -420 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni17AE;
unicode = 17AE;
},
{
glyphname = uni17AF;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1499 QCURVE SMOOTH",
"497 1499 LINE",
"497 1849 LINE",
"147 1849 LINE",
"147 1151 LINE",
"497 1151 LINE",
"497 1249 LINE",
"798 1249 LINE",
"798 293 LINE",
"649 438 LINE",
"497 293 LINE",
"497 999 LINE",
"98 999 LINE",
"98 801 LINE",
"147 801 LINE",
"147 0 LINE",
"497 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1149 0 LINE",
"1149 0 LINE",
"1149 1249 LINE SMOOTH",
"1149 1499 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni17AF;
unicode = 17AF;
},
{
glyphname = uni17B0;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"501 -469 QCURVE SMOOTH",
"428 -469 OFFCURVE",
"428 -403 QCURVE",
"507 -375 OFFCURVE",
"634 -311 QCURVE",
"634 -311 LINE",
"559 -469 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"798 -203 QCURVE",
"798 -371 LINE SMOOTH",
"798 -451 OFFCURVE",
"761 -451 QCURVE SMOOTH",
"724 -451 OFFCURVE",
"651 -303 QCURVE",
"651 -303 LINE",
"735 -260 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"149 -299 QCURVE",
"149 -500 LINE SMOOTH",
"149 -700 OFFCURVE",
"362 -700 QCURVE SMOOTH",
"577 -700 OFFCURVE",
"665 -580 QCURVE",
"772 -700 OFFCURVE",
"921 -700 QCURVE SMOOTH",
"1148 -700 OFFCURVE",
"1148 -399 QCURVE SMOOTH",
"1148 -49 LINE",
"1148 -49 LINE",
"798 -49 LINE",
"552 -299 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni17B0;
unicode = 17B0;
},
{
glyphname = uni17B1;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 559 LINE",
"575 586 LINE",
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 899 OFFCURVE",
"299 899 QCURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE",
"499 770 QCURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE"
);
},
{
closed = 1;
nodes = (
"798 1599 LINE",
"1148 1599 LINE",
"1148 1950 LINE",
"149 1950 LINE",
"149 1700 LINE",
"798 1700 LINE"
);
}
);
width = 1298;
}
);
note = uni17B1;
unicode = 17B1;
},
{
glyphname = uni17B2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1499 LINE",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1148 0 OFFCURVE",
"1148 250 QCURVE SMOOTH",
"1148 451 LINE SMOOTH",
"1148 530 OFFCURVE",
"999 580 QCURVE",
"1148 616 LINE",
"1148 1100 LINE",
"700 1100 LINE",
"700 850 LINE",
"899 850 LINE",
"899 782 LINE",
"700 700 LINE",
"700 500 LINE",
"798 500 OFFCURVE",
"798 410 QCURVE",
"798 410 LINE",
"798 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"1148 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni17B2;
unicode = 17B2;
},
{
glyphname = uni17B3;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 559 LINE",
"575 586 LINE",
"1128 756 OFFCURVE",
"1148 1051 QCURVE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 899 OFFCURVE",
"299 899 QCURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 872 OFFCURVE",
"499 770 QCURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE"
);
},
{
closed = 1;
nodes = (
"1148 2001 LINE",
"798 2001 LINE",
"798 1901 LINE",
"149 1901 LINE",
"149 1550 LINE",
"448 1550 LINE",
"448 1651 LINE",
"1148 1651 LINE"
);
}
);
width = 1298;
}
);
note = uni17B3;
unicode = 17B3;
},
{
glyphname = uni17B4;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 1204;
}
);
note = uni17B4;
unicode = 17B4;
},
{
glyphname = uni17B5;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 1204;
}
);
note = uni17B5;
unicode = 17B5;
},
{
glyphname = uni17B6;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"252 1499 QCURVE SMOOTH",
"-98 1499 LINE",
"-98 1249 LINE",
"152 1249 LINE",
"152 0 LINE",
"152 0 LINE",
"502 0 LINE",
"502 1249 LINE SMOOTH",
"502 1499 OFFCURVE"
);
}
);
width = 649;
}
);
note = uni17B6;
unicode = 17B6;
},
{
glyphname = uni17B7;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-403 1974 QCURVE SMOOTH",
"-538 2050 OFFCURVE",
"-688 2050 QCURVE SMOOTH",
"-868 2050 OFFCURVE",
"-958 1974 QCURVE SMOOTH",
"-1048 1901 OFFCURVE",
"-1048 1749 QCURVE",
"-1048 1749 LINE",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 1749 LINE",
"-268 1901 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-481 1825 QCURVE SMOOTH",
"-393 1800 OFFCURVE",
"-339 1749 QCURVE",
"-808 1749 LINE",
"-808 1800 OFFCURVE",
"-778 1825 QCURVE SMOOTH",
"-749 1849 OFFCURVE",
"-688 1849 QCURVE",
"-688 1849 LINE",
"-569 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B7;
unicode = 17B7;
},
{
glyphname = uni17B8;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-327 1925 LINE",
"-411 1989 OFFCURVE",
"-501 2019 QCURVE SMOOTH",
"-591 2050 OFFCURVE",
"-688 2050 QCURVE SMOOTH",
"-868 2050 OFFCURVE",
"-958 1974 QCURVE SMOOTH",
"-1048 1901 OFFCURVE",
"-1048 1749 QCURVE",
"-1048 1749 LINE",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 2099 LINE",
"-327 2099 LINE"
);
},
{
closed = 1;
nodes = (
"-481 1825 QCURVE SMOOTH",
"-393 1800 OFFCURVE",
"-339 1749 QCURVE",
"-808 1749 LINE",
"-808 1800 OFFCURVE",
"-778 1825 QCURVE SMOOTH",
"-749 1849 OFFCURVE",
"-688 1849 QCURVE",
"-688 1849 LINE",
"-569 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B8;
unicode = 17B8;
},
{
glyphname = uni17B9;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-176 1774 QCURVE",
"-98 1815 OFFCURVE",
"-98 1923 QCURVE SMOOTH",
"-98 2011 OFFCURVE",
"-151 2054 QCURVE SMOOTH",
"-202 2099 OFFCURVE",
"-305 2099 QCURVE SMOOTH",
"-450 2099 OFFCURVE",
"-493 2013 QCURVE",
"-587 2050 OFFCURVE",
"-692 2050 QCURVE SMOOTH",
"-870 2050 OFFCURVE",
"-958 1974 QCURVE SMOOTH",
"-1048 1901 OFFCURVE",
"-1048 1749 QCURVE",
"-1048 1749 LINE",
"-1048 1651 LINE",
"-157 1651 LINE",
"-157 1749 LINE",
"-165 1761 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-253 1858 QCURVE",
"-319 1919 OFFCURVE",
"-386 1962 QCURVE",
"-368 1999 OFFCURVE",
"-305 1999 QCURVE SMOOTH",
"-262 1999 OFFCURVE",
"-239 1980 QCURVE SMOOTH",
"-217 1962 OFFCURVE",
"-217 1923 QCURVE",
"-217 1923 LINE",
"-217 1876 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-487 1825 QCURVE SMOOTH",
"-399 1800 OFFCURVE",
"-348 1749 QCURVE",
"-810 1749 LINE",
"-810 1800 OFFCURVE",
"-780 1825 QCURVE SMOOTH",
"-751 1849 OFFCURVE",
"-692 1849 QCURVE",
"-692 1849 LINE",
"-573 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B9;
unicode = 17B9;
},
{
glyphname = uni17BA;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-268 1878 LINE",
"-325 1929 OFFCURVE",
"-389 1966 QCURVE",
"-389 2099 LINE",
"-507 2099 LINE",
"-507 2021 LINE",
"-595 2050 OFFCURVE",
"-688 2050 QCURVE SMOOTH",
"-868 2050 OFFCURVE",
"-958 1974 QCURVE SMOOTH",
"-1048 1901 OFFCURVE",
"-1048 1749 QCURVE",
"-1048 1749 LINE",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 2099 LINE",
"-268 2099 LINE"
);
},
{
closed = 1;
nodes = (
"-481 1825 QCURVE SMOOTH",
"-393 1800 OFFCURVE",
"-339 1749 QCURVE",
"-808 1749 LINE",
"-808 1800 OFFCURVE",
"-778 1825 QCURVE SMOOTH",
"-749 1849 OFFCURVE",
"-688 1849 QCURVE",
"-688 1849 LINE",
"-569 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BA;
unicode = 17BA;
},
{
glyphname = uni17BB;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-448 -700 LINE",
"-149 -700 LINE",
"-149 -100 LINE",
"-448 -100 LINE"
);
}
);
width = 0;
}
);
note = uni17BB;
unicode = 17BB;
},
{
glyphname = uni17BC;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-597 -700 QCURVE SMOOTH",
"-347 -700 LINE SMOOTH",
"-149 -700 OFFCURVE",
"-149 -551 QCURVE SMOOTH",
"-149 -100 LINE",
"-448 -100 LINE",
"-448 -551 LINE",
"-597 -551 LINE",
"-597 -100 LINE",
"-798 -100 LINE",
"-798 -100 LINE",
"-798 -551 LINE SMOOTH",
"-798 -700 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BC;
unicode = 17BC;
},
{
glyphname = uni17BD;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-648 -510 LINE",
"-648 -100 LINE",
"-849 -100 LINE",
"-849 -700 LINE",
"-648 -700 LINE",
"-550 -569 LINE",
"-450 -700 LINE",
"-149 -700 LINE",
"-149 -100 LINE",
"-450 -100 LINE",
"-450 -510 LINE",
"-550 -381 LINE"
);
}
);
width = 0;
}
);
note = uni17BD;
unicode = 17BD;
},
{
glyphname = uni17BE;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-327 1925 LINE",
"-411 1989 OFFCURVE",
"-501 2019 QCURVE SMOOTH",
"-591 2050 OFFCURVE",
"-688 2050 QCURVE SMOOTH",
"-868 2050 OFFCURVE",
"-958 1974 QCURVE SMOOTH",
"-1048 1901 OFFCURVE",
"-1048 1749 QCURVE",
"-1048 1749 LINE",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 2099 LINE",
"-327 2099 LINE"
);
},
{
closed = 1;
nodes = (
"-481 1825 QCURVE SMOOTH",
"-393 1800 OFFCURVE",
"-339 1749 QCURVE",
"-808 1749 LINE",
"-808 1800 OFFCURVE",
"-778 1825 QCURVE SMOOTH",
"-749 1849 OFFCURVE",
"-688 1849 QCURVE",
"-688 1849 LINE",
"-569 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BE;
unicode = 17BE;
},
{
glyphname = uni17BF;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-31 1925 QCURVE SMOOTH",
"57 1901 OFFCURVE",
"111 1849 QCURVE",
"-358 1849 LINE",
"-358 1901 OFFCURVE",
"-328 1925 QCURVE SMOOTH",
"-299 1950 OFFCURVE",
"-238 1950 QCURVE",
"-238 1950 LINE",
"-119 1950 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"61 2066 QCURVE",
"61 2200 LINE",
"-57 2200 LINE",
"-57 2122 LINE",
"-145 2150 OFFCURVE",
"-238 2150 QCURVE SMOOTH",
"-418 2150 OFFCURVE",
"-508 2075 QCURVE SMOOTH",
"-598 2001 OFFCURVE",
"-598 1849 QCURVE SMOOTH",
"-598 1749 LINE",
"2 1749 LINE SMOOTH",
"152 1749 OFFCURVE",
"152 1651 QCURVE SMOOTH",
"152 -500 LINE",
"-147 -500 LINE",
"-147 -100 LINE",
"-498 -100 LINE",
"-498 -500 LINE SMOOTH",
"-498 -700 OFFCURVE",
"-248 -700 QCURVE SMOOTH",
"252 -700 LINE SMOOTH",
"502 -700 OFFCURVE",
"502 -500 QCURVE SMOOTH",
"502 1651 LINE SMOOTH",
"502 1823 OFFCURVE",
"301 1896 QCURVE",
"301 1896 LINE",
"301 2200 LINE",
"182 2200 LINE",
"182 1976 LINE",
"125 2030 OFFCURVE"
);
}
);
width = 649;
}
);
note = uni17BF;
unicode = 17BF;
},
{
glyphname = uni17C0;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -500 LINE SMOOTH",
"-499 -700 OFFCURVE",
"-249 -700 QCURVE SMOOTH",
"251 -700 LINE SMOOTH",
"500 -700 OFFCURVE",
"500 -500 QCURVE SMOOTH",
"500 1800 LINE SMOOTH",
"500 2001 OFFCURVE",
"251 2001 QCURVE SMOOTH",
"-149 2001 LINE",
"-149 2349 LINE",
"-499 2349 LINE",
"-499 1700 LINE",
"-149 1700 LINE",
"-149 1800 LINE",
"150 1800 LINE",
"150 1800 LINE",
"150 -500 LINE",
"-149 -500 LINE",
"-149 -100 LINE",
"-499 -100 LINE"
);
}
);
width = 649;
}
);
note = uni17C0;
unicode = 17C0;
},
{
glyphname = uni17C1;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 0 LINE",
"600 0 LINE",
"600 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17C1;
unicode = 17C1;
},
{
glyphname = uni17C2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"649 2048 QCURVE",
"500 2048 LINE",
"500 1780 OFFCURVE",
"381 1780 QCURVE SMOOTH",
"299 1780 LINE",
"299 1849 LINE",
"381 1849 LINE",
"381 2050 LINE",
"0 2050 LINE",
"0 2050 LINE",
"0 1599 LINE",
"381 1599 LINE SMOOTH",
"649 1599 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 0 LINE",
"600 0 LINE",
"600 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17C2;
unicode = 17C2;
},
{
glyphname = uni17C3;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"201 2050 LINE",
"201 2099 LINE SMOOTH",
"201 2251 OFFCURVE",
"0 2251 QCURVE",
"0 2150 LINE",
"49 2150 OFFCURVE",
"49 2099 QCURVE SMOOTH",
"49 1849 LINE",
"201 1849 LINE",
"201 1901 LINE",
"250 1901 LINE",
"250 1749 LINE",
"250 1749 LINE",
"49 1749 LINE",
"49 1599 LINE",
"500 1599 LINE",
"500 2050 LINE"
);
},
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 0 LINE",
"600 0 LINE",
"600 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17C3;
unicode = 17C3;
},
{
glyphname = uni17C4;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"252 1499 QCURVE SMOOTH",
"-98 1499 LINE",
"-98 1249 LINE",
"152 1249 LINE",
"152 0 LINE",
"152 0 LINE",
"502 0 LINE",
"502 1249 LINE SMOOTH",
"502 1499 OFFCURVE"
);
}
);
width = 649;
}
);
note = uni17C4;
unicode = 17C4;
},
{
glyphname = uni17C5;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"152 1499 LINE",
"-98 1499 LINE",
"-98 1249 LINE",
"152 1249 LINE",
"152 0 LINE",
"502 0 LINE",
"502 2200 LINE",
"2 2200 LINE",
"2 1950 LINE",
"152 1950 LINE"
);
}
);
width = 649;
}
);
note = uni17C5;
unicode = 17C5;
},
{
glyphname = uni17C6;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-575 2023 OFFCURVE",
"-549 1976 OFFCURVE",
"-549 1950 QCURVE SMOOTH",
"-549 1923 OFFCURVE",
"-573 1876 OFFCURVE",
"-622 1849 OFFCURVE",
"-649 1849 QCURVE SMOOTH",
"-674 1849 OFFCURVE",
"-721 1876 OFFCURVE",
"-747 1923 OFFCURVE",
"-747 1950 QCURVE SMOOTH",
"-747 1976 OFFCURVE",
"-721 2023 OFFCURVE",
"-674 2050 OFFCURVE",
"-649 2050 QCURVE",
"-649 2050 LINE",
"-622 2050 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-866 2173 OFFCURVE",
"-948 2028 OFFCURVE",
"-948 1950 QCURVE SMOOTH",
"-948 1872 OFFCURVE",
"-868 1729 OFFCURVE",
"-725 1651 OFFCURVE",
"-649 1651 QCURVE SMOOTH",
"-569 1651 OFFCURVE",
"-428 1729 OFFCURVE",
"-348 1872 OFFCURVE",
"-348 1950 QCURVE SMOOTH",
"-348 2028 OFFCURVE",
"-430 2173 OFFCURVE",
"-571 2251 OFFCURVE",
"-649 2251 QCURVE",
"-649 2251 LINE",
"-725 2251 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17C6;
unicode = 17C6;
},
{
glyphname = uni17C7;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"522 375 OFFCURVE",
"548 326 OFFCURVE",
"548 299 QCURVE SMOOTH",
"548 274 OFFCURVE",
"524 225 OFFCURVE",
"475 201 OFFCURVE",
"448 201 QCURVE SMOOTH",
"423 201 OFFCURVE",
"374 225 OFFCURVE",
"350 274 OFFCURVE",
"350 299 QCURVE SMOOTH",
"350 326 OFFCURVE",
"376 375 OFFCURVE",
"423 399 OFFCURVE",
"448 399 QCURVE",
"448 399 LINE",
"475 399 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"231 522 OFFCURVE",
"149 379 OFFCURVE",
"149 299 QCURVE SMOOTH",
"149 221 OFFCURVE",
"229 80 OFFCURVE",
"370 0 OFFCURVE",
"448 0 QCURVE SMOOTH",
"528 0 OFFCURVE",
"669 80 OFFCURVE",
"749 221 OFFCURVE",
"749 299 QCURVE SMOOTH",
"749 379 OFFCURVE",
"667 522 OFFCURVE",
"524 600 OFFCURVE",
"448 600 QCURVE",
"448 600 LINE",
"372 600 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"522 1274 OFFCURVE",
"548 1227 OFFCURVE",
"548 1200 QCURVE SMOOTH",
"548 1174 OFFCURVE",
"524 1126 OFFCURVE",
"475 1100 OFFCURVE",
"448 1100 QCURVE SMOOTH",
"423 1100 OFFCURVE",
"374 1126 OFFCURVE",
"350 1174 OFFCURVE",
"350 1200 QCURVE SMOOTH",
"350 1227 OFFCURVE",
"376 1274 OFFCURVE",
"423 1300 OFFCURVE",
"448 1300 QCURVE",
"448 1300 LINE",
"475 1300 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"231 1423 OFFCURVE",
"149 1278 OFFCURVE",
"149 1200 QCURVE SMOOTH",
"149 1122 OFFCURVE",
"229 979 OFFCURVE",
"370 899 OFFCURVE",
"448 899 QCURVE SMOOTH",
"528 899 OFFCURVE",
"669 979 OFFCURVE",
"749 1122 OFFCURVE",
"749 1200 QCURVE SMOOTH",
"749 1278 OFFCURVE",
"667 1423 OFFCURVE",
"524 1499 OFFCURVE",
"448 1499 QCURVE",
"448 1499 LINE",
"372 1499 OFFCURVE"
);
}
);
width = 899;
}
);
note = uni17C7;
unicode = 17C7;
},
{
glyphname = uni17C8;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"190 412 OFFCURVE",
"149 340 OFFCURVE",
"149 299 QCURVE SMOOTH",
"149 260 OFFCURVE",
"190 190 OFFCURVE",
"260 150 OFFCURVE",
"299 150 QCURVE SMOOTH",
"337 150 OFFCURVE",
"409 190 OFFCURVE",
"448 260 OFFCURVE",
"448 299 QCURVE SMOOTH",
"448 340 OFFCURVE",
"407 412 OFFCURVE",
"337 451 OFFCURVE",
"299 451 QCURVE",
"299 451 LINE",
"262 451 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"190 1311 OFFCURVE",
"149 1239 OFFCURVE",
"149 1200 QCURVE SMOOTH",
"149 1161 OFFCURVE",
"190 1090 OFFCURVE",
"260 1051 OFFCURVE",
"299 1051 QCURVE SMOOTH",
"337 1051 OFFCURVE",
"409 1090 OFFCURVE",
"448 1161 OFFCURVE",
"448 1200 QCURVE SMOOTH",
"448 1239 OFFCURVE",
"407 1311 OFFCURVE",
"337 1350 OFFCURVE",
"299 1350 QCURVE",
"299 1350 LINE",
"262 1350 OFFCURVE"
);
}
);
width = 598;
}
);
note = uni17C8;
unicode = 17C8;
},
{
glyphname = uni17C9;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-722 2251 LINE",
"-923 2251 LINE",
"-923 1651 LINE",
"-722 1651 LINE"
);
},
{
closed = 1;
nodes = (
"-372 2251 LINE",
"-573 2251 LINE",
"-573 1651 LINE",
"-372 1651 LINE"
);
}
);
width = 0;
}
);
note = uni17C9;
unicode = 17C9;
},
{
glyphname = uni17CA;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-570 1849 LINE",
"-648 1800 LINE",
"-724 1849 LINE",
"-1148 1849 LINE",
"-1148 1599 LINE",
"-149 1599 LINE",
"-149 1849 LINE"
);
}
);
width = 0;
}
);
note = uni17CA;
unicode = 17CA;
},
{
glyphname = uni17CB;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-524 2251 LINE",
"-774 2251 LINE",
"-774 1651 LINE",
"-524 1651 LINE"
);
}
);
width = 0;
}
);
note = uni17CB;
unicode = 17CB;
},
{
glyphname = uni17CC;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 1950 QCURVE SMOOTH",
"-200 2099 LINE",
"-507 2099 LINE",
"-507 1950 OFFCURVE",
"-663 1950 QCURVE SMOOTH",
"-1099 1950 LINE",
"-1099 1651 LINE",
"-200 1651 LINE",
"-200 1759 LINE",
"-790 1759 LINE",
"-790 1759 LINE",
"-790 1849 LINE",
"-481 1849 LINE SMOOTH",
"-200 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17CC;
unicode = 17CC;
},
{
glyphname = uni17CD;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 1950 QCURVE SMOOTH",
"-200 2099 LINE",
"-507 2099 LINE",
"-507 1950 OFFCURVE",
"-663 1950 QCURVE SMOOTH",
"-1099 1950 LINE",
"-1099 1651 LINE",
"-642 1651 LINE",
"-642 1759 LINE",
"-790 1759 LINE",
"-790 1759 LINE",
"-790 1849 LINE",
"-481 1849 LINE SMOOTH",
"-200 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17CD;
unicode = 17CD;
},
{
glyphname = uni17CE;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-348 1849 LINE",
"-348 2050 LINE",
"-549 2050 LINE",
"-549 2251 LINE",
"-747 2251 LINE",
"-747 2050 LINE",
"-948 2050 LINE",
"-948 1849 LINE",
"-747 1849 LINE",
"-747 1651 LINE",
"-549 1651 LINE",
"-549 1849 LINE"
);
}
);
width = 0;
}
);
note = uni17CE;
unicode = 17CE;
},
{
glyphname = uni17CF;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-650 1737 LINE",
"-511 1651 LINE",
"-200 1651 LINE",
"-200 1870 LINE",
"-511 1870 LINE",
"-511 1769 LINE",
"-648 1855 LINE",
"-786 1769 LINE",
"-786 1950 LINE",
"-478 1950 LINE SMOOTH",
"-200 1950 OFFCURVE",
"-200 2050 QCURVE SMOOTH",
"-200 2150 LINE",
"-511 2150 LINE",
"-511 2050 OFFCURVE",
"-665 2050 QCURVE SMOOTH",
"-1099 2050 LINE",
"-1099 2050 LINE",
"-1099 1651 LINE",
"-786 1651 LINE",
"-786 1651 LINE",
"-784 1651 LINE"
);
}
);
width = 0;
}
);
note = uni17CF;
unicode = 17CF;
},
{
glyphname = uni17D0;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1800 QCURVE SMOOTH",
"0 2050 LINE",
"-281 2050 LINE",
"-281 1849 LINE",
"-616 1849 LINE",
"-616 1901 LINE",
"-506 1901 LINE",
"-506 2001 LINE",
"-899 2001 LINE",
"-899 2001 LINE",
"-899 1651 LINE",
"-223 1651 LINE SMOOTH",
"0 1651 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D0;
unicode = 17D0;
},
{
glyphname = uni17D1;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-149 1901 LINE",
"-1148 1901 LINE",
"-1148 1651 LINE",
"-149 1651 LINE"
);
}
);
width = 0;
}
);
note = uni17D1;
unicode = 17D1;
},
{
glyphname = uni17D2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-348 -500 LINE",
"-348 -299 LINE",
"-549 -299 LINE",
"-549 -100 LINE",
"-747 -100 LINE",
"-747 -299 LINE",
"-948 -299 LINE",
"-948 -500 LINE",
"-747 -500 LINE",
"-747 -700 LINE",
"-549 -700 LINE",
"-549 -500 LINE"
);
}
);
width = 0;
}
);
note = uni17D2;
unicode = 17D2;
},
{
glyphname = uni17D3;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-562 2087 OFFCURVE",
"-532 2030 OFFCURVE",
"-532 2001 QCURVE SMOOTH",
"-532 1970 OFFCURVE",
"-560 1915 OFFCURVE",
"-618 1882 OFFCURVE",
"-648 1882 QCURVE SMOOTH",
"-677 1882 OFFCURVE",
"-732 1915 OFFCURVE",
"-765 1970 OFFCURVE",
"-765 2001 QCURVE SMOOTH",
"-765 2030 OFFCURVE",
"-732 2087 OFFCURVE",
"-677 2118 OFFCURVE",
"-648 2118 QCURVE",
"-648 2118 LINE",
"-618 2118 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-976 2261 OFFCURVE",
"-1099 2091 OFFCURVE",
"-1099 2001 QCURVE SMOOTH",
"-1099 1909 OFFCURVE",
"-978 1743 OFFCURVE",
"-763 1651 OFFCURVE",
"-648 1651 QCURVE SMOOTH",
"-532 1651 OFFCURVE",
"-317 1743 OFFCURVE",
"-200 1909 OFFCURVE",
"-200 2001 QCURVE SMOOTH",
"-200 2091 OFFCURVE",
"-321 2261 OFFCURVE",
"-534 2349 OFFCURVE",
"-648 2349 QCURVE",
"-648 2349 LINE",
"-761 2349 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D3;
unicode = 17D3;
},
{
glyphname = uni17D4;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"798 1245 QCURVE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"591 1321 OFFCURVE",
"499 1321 QCURVE",
"499 1499 LINE",
"149 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE SMOOTH",
"653 1100 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni17D4;
unicode = 17D4;
},
{
glyphname = uni17D5;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"798 1245 QCURVE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"591 1321 OFFCURVE",
"499 1321 QCURVE",
"499 1499 LINE",
"149 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE SMOOTH",
"653 1100 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1648 0 LINE",
"1648 1499 LINE",
"1300 1499 LINE",
"1300 0 LINE"
);
}
);
width = 1798;
}
);
note = uni17D5;
unicode = 17D5;
},
{
glyphname = uni17D6;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"522 375 OFFCURVE",
"549 326 OFFCURVE",
"549 299 QCURVE SMOOTH",
"549 274 OFFCURVE",
"522 225 OFFCURVE",
"475 201 OFFCURVE",
"448 201 QCURVE SMOOTH",
"424 201 OFFCURVE",
"375 225 OFFCURVE",
"348 274 OFFCURVE",
"348 299 QCURVE SMOOTH",
"348 326 OFFCURVE",
"377 375 OFFCURVE",
"424 399 OFFCURVE",
"448 399 QCURVE",
"448 399 LINE",
"475 399 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"229 522 OFFCURVE",
"149 379 OFFCURVE",
"149 299 QCURVE SMOOTH",
"149 221 OFFCURVE",
"227 80 OFFCURVE",
"371 0 OFFCURVE",
"448 0 QCURVE SMOOTH",
"526 0 OFFCURVE",
"670 80 OFFCURVE",
"749 221 OFFCURVE",
"749 299 QCURVE SMOOTH",
"749 379 OFFCURVE",
"667 522 OFFCURVE",
"524 600 OFFCURVE",
"448 600 QCURVE",
"448 600 LINE",
"373 600 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"522 1274 OFFCURVE",
"549 1227 OFFCURVE",
"549 1200 QCURVE SMOOTH",
"549 1174 OFFCURVE",
"522 1126 OFFCURVE",
"475 1100 OFFCURVE",
"448 1100 QCURVE SMOOTH",
"424 1100 OFFCURVE",
"375 1126 OFFCURVE",
"348 1174 OFFCURVE",
"348 1200 QCURVE SMOOTH",
"348 1227 OFFCURVE",
"377 1274 OFFCURVE",
"424 1300 OFFCURVE",
"448 1300 QCURVE",
"448 1300 LINE",
"475 1300 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"229 1423 OFFCURVE",
"149 1278 OFFCURVE",
"149 1200 QCURVE SMOOTH",
"149 1122 OFFCURVE",
"227 979 OFFCURVE",
"371 899 OFFCURVE",
"448 899 QCURVE SMOOTH",
"526 899 OFFCURVE",
"670 979 OFFCURVE",
"749 1122 OFFCURVE",
"749 1200 QCURVE SMOOTH",
"749 1278 OFFCURVE",
"667 1423 OFFCURVE",
"524 1499 OFFCURVE",
"448 1499 QCURVE",
"448 1499 LINE",
"373 1499 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"850 801 LINE",
"49 801 LINE",
"49 700 LINE",
"850 700 LINE"
);
}
);
width = 899;
}
);
note = uni17D6;
unicode = 17D6;
},
{
glyphname = uni17D7;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"649 1360 LINE",
"499 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE",
"499 1239 LINE",
"649 1100 LINE",
"798 1239 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni17D7;
unicode = 17D7;
},
{
glyphname = uni17D8;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"798 1245 QCURVE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"591 1321 OFFCURVE",
"499 1321 QCURVE",
"499 1499 LINE",
"149 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE SMOOTH",
"653 1100 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"2199 1499 QCURVE SMOOTH",
"1699 1499 LINE SMOOTH",
"1449 1499 OFFCURVE",
"1449 1249 QCURVE SMOOTH",
"1449 0 LINE",
"1898 0 LINE",
"1898 250 LINE",
"1800 250 LINE",
"1800 1249 LINE",
"2099 1249 LINE",
"2099 250 LINE SMOOTH",
"2099 0 OFFCURVE",
"2349 0 QCURVE SMOOTH",
"2848 0 LINE SMOOTH",
"3098 0 OFFCURVE",
"3098 250 QCURVE SMOOTH",
"3098 999 LINE",
"2809 1249 LINE",
"3098 1249 LINE",
"3098 1499 LINE",
"2799 1499 LINE",
"2598 1157 LINE",
"2750 999 LINE",
"2750 250 LINE",
"2449 250 LINE",
"2449 250 LINE",
"2449 1249 LINE SMOOTH",
"2449 1499 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"4048 1245 QCURVE",
"4048 0 LINE",
"4399 0 LINE",
"4399 1499 LINE",
"4048 1499 LINE",
"3842 1321 OFFCURVE",
"3749 1321 QCURVE",
"3749 1499 LINE",
"3399 1499 LINE",
"3399 1499 LINE",
"3399 1100 LINE",
"3749 1100 LINE SMOOTH",
"3903 1100 OFFCURVE"
);
}
);
width = 4548;
}
);
note = uni17D8;
unicode = 17D8;
},
{
glyphname = uni17D9;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1249 750 QCURVE SMOOTH",
"1249 1499 OFFCURVE",
"700 1499 QCURVE SMOOTH",
"149 1499 OFFCURVE",
"149 750 QCURVE SMOOTH",
"149 0 OFFCURVE",
"700 0 QCURVE",
"700 0 LINE",
"1249 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1112 750 QCURVE SMOOTH",
"1112 125 OFFCURVE",
"700 125 QCURVE SMOOTH",
"286 125 OFFCURVE",
"286 750 QCURVE SMOOTH",
"286 1374 OFFCURVE",
"700 1374 QCURVE",
"700 1374 LINE",
"1112 1374 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"974 750 QCURVE SMOOTH",
"974 1249 OFFCURVE",
"700 1249 QCURVE SMOOTH",
"423 1249 OFFCURVE",
"423 750 QCURVE SMOOTH",
"423 250 OFFCURVE",
"700 250 QCURVE",
"700 250 LINE",
"974 250 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"837 750 QCURVE SMOOTH",
"837 375 OFFCURVE",
"700 375 QCURVE SMOOTH",
"563 375 OFFCURVE",
"563 750 QCURVE SMOOTH",
"563 1124 OFFCURVE",
"700 1124 QCURVE",
"700 1124 LINE",
"837 1124 OFFCURVE"
);
}
);
width = 1398;
}
);
note = uni17D9;
unicode = 17D9;
},
{
glyphname = uni17DA;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1092 QCURVE SMOOTH",
"149 410 LINE SMOOTH",
"149 0 OFFCURVE",
"524 0 QCURVE SMOOTH",
"851 0 OFFCURVE",
"1128 680 QCURVE SMOOTH",
"1337 1192 LINE",
"1650 135 LINE",
"1775 135 LINE",
"1961 954 LINE",
"2150 272 LINE",
"2275 272 LINE",
"2400 680 LINE",
"2588 680 LINE SMOOTH",
"2650 680 OFFCURVE",
"2650 748 QCURVE SMOOTH",
"2650 815 OFFCURVE",
"2588 815 QCURVE SMOOTH",
"2338 815 LINE",
"2211 510 LINE",
"2025 1223 LINE",
"1898 1223 LINE",
"1714 365 LINE",
"1400 1360 LINE",
"1273 1360 LINE",
"1028 748 LINE SMOOTH",
"903 434 OFFCURVE",
"653 133 OFFCURVE",
"528 133 QCURVE SMOOTH",
"274 133 OFFCURVE",
"274 410 QCURVE SMOOTH",
"274 1092 LINE SMOOTH",
"274 1364 OFFCURVE",
"528 1364 QCURVE SMOOTH",
"776 1364 OFFCURVE",
"776 1092 QCURVE SMOOTH",
"776 954 OFFCURVE",
"589 954 QCURVE SMOOTH",
"528 954 OFFCURVE",
"528 887 QCURVE SMOOTH",
"528 819 OFFCURVE",
"589 819 QCURVE SMOOTH",
"903 819 OFFCURVE",
"903 1090 QCURVE SMOOTH",
"903 1499 OFFCURVE",
"524 1499 QCURVE",
"524 1499 LINE",
"149 1499 OFFCURVE"
);
}
);
width = 2799;
}
);
note = uni17DA;
unicode = 17DA;
},
{
glyphname = uni17DB;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 999 LINE",
"150 874 LINE",
"0 874 LINE",
"0 625 LINE",
"150 625 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 625 LINE",
"649 625 LINE",
"649 874 LINE",
"500 874 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
}
);
width = 649;
}
);
note = uni17DB;
unicode = 17DB;
},
{
glyphname = uni17DC;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"675 -10 LINE",
"675 -10 LINE",
"675 -10 LINE",
"910 -10 OFFCURVE",
"1150 182 OFFCURVE",
"1150 359 QCURVE SMOOTH",
"1150 513 OFFCURVE",
"914 658 OFFCURVE",
"675 658 QCURVE SMOOTH",
"576 658 OFFCURVE",
"455 684 OFFCURVE",
"388 764 OFFCURVE",
"388 842 QCURVE SMOOTH",
"388 941 OFFCURVE",
"534 1055 OFFCURVE",
"675 1055 QCURVE SMOOTH",
"817 1055 OFFCURVE",
"963 979 OFFCURVE",
"963 910 QCURVE SMOOTH",
"963 851 OFFCURVE",
"922 851 QCURVE SMOOTH",
"862 851 OFFCURVE",
"862 793 QCURVE SMOOTH",
"862 734 OFFCURVE",
"922 734 QCURVE SMOOTH",
"1001 734 OFFCURVE",
"1099 763 OFFCURVE",
"1150 840 OFFCURVE",
"1150 910 QCURVE SMOOTH",
"1150 1057 OFFCURVE",
"911 1210 OFFCURVE",
"675 1210 QCURVE SMOOTH",
"440 1210 OFFCURVE",
"200 1019 OFFCURVE",
"200 842 QCURVE SMOOTH",
"200 688 OFFCURVE",
"436 543 OFFCURVE",
"675 543 QCURVE SMOOTH",
"775 543 OFFCURVE",
"895 518 OFFCURVE",
"963 438 OFFCURVE",
"963 360 QCURVE SMOOTH",
"963 260 OFFCURVE",
"817 146 OFFCURVE",
"675 146 QCURVE SMOOTH",
"533 146 OFFCURVE",
"388 222 OFFCURVE",
"388 292 QCURVE SMOOTH",
"388 350 OFFCURVE",
"429 350 QCURVE SMOOTH",
"458 350 OFFCURVE",
"489 380 OFFCURVE",
"489 408 QCURVE SMOOTH",
"489 468 OFFCURVE",
"429 468 QCURVE SMOOTH",
"350 468 OFFCURVE",
"251 439 OFFCURVE",
"200 363 OFFCURVE",
"200 293 QCURVE SMOOTH",
"200 145 OFFCURVE",
"438 -10 OFFCURVE",
"675 -10 QCURVE",
"675 -10 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */\0120 5 0 8 7 5 8 105 0 7 0 6 9 7 6 105 0 9 0 4 1 9 4 105 0 1 0 2 3 1 2 105 0 3 3 0 97 10 1 0 0 25 0 78 1 0 54 52 47 45 42 40 38 36 31 29 25 23 18 16 13 11 8 6 0 62 1 58 11 7 22 \012CALL[ ]	/* CallFunction */";
};
width = 1350;
}
);
note = uni17DC;
unicode = 17DC;
},
{
glyphname = uni17DD;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1089 1470 LINE",
"-1089 1470 LINE",
"-1089 1470 LINE",
"-898 1470 LINE",
"-898 1651 OFFCURVE",
"-645 1651 QCURVE SMOOTH",
"-393 1651 OFFCURVE",
"-393 1470 QCURVE",
"-199 1470 LINE",
"-199 1771 OFFCURVE",
"-644 1771 QCURVE SMOOTH",
"-1089 1771 OFFCURVE",
"-1089 1470 QCURVE",
"-1089 1470 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01213 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 23 values pushed */\0123 1 1 2 2 1 113 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 22 values pushed */\0123 1 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 7 values pushed */\01217 33 17 33 4 7 26 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17DD;
unicode = 17DD;
},
{
glyphname = uni17E0;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1148 0 OFFCURVE",
"1148 250 QCURVE SMOOTH",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE",
"149 1249 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"798 1249 LINE",
"798 250 LINE",
"499 250 LINE",
"499 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni17E0;
unicode = 17E0;
},
{
glyphname = uni17E1;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 0 OFFCURVE",
"1148 250 QCURVE SMOOTH",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE",
"899 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 600 LINE",
"649 600 LINE",
"649 850 LINE",
"499 850 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1249 LINE",
"798 250 LINE",
"399 250 LINE",
"399 0 LINE",
"899 0 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17E1;
unicode = 17E1;
},
{
glyphname = uni17E2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"600 1499 LINE",
"600 756 LINE",
"999 756 LINE",
"999 950 LINE",
"948 950 LINE",
"948 1233 LINE",
"1048 1108 LINE",
"1149 1233 LINE",
"1149 250 LINE",
"500 250 LINE",
"500 1599 LINE SMOOTH",
"500 1749 OFFCURVE",
"250 1749 QCURVE SMOOTH",
"49 1749 LINE",
"49 1499 LINE",
"149 1499 LINE",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"1249 0 LINE SMOOTH",
"1499 0 OFFCURVE",
"1499 250 QCURVE",
"1499 250 LINE",
"1499 1499 LINE",
"1149 1499 LINE",
"1048 1376 LINE",
"948 1499 LINE"
);
}
);
width = 1648;
}
);
note = uni17E2;
unicode = 17E2;
},
{
glyphname = uni17E3;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1800 0 LINE",
"1800 1249 LINE SMOOTH",
"1800 1499 OFFCURVE",
"1550 1499 QCURVE SMOOTH",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1249 QCURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 0 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1249 LINE",
"1449 1249 LINE",
"1449 0 LINE"
);
}
);
width = 1949;
}
);
note = uni17E3;
unicode = 17E3;
},
{
glyphname = uni17E4;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"250 1749 QCURVE SMOOTH",
"49 1749 LINE",
"49 1499 LINE",
"149 1499 LINE",
"149 250 LINE SMOOTH",
"149 125 OFFCURVE",
"299 0 OFFCURVE",
"448 0 QCURVE SMOOTH",
"1100 0 LINE",
"1149 250 LINE",
"999 397 LINE",
"999 801 LINE",
"1149 801 LINE",
"1149 999 LINE",
"899 999 LINE SMOOTH",
"749 999 OFFCURVE",
"649 874 OFFCURVE",
"649 801 QCURVE SMOOTH",
"649 449 LINE",
"878 250 LINE",
"500 250 LINE",
"500 250 LINE",
"500 1599 LINE SMOOTH",
"500 1749 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni17E4;
unicode = 17E4;
},
{
glyphname = uni17E5;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"225 63 QCURVE SMOOTH",
"299 0 OFFCURVE",
"448 0 QCURVE SMOOTH",
"1099 0 LINE",
"1148 250 LINE",
"999 397 LINE",
"999 750 LINE",
"1148 750 LINE",
"1148 950 LINE",
"899 950 LINE SMOOTH",
"749 950 OFFCURVE",
"649 825 OFFCURVE",
"649 750 QCURVE SMOOTH",
"649 449 LINE",
"888 250 LINE",
"499 250 LINE",
"499 1151 LINE",
"950 1151 LINE SMOOTH",
"1148 1151 OFFCURVE",
"1148 1350 QCURVE SMOOTH",
"1148 1700 LINE",
"798 1700 LINE",
"798 1350 LINE",
"499 1350 LINE",
"499 1599 LINE",
"149 1599 LINE",
"149 1401 LINE SMOOTH",
"149 1348 OFFCURVE",
"208 1253 OFFCURVE",
"262 1227 QCURVE SMOOTH",
"290 1212 OFFCURVE",
"319 1206 QCURVE",
"149 1100 LINE",
"149 1100 LINE",
"149 250 LINE SMOOTH",
"149 125 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni17E5;
unicode = 17E5;
},
{
glyphname = uni17E6;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"899 1499 QCURVE SMOOTH",
"499 1499 LINE",
"499 1849 LINE",
"149 1849 LINE",
"149 1151 LINE",
"499 1151 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 250 LINE",
"499 250 LINE",
"499 649 LINE",
"649 649 LINE",
"649 899 LINE",
"399 899 LINE SMOOTH",
"149 899 OFFCURVE",
"149 649 QCURVE SMOOTH",
"149 250 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1148 0 OFFCURVE",
"1148 250 QCURVE",
"1148 250 LINE",
"1148 1249 LINE SMOOTH",
"1148 1499 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni17E6;
unicode = 17E6;
},
{
glyphname = uni17E7;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 250 LINE SMOOTH",
"798 0 OFFCURVE",
"1048 0 QCURVE SMOOTH",
"1398 0 LINE SMOOTH",
"1648 0 OFFCURVE",
"1648 250 QCURVE SMOOTH",
"1648 1800 LINE",
"1300 1800 LINE",
"1300 250 LINE",
"1148 250 LINE",
"1148 250 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE"
);
}
);
width = 1798;
}
);
note = uni17E7;
unicode = 17E7;
},
{
glyphname = uni17E8;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 0 LINE",
"1148 801 LINE SMOOTH",
"1148 950 OFFCURVE",
"999 950 QCURVE SMOOTH",
"649 950 LINE",
"649 700 LINE",
"798 700 LINE",
"798 293 LINE",
"649 438 LINE",
"499 293 LINE",
"499 1300 LINE",
"798 1300 LINE",
"798 1200 LINE",
"1148 1200 LINE",
"1148 1849 LINE",
"798 1849 LINE",
"798 1499 LINE",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1300 QCURVE",
"149 1300 LINE",
"149 0 LINE",
"499 0 LINE",
"649 145 LINE",
"798 0 LINE"
);
}
);
width = 1298;
}
);
note = uni17E8;
unicode = 17E8;
},
{
glyphname = uni17E9;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 1151 QCURVE SMOOTH",
"499 1300 LINE",
"798 1300 LINE",
"798 1200 LINE",
"1148 1200 LINE",
"1148 1849 LINE",
"798 1849 LINE",
"798 1499 LINE",
"399 1499 LINE SMOOTH",
"149 1499 OFFCURVE",
"149 1300 QCURVE SMOOTH",
"149 1051 LINE",
"188 973 OFFCURVE",
"258 926 QCURVE",
"188 879 OFFCURVE",
"149 801 QCURVE",
"149 201 LINE SMOOTH",
"149 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"899 0 LINE SMOOTH",
"1148 0 OFFCURVE",
"1148 201 QCURVE SMOOTH",
"1148 500 LINE SMOOTH",
"1148 649 OFFCURVE",
"966 649 QCURVE SMOOTH",
"649 649 LINE",
"649 350 LINE",
"798 350 LINE",
"798 201 LINE",
"499 201 LINE",
"499 700 LINE SMOOTH",
"499 801 OFFCURVE",
"649 801 QCURVE SMOOTH",
"999 801 LINE",
"999 801 LINE",
"999 1051 LINE",
"649 1051 LINE SMOOTH",
"499 1051 OFFCURVE"
);
}
);
width = 1298;
}
);
note = uni17E9;
unicode = 17E9;
},
{
glyphname = uni17D2_1780;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-450 -82 QCURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1099 -82 OFFCURVE",
"-1099 -229 QCURVE SMOOTH",
"-1099 -594 LINE",
"-800 -594 LINE",
"-800 -229 LINE",
"-499 -229 LINE",
"-499 -594 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -229 LINE SMOOTH",
"-200 -82 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_1780;
},
{
glyphname = uni17D2_1781;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1099 -348 OFFCURVE",
"-1099 -408 QCURVE SMOOTH",
"-1099 -508 LINE SMOOTH",
"-1099 -594 OFFCURVE",
"-849 -594 QCURVE SMOOTH",
"-450 -594 LINE SMOOTH",
"-200 -594 OFFCURVE",
"-200 -508 QCURVE SMOOTH",
"-200 -369 LINE",
"-499 -416 LINE",
"-499 -508 LINE",
"-800 -508 LINE",
"-800 -442 LINE SMOOTH",
"-800 -385 OFFCURVE",
"-200 -326 OFFCURVE",
"-200 -266 QCURVE SMOOTH",
"-200 -168 LINE SMOOTH",
"-200 -82 OFFCURVE",
"-450 -82 QCURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1099 -82 OFFCURVE",
"-1099 -168 QCURVE SMOOTH",
"-1099 -231 LINE SMOOTH",
"-1099 -258 OFFCURVE",
"-917 -258 QCURVE SMOOTH",
"-800 -258 LINE",
"-800 -258 LINE",
"-800 -168 LINE",
"-499 -168 LINE",
"-499 -250 LINE SMOOTH",
"-499 -291 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_1781;
},
{
glyphname = uni17D2_1782;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -209 LINE SMOOTH",
"-200 -82 OFFCURVE",
"-450 -82 QCURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1099 -82 OFFCURVE",
"-1099 -209 QCURVE SMOOTH",
"-1099 -594 LINE",
"-800 -594 LINE",
"-800 -584 LINE",
"-612 -393 LINE",
"-702 -315 LINE",
"-800 -408 LINE",
"-800 -408 LINE",
"-800 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-200 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1782;
},
{
glyphname = uni17D2_1783;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-450 -422 LINE",
"-749 -422 LINE",
"-749 -82 LINE",
"-1099 -82 LINE",
"-1099 -182 LINE",
"-1050 -182 LINE",
"-1050 -422 LINE SMOOTH",
"-1050 -594 OFFCURVE",
"-800 -594 QCURVE SMOOTH",
"251 -594 LINE SMOOTH",
"500 -594 OFFCURVE",
"500 -422 QCURVE SMOOTH",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 999 LINE",
"150 -422 LINE",
"-149 -422 LINE",
"-149 -82 LINE",
"-450 -82 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1783;
},
{
glyphname = uni17D2_1784;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -82 QCURVE",
"-499 -82 LINE",
"-499 -467 OFFCURVE",
"-702 -467 QCURVE SMOOTH",
"-800 -467 OFFCURVE",
"-800 -381 QCURVE SMOOTH",
"-800 -295 OFFCURVE",
"-700 -295 QCURVE",
"-700 -168 LINE",
"-849 -168 LINE SMOOTH",
"-1099 -168 OFFCURVE",
"-1099 -338 QCURVE SMOOTH",
"-1099 -381 LINE SMOOTH",
"-1099 -594 OFFCURVE",
"-702 -594 QCURVE",
"-702 -594 LINE",
"-200 -594 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_1784;
},
{
glyphname = uni17D2_1785;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-198 -82 LINE",
"-499 -82 LINE",
"-499 -168 LINE",
"-597 -168 LINE",
"-597 -252 LINE",
"-499 -252 LINE",
"-499 -467 LINE",
"-798 -467 LINE",
"-798 -82 LINE",
"-1148 -82 LINE",
"-1148 -209 LINE",
"-1099 -209 LINE",
"-1099 -467 LINE SMOOTH",
"-1099 -594 OFFCURVE",
"-849 -594 QCURVE SMOOTH",
"-198 -594 LINE",
"-198 -594 LINE",
"-198 -252 LINE",
"-97 -252 LINE",
"-97 -168 LINE",
"-198 -168 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1785;
},
{
glyphname = uni17D2_1786;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-799 -457 LINE",
"-498 -594 LINE",
"-199 -594 LINE",
"-199 -82 LINE",
"-598 -82 LINE",
"-598 -252 LINE",
"-498 -252 LINE",
"-498 -446 LINE",
"-799 -313 LINE",
"-799 -82 LINE",
"-1098 -82 LINE",
"-1098 -295 LINE",
"-1198 -295 LINE",
"-1198 -422 LINE",
"-1098 -422 LINE",
"-1098 -594 LINE",
"-799 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1786;
},
{
glyphname = uni17D2_1787;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -252 LINE",
"-499 -403 LINE",
"-648 -279 LINE",
"-800 -403 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-648 -469 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -252 LINE",
"-100 -252 LINE",
"-100 -168 LINE",
"-200 -168 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-499 -168 LINE",
"-599 -168 LINE",
"-599 -252 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1787;
},
{
glyphname = uni17D2_1788;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-350 -422 LINE",
"-548 -422 LINE",
"-548 -209 LINE SMOOTH",
"-548 -82 OFFCURVE",
"-798 -82 QCURVE SMOOTH",
"-1099 -82 LINE SMOOTH",
"-1349 -82 OFFCURVE",
"-1349 -209 QCURVE SMOOTH",
"-1349 -594 LINE",
"-950 -594 LINE",
"-950 -422 LINE",
"-1050 -422 LINE",
"-1050 -209 LINE",
"-849 -209 LINE",
"-849 -422 LINE SMOOTH",
"-849 -594 OFFCURVE",
"-599 -594 QCURVE SMOOTH",
"250 -594 LINE SMOOTH",
"500 -594 OFFCURVE",
"500 -422 QCURVE SMOOTH",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 999 LINE",
"150 -422 LINE",
"-49 -422 LINE",
"-49 -82 LINE",
"-350 -82 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1788;
},
{
glyphname = uni17D2_1789;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-777 -494 QCURVE SMOOTH",
"-644 -594 OFFCURVE",
"-458 -594 QCURVE SMOOTH",
"-149 -594 OFFCURVE",
"-149 -287 QCURVE SMOOTH",
"-149 -82 LINE",
"-536 -82 LINE",
"-536 -287 LINE",
"-425 -287 LINE",
"-425 -410 OFFCURVE",
"-511 -410 QCURVE SMOOTH",
"-597 -410 OFFCURVE",
"-728 -272 QCURVE SMOOTH",
"-859 -135 OFFCURVE",
"-1064 -135 QCURVE SMOOTH",
"-1148 -135 LINE",
"-1148 -135 LINE",
"-1148 -391 LINE",
"-1021 -391 LINE SMOOTH",
"-910 -391 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_1789;
},
{
glyphname = uni17D2_1789.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-887 -594 QCURVE",
"-348 -594 LINE SMOOTH",
"-147 -594 OFFCURVE",
"-147 -522 QCURVE SMOOTH",
"-147 -401 LINE",
"-647 -401 LINE",
"-647 -487 LINE",
"-498 -487 LINE",
"-498 -522 LINE",
"-743 -522 LINE",
"-1151 -418 OFFCURVE",
"-1499 -418 QCURVE SMOOTH",
"-1798 -418 LINE",
"-1798 -418 LINE",
"-1798 -506 LINE",
"-1499 -506 LINE SMOOTH",
"-1251 -506 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-1798 -82 LINE",
"-1798 -365 LINE",
"-1358 -365 LINE",
"-1358 -260 LINE",
"-1448 -260 LINE",
"-1448 -184 LINE",
"-1298 -236 LINE",
"-1149 -184 LINE",
"-1149 -365 LINE",
"-799 -365 LINE",
"-799 -82 LINE",
"-1149 -82 LINE",
"-1298 -133 LINE",
"-1448 -82 LINE"
);
},
{
closed = 1;
nodes = (
"-747 -170 LINE",
"-498 -170 LINE",
"-498 -365 LINE",
"-147 -365 LINE",
"-147 -82 LINE",
"-747 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1789.a;
},
{
glyphname = uni17D2_178A;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-450 -82 QCURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1099 -82 OFFCURVE",
"-1099 -209 QCURVE SMOOTH",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE",
"-800 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -209 LINE SMOOTH",
"-200 -82 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_178A;
},
{
glyphname = uni17D2_178B;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -82 LINE",
"-499 -82 LINE",
"-499 -158 LINE",
"-1099 -158 LINE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-648 -489 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -289 LINE",
"-100 -289 LINE",
"-100 -158 LINE",
"-200 -158 LINE"
);
},
{
closed = 1;
nodes = (
"-499 -420 LINE",
"-648 -334 LINE",
"-800 -420 LINE",
"-800 -289 LINE",
"-499 -289 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178B;
},
{
glyphname = uni17D2_178C;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1099 -82 LINE",
"-1099 -276 LINE",
"-800 -276 LINE",
"-800 -201 LINE",
"-648 -256 LINE",
"-499 -201 LINE",
"-499 -250 LINE SMOOTH",
"-499 -291 OFFCURVE",
"-1099 -348 QCURVE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-499 -526 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -381 LINE",
"-499 -381 LINE",
"-499 -451 LINE",
"-800 -508 LINE",
"-800 -385 LINE",
"-200 -326 OFFCURVE",
"-200 -266 QCURVE",
"-200 -266 LINE",
"-200 -82 LINE",
"-485 -82 LINE",
"-648 -158 LINE",
"-814 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178C;
},
{
glyphname = uni17D2_178D;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-100 -328 QCURVE SMOOTH",
"-200 -328 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-648 -164 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE",
"-800 -248 LINE",
"-648 -330 LINE",
"-499 -248 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -457 LINE",
"-100 -457 LINE SMOOTH",
"-3 -457 OFFCURVE",
"150 -545 OFFCURVE",
"150 -594 QCURVE",
"500 -594 LINE",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 999 LINE",
"150 -406 LINE",
"48 -328 OFFCURVE"
);
}
);
width = 649;
}
);
note = uni17D2_178D;
},
{
glyphname = uni17D2_178E;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-798 -594 LINE",
"-798 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-149 -594 LINE",
"-149 -209 LINE SMOOTH",
"-149 -82 OFFCURVE",
"-399 -82 QCURVE SMOOTH",
"-899 -82 LINE SMOOTH",
"-1149 -82 OFFCURVE",
"-1149 -209 QCURVE SMOOTH",
"-1149 -406 LINE",
"-1298 -313 LINE",
"-1450 -406 LINE",
"-1450 -209 LINE SMOOTH",
"-1450 -82 OFFCURVE",
"-1699 -82 QCURVE SMOOTH",
"-2199 -82 LINE SMOOTH",
"-2449 -82 OFFCURVE",
"-2449 -209 QCURVE SMOOTH",
"-2449 -594 LINE",
"-2099 -594 LINE",
"-2099 -209 LINE",
"-1800 -209 LINE",
"-1800 -209 LINE",
"-1800 -594 LINE",
"-1450 -594 LINE",
"-1298 -500 LINE",
"-1149 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178E;
},
{
glyphname = uni17D2_178F;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-450 -82 QCURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1099 -82 OFFCURVE",
"-1099 -209 QCURVE SMOOTH",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE",
"-800 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -209 LINE SMOOTH",
"-200 -82 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_178F;
},
{
glyphname = uni17D2_1790;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-503 -199 QCURVE SMOOTH",
"-636 -82 OFFCURVE",
"-792 -82 QCURVE SMOOTH",
"-874 -82 LINE SMOOTH",
"-1148 -82 OFFCURVE",
"-1148 -266 QCURVE SMOOTH",
"-1148 -549 LINE",
"-779 -549 LINE",
"-779 -360 LINE",
"-884 -360 LINE",
"-884 -315 LINE SMOOTH",
"-884 -221 OFFCURVE",
"-802 -221 QCURVE SMOOTH",
"-722 -221 OFFCURVE",
"-656 -315 QCURVE SMOOTH",
"-462 -594 OFFCURVE",
"-267 -594 QCURVE SMOOTH",
"-149 -594 LINE",
"-149 -594 LINE",
"-149 -315 LINE",
"-267 -315 LINE SMOOTH",
"-372 -315 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_1790;
},
{
glyphname = uni17D2_1791;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-540 -547 LINE",
"-605 -594 LINE",
"-345 -594 LINE SMOOTH",
"-200 -594 OFFCURVE",
"-200 -500 QCURVE SMOOTH",
"-200 -360 LINE",
"-800 -434 LINE",
"-800 -332 LINE",
"-429 -309 LINE",
"-200 -285 OFFCURVE",
"-200 -182 QCURVE SMOOTH",
"-200 -82 LINE",
"-612 -82 LINE",
"-612 -168 LINE",
"-499 -168 LINE",
"-499 -219 OFFCURVE",
"-673 -231 QCURVE",
"-673 -231 LINE",
"-1099 -266 LINE",
"-1099 -547 LINE",
"-759 -547 LINE",
"-540 -500 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1791;
},
{
glyphname = uni17D2_1792;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-812 -217 OFFCURVE",
"-1099 -274 QCURVE",
"-1099 -594 LINE",
"-812 -594 LINE SMOOTH",
"-704 -594 OFFCURVE",
"-648 -541 QCURVE SMOOTH",
"-593 -492 OFFCURVE",
"-593 -438 QCURVE",
"-483 -469 LINE",
"-319 -469 OFFCURVE",
"-200 -401 OFFCURVE",
"-200 -338 QCURVE SMOOTH",
"-200 -82 LINE",
"-468 -82 LINE",
"-468 -82 LINE",
"-468 -121 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-730 -467 QCURVE SMOOTH",
"-757 -492 OFFCURVE",
"-812 -492 QCURVE",
"-812 -401 LINE",
"-812 -401 LINE",
"-704 -360 LINE",
"-704 -391 LINE SMOOTH",
"-704 -440 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-468 -236 LINE",
"-468 -346 LINE",
"-630 -313 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1792;
},
{
glyphname = uni17D2_1793;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-249 -381 LINE",
"-249 -295 LINE",
"-149 -295 LINE",
"-149 -168 LINE",
"-249 -168 LINE",
"-249 -82 LINE",
"-548 -82 LINE",
"-548 -168 LINE",
"-949 -168 LINE SMOOTH",
"-1099 -168 OFFCURVE",
"-1099 -252 QCURVE SMOOTH",
"-1099 -422 LINE SMOOTH",
"-1099 -508 OFFCURVE",
"-949 -508 QCURVE",
"-949 -508 LINE",
"-548 -508 LINE",
"-548 -594 LINE",
"-149 -594 LINE",
"-149 -381 LINE"
);
},
{
closed = 1;
nodes = (
"-548 -295 LINE",
"-548 -381 LINE",
"-800 -381 LINE",
"-800 -295 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1793;
},
{
glyphname = uni17D2_1794;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1 -469 LINE",
"150 -594 LINE",
"500 -594 LINE",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 -344 LINE",
"1 -219 LINE",
"-149 -344 LINE",
"-149 -209 LINE",
"-100 -209 LINE",
"-100 -82 LINE",
"-499 -82 LINE",
"-499 -594 LINE",
"-149 -594 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1794;
},
{
glyphname = uni17D2_1795;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1099 -594 LINE",
"-800 -594 LINE",
"-648 -469 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -82 LINE",
"-599 -82 LINE",
"-599 -252 LINE",
"-499 -252 LINE",
"-499 -403 LINE",
"-648 -279 LINE",
"-800 -403 LINE",
"-800 -82 LINE",
"-1099 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1795;
},
{
glyphname = uni17D2_1796;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-800 -248 LINE",
"-648 -330 LINE",
"-499 -248 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-648 -164 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1796;
},
{
glyphname = uni17D2_1797;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-199 -209 LINE SMOOTH",
"-199 -82 OFFCURVE",
"-448 -82 QCURVE SMOOTH",
"-848 -82 LINE SMOOTH",
"-1098 -82 OFFCURVE",
"-1098 -209 QCURVE SMOOTH",
"-1098 -422 LINE",
"-1198 -422 LINE",
"-1198 -594 LINE",
"-799 -594 LINE",
"-799 -594 LINE",
"-799 -209 LINE",
"-498 -209 LINE",
"-498 -594 LINE",
"-199 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1797;
},
{
glyphname = uni17D2_1798;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-266 -594 QCURVE SMOOTH",
"-98 -594 OFFCURVE",
"-98 -428 QCURVE SMOOTH",
"-98 -383 OFFCURVE",
"-151 -303 OFFCURVE",
"-199 -285 QCURVE",
"-233 -266 OFFCURVE",
"-270 -264 QCURVE",
"-147 -211 LINE",
"-147 -82 LINE",
"-448 -82 LINE",
"-448 -262 LINE",
"-448 -262 LINE",
"-1198 -262 LINE",
"-1198 -471 LINE",
"-440 -469 LINE",
"-434 -594 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_1798;
},
{
glyphname = uni17D2_1799;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-100 -82 LINE",
"-499 -82 LINE",
"-499 -422 LINE SMOOTH",
"-499 -594 OFFCURVE",
"-249 -594 QCURVE SMOOTH",
"251 -594 LINE SMOOTH",
"500 -594 OFFCURVE",
"500 -422 QCURVE SMOOTH",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 999 LINE",
"150 -422 LINE",
"-149 -422 LINE",
"-149 -252 LINE",
"-100 -252 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1799;
},
{
glyphname = uni17D2_179A;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 -422 LINE SMOOTH",
"150 -594 OFFCURVE",
"399 -594 QCURVE SMOOTH",
"899 -594 LINE SMOOTH",
"1151 -594 OFFCURVE",
"1151 -422 QCURVE SMOOTH",
"1151 -82 LINE",
"801 -82 LINE",
"801 -422 LINE",
"500 -422 LINE",
"500 -422 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_179A;
},
{
glyphname = uni17D2_179B;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-499 -338 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-800 -338 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_179B;
},
{
glyphname = uni17D2_179C;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -379 OFFCURVE",
"-200 -168 QCURVE SMOOTH",
"-200 -82 LINE",
"-499 -82 LINE",
"-618 -166 OFFCURVE",
"-800 -219 QCURVE SMOOTH",
"-984 -272 OFFCURVE",
"-1099 -295 QCURVE",
"-1099 -381 LINE SMOOTH",
"-1099 -481 OFFCURVE",
"-954 -594 OFFCURVE",
"-710 -594 QCURVE",
"-710 -594 LINE",
"-501 -594 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-634 -322 QCURVE SMOOTH",
"-550 -285 OFFCURVE",
"-499 -231 QCURVE",
"-499 -352 OFFCURVE",
"-538 -410 QCURVE SMOOTH",
"-579 -465 OFFCURVE",
"-689 -465 QCURVE SMOOTH",
"-745 -465 OFFCURVE",
"-771 -444 QCURVE SMOOTH",
"-800 -422 OFFCURVE",
"-800 -377 QCURVE",
"-800 -377 LINE",
"-716 -358 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_179C;
},
{
glyphname = uni17D2_179F;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"503 999 LINE",
"212 1249 LINE",
"503 1249 LINE",
"503 1499 LINE",
"202 1499 LINE",
"3 1157 LINE",
"152 999 LINE",
"152 250 LINE",
"3 250 LINE",
"3 0 LINE",
"152 0 LINE",
"152 -422 LINE",
"-149 -422 LINE",
"-149 -82 LINE",
"-548 -82 LINE",
"-548 -252 LINE",
"-499 -252 LINE",
"-499 -422 LINE SMOOTH",
"-499 -594 OFFCURVE",
"-249 -594 QCURVE SMOOTH",
"253 -594 LINE SMOOTH",
"503 -594 OFFCURVE",
"503 -422 QCURVE",
"503 -422 LINE",
"503 0 LINE",
"603 0 LINE",
"603 250 LINE",
"503 250 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_179F;
},
{
glyphname = uni17D2_17A0;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1056 -557 QCURVE SMOOTH",
"-1015 -594 OFFCURVE",
"-933 -594 QCURVE SMOOTH",
"-558 -594 LINE",
"-558 -236 LINE",
"-450 -236 LINE",
"-450 -594 LINE",
"-200 -594 LINE",
"-200 -209 LINE SMOOTH",
"-200 -160 OFFCURVE",
"-241 -121 QCURVE SMOOTH",
"-282 -82 OFFCURVE",
"-364 -82 QCURVE SMOOTH",
"-739 -82 LINE",
"-739 -440 LINE",
"-849 -440 LINE",
"-849 -440 LINE",
"-849 -82 LINE",
"-1099 -82 LINE",
"-1099 -465 LINE SMOOTH",
"-1099 -518 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_17A0;
},
{
glyphname = uni17D2_17A2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1198 -594 LINE",
"-799 -594 LINE",
"-799 -82 LINE",
"-1098 -82 LINE",
"-1098 -467 LINE",
"-1198 -467 LINE"
);
},
{
closed = 1;
nodes = (
"-498 -209 LINE",
"-747 -209 LINE",
"-747 -338 LINE",
"-498 -338 LINE",
"-498 -467 LINE",
"-598 -467 LINE",
"-598 -594 LINE",
"-199 -594 LINE",
"-199 -82 LINE",
"-498 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_17A2;
},
{
glyphname = uni17BB.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -1126 LINE",
"-200 -1126 LINE",
"-200 -676 LINE",
"-499 -676 LINE"
);
}
);
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-648 -1126 QCURVE SMOOTH",
"-450 -1126 LINE SMOOTH",
"-200 -1126 OFFCURVE",
"-200 -977 QCURVE SMOOTH",
"-200 -676 LINE",
"-499 -676 LINE",
"-499 -977 LINE",
"-648 -977 LINE",
"-648 -676 LINE",
"-849 -676 LINE",
"-849 -676 LINE",
"-849 -977 LINE SMOOTH",
"-849 -1126 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-698 -971 LINE",
"-698 -676 LINE",
"-899 -676 LINE",
"-899 -1126 LINE",
"-698 -1126 LINE",
"-600 -1028 LINE",
"-500 -1126 LINE",
"-199 -1126 LINE",
"-199 -676 LINE",
"-500 -676 LINE",
"-500 -971 LINE",
"-600 -872 LINE"
);
}
);
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17B7.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-403 2275 QCURVE SMOOTH",
"-538 2349 OFFCURVE",
"-688 2349 QCURVE SMOOTH",
"-868 2349 OFFCURVE",
"-958 2275 QCURVE SMOOTH",
"-1048 2200 OFFCURVE",
"-1048 2050 QCURVE",
"-1048 2050 LINE",
"-1048 1950 LINE",
"-149 1950 LINE",
"-149 2050 LINE",
"-268 2200 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-481 2126 QCURVE SMOOTH",
"-393 2099 OFFCURVE",
"-339 2050 QCURVE",
"-808 2050 LINE",
"-808 2099 OFFCURVE",
"-778 2126 QCURVE SMOOTH",
"-749 2150 OFFCURVE",
"-688 2150 QCURVE",
"-688 2150 LINE",
"-569 2150 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-327 2226 LINE",
"-411 2288 OFFCURVE",
"-501 2318 QCURVE SMOOTH",
"-591 2349 OFFCURVE",
"-688 2349 QCURVE SMOOTH",
"-868 2349 OFFCURVE",
"-958 2275 QCURVE SMOOTH",
"-1048 2200 OFFCURVE",
"-1048 2050 QCURVE",
"-1048 2050 LINE",
"-1048 1950 LINE",
"-149 1950 LINE",
"-149 2400 LINE",
"-327 2400 LINE"
);
},
{
closed = 1;
nodes = (
"-481 2126 QCURVE SMOOTH",
"-393 2099 OFFCURVE",
"-339 2050 QCURVE",
"-808 2050 LINE",
"-808 2099 OFFCURVE",
"-778 2126 QCURVE SMOOTH",
"-749 2150 OFFCURVE",
"-688 2150 QCURVE",
"-688 2150 LINE",
"-569 2150 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-176 2075 QCURVE",
"-98 2116 OFFCURVE",
"-98 2224 QCURVE SMOOTH",
"-98 2312 OFFCURVE",
"-151 2355 QCURVE SMOOTH",
"-202 2398 OFFCURVE",
"-305 2398 QCURVE SMOOTH",
"-450 2398 OFFCURVE",
"-493 2314 QCURVE",
"-587 2349 OFFCURVE",
"-692 2349 QCURVE SMOOTH",
"-870 2349 OFFCURVE",
"-958 2275 QCURVE SMOOTH",
"-1048 2200 OFFCURVE",
"-1048 2050 QCURVE",
"-1048 2050 LINE",
"-1048 1950 LINE",
"-157 1950 LINE",
"-157 2050 LINE",
"-165 2062 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-253 2157 QCURVE",
"-319 2218 OFFCURVE",
"-386 2261 QCURVE",
"-368 2300 OFFCURVE",
"-305 2300 QCURVE SMOOTH",
"-262 2300 OFFCURVE",
"-239 2279 QCURVE SMOOTH",
"-217 2261 OFFCURVE",
"-217 2224 QCURVE",
"-217 2224 LINE",
"-217 2175 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-487 2126 QCURVE SMOOTH",
"-399 2099 OFFCURVE",
"-348 2050 QCURVE",
"-810 2050 LINE",
"-810 2099 OFFCURVE",
"-780 2126 QCURVE SMOOTH",
"-751 2150 OFFCURVE",
"-692 2150 QCURVE",
"-692 2150 LINE",
"-573 2150 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-268 2177 LINE",
"-325 2228 OFFCURVE",
"-389 2265 QCURVE",
"-389 2400 LINE",
"-507 2400 LINE",
"-507 2320 LINE",
"-595 2349 OFFCURVE",
"-688 2349 QCURVE SMOOTH",
"-868 2349 OFFCURVE",
"-958 2275 QCURVE SMOOTH",
"-1048 2200 OFFCURVE",
"-1048 2050 QCURVE",
"-1048 2050 LINE",
"-1048 1950 LINE",
"-149 1950 LINE",
"-149 2400 LINE",
"-268 2400 LINE"
);
},
{
closed = 1;
nodes = (
"-481 2126 QCURVE SMOOTH",
"-393 2099 OFFCURVE",
"-339 2050 QCURVE",
"-808 2050 LINE",
"-808 2099 OFFCURVE",
"-778 2126 QCURVE SMOOTH",
"-749 2150 OFFCURVE",
"-688 2150 QCURVE",
"-688 2150 LINE",
"-569 2150 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-575 2273 OFFCURVE",
"-549 2226 OFFCURVE",
"-549 2200 QCURVE SMOOTH",
"-549 2175 OFFCURVE",
"-573 2126 OFFCURVE",
"-622 2099 OFFCURVE",
"-649 2099 QCURVE SMOOTH",
"-674 2099 OFFCURVE",
"-721 2126 OFFCURVE",
"-747 2175 OFFCURVE",
"-747 2200 QCURVE SMOOTH",
"-747 2226 OFFCURVE",
"-721 2273 OFFCURVE",
"-674 2300 OFFCURVE",
"-649 2300 QCURVE",
"-649 2300 LINE",
"-622 2300 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-866 2423 OFFCURVE",
"-948 2277 OFFCURVE",
"-948 2200 QCURVE SMOOTH",
"-948 2122 OFFCURVE",
"-868 1978 OFFCURVE",
"-725 1901 OFFCURVE",
"-649 1901 QCURVE SMOOTH",
"-569 1901 OFFCURVE",
"-428 1978 OFFCURVE",
"-348 2122 OFFCURVE",
"-348 2200 QCURVE SMOOTH",
"-348 2277 OFFCURVE",
"-430 2423 OFFCURVE",
"-571 2501 OFFCURVE",
"-649 2501 QCURVE",
"-649 2501 LINE",
"-725 2501 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-348 2099 LINE",
"-348 2300 LINE",
"-549 2300 LINE",
"-549 2501 LINE",
"-747 2501 LINE",
"-747 2300 LINE",
"-948 2300 LINE",
"-948 2099 LINE",
"-747 2099 LINE",
"-747 1901 LINE",
"-549 1901 LINE",
"-549 2099 LINE"
);
}
);
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 2099 QCURVE SMOOTH",
"0 2349 LINE",
"-281 2349 LINE",
"-281 2150 LINE",
"-616 2150 LINE",
"-616 2200 LINE",
"-506 2200 LINE",
"-506 2300 LINE",
"-899 2300 LINE",
"-899 2300 LINE",
"-899 1950 LINE",
"-223 1950 LINE SMOOTH",
"0 1950 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni1789.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1200 1249 LINE",
"1449 1249 LINE",
"1449 0 LINE",
"1800 0 LINE",
"1800 1499 LINE",
"1200 1499 LINE"
);
}
);
width = 1949;
}
);
note = uni1789.a;
},
{
glyphname = uni17D2_179A.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 -954 LINE SMOOTH",
"150 -1126 OFFCURVE",
"399 -1126 QCURVE SMOOTH",
"899 -1126 LINE SMOOTH",
"1151 -1126 OFFCURVE",
"1151 -954 QCURVE SMOOTH",
"1151 -676 LINE",
"801 -676 LINE",
"801 -954 LINE",
"500 -954 LINE",
"500 -954 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_179A.b;
},
{
glyphname = uni17BF.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-31 1925 QCURVE SMOOTH",
"57 1901 OFFCURVE",
"111 1849 QCURVE",
"-358 1849 LINE",
"-358 1901 OFFCURVE",
"-328 1925 QCURVE SMOOTH",
"-299 1950 OFFCURVE",
"-238 1950 QCURVE",
"-238 1950 LINE",
"-119 1950 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"61 2066 QCURVE",
"61 2200 LINE",
"-57 2200 LINE",
"-57 2122 LINE",
"-145 2150 OFFCURVE",
"-238 2150 QCURVE SMOOTH",
"-418 2150 OFFCURVE",
"-508 2075 QCURVE SMOOTH",
"-598 2001 OFFCURVE",
"-598 1849 QCURVE SMOOTH",
"-598 1749 LINE",
"2 1749 LINE SMOOTH",
"152 1749 OFFCURVE",
"152 1651 QCURVE SMOOTH",
"152 -926 LINE",
"-147 -926 LINE",
"-147 -676 LINE",
"-498 -676 LINE",
"-498 -926 LINE SMOOTH",
"-498 -1126 OFFCURVE",
"-248 -1126 QCURVE SMOOTH",
"252 -1126 LINE SMOOTH",
"502 -1126 OFFCURVE",
"502 -926 QCURVE SMOOTH",
"502 1651 LINE SMOOTH",
"502 1823 OFFCURVE",
"301 1896 QCURVE",
"301 1896 LINE",
"301 2200 LINE",
"182 2200 LINE",
"182 1976 LINE",
"125 2030 OFFCURVE"
);
}
);
width = 649;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -926 LINE SMOOTH",
"-499 -1126 OFFCURVE",
"-249 -1126 QCURVE SMOOTH",
"251 -1126 LINE SMOOTH",
"500 -1126 OFFCURVE",
"500 -926 QCURVE SMOOTH",
"500 1800 LINE SMOOTH",
"500 2001 OFFCURVE",
"251 2001 QCURVE SMOOTH",
"-149 2001 LINE",
"-149 2349 LINE",
"-499 2349 LINE",
"-499 1700 LINE",
"-149 1700 LINE",
"-149 1800 LINE",
"150 1800 LINE",
"150 1800 LINE",
"150 -926 LINE",
"-149 -926 LINE",
"-149 -676 LINE",
"-499 -676 LINE"
);
}
);
width = 649;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B7_17CD;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-823 1825 QCURVE SMOOTH",
"-798 1849 OFFCURVE",
"-747 1849 QCURVE SMOOTH",
"-649 1849 OFFCURVE",
"-575 1825 QCURVE SMOOTH",
"-518 1806 OFFCURVE",
"-477 1769 QCURVE",
"-477 1769 LINE",
"-477 1749 LINE",
"-847 1749 LINE",
"-847 1800 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-233 1849 LINE SMOOTH",
"1 1849 OFFCURVE",
"1 1950 QCURVE SMOOTH",
"1 2099 LINE",
"-255 2099 LINE",
"-255 1950 OFFCURVE",
"-333 1950 QCURVE SMOOTH",
"-475 1950 LINE",
"-493 1962 OFFCURVE",
"-509 1974 QCURVE SMOOTH",
"-622 2050 OFFCURVE",
"-747 2050 QCURVE SMOOTH",
"-898 2050 OFFCURVE",
"-972 1974 QCURVE SMOOTH",
"-1048 1901 OFFCURVE",
"-1048 1749 QCURVE SMOOTH",
"-1048 1651 LINE",
"-1048 1651 LINE",
"-231 1651 LINE",
"-231 1759 LINE",
"-303 1759 LINE",
"-303 1849 LINE"
);
}
);
width = 0;
}
);
note = uni17B7_17CD;
},
{
glyphname = uni17B7.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-198 1974 QCURVE SMOOTH",
"-333 2050 OFFCURVE",
"-483 2050 QCURVE SMOOTH",
"-663 2050 OFFCURVE",
"-753 1974 QCURVE SMOOTH",
"-843 1901 OFFCURVE",
"-843 1749 QCURVE",
"-843 1749 LINE",
"-843 1651 LINE",
"56 1651 LINE",
"56 1749 LINE",
"-63 1901 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-276 1825 QCURVE SMOOTH",
"-188 1800 OFFCURVE",
"-134 1749 QCURVE",
"-603 1749 LINE",
"-603 1800 OFFCURVE",
"-573 1825 QCURVE SMOOTH",
"-544 1849 OFFCURVE",
"-483 1849 QCURVE",
"-483 1849 LINE",
"-364 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-122 1925 LINE",
"-206 1989 OFFCURVE",
"-296 2019 QCURVE SMOOTH",
"-386 2050 OFFCURVE",
"-483 2050 QCURVE SMOOTH",
"-663 2050 OFFCURVE",
"-753 1974 QCURVE SMOOTH",
"-843 1901 OFFCURVE",
"-843 1749 QCURVE",
"-843 1749 LINE",
"-843 1651 LINE",
"56 1651 LINE",
"56 2099 LINE",
"-122 2099 LINE"
);
},
{
closed = 1;
nodes = (
"-276 1825 QCURVE SMOOTH",
"-188 1800 OFFCURVE",
"-134 1749 QCURVE",
"-603 1749 LINE",
"-603 1800 OFFCURVE",
"-573 1825 QCURVE SMOOTH",
"-544 1849 OFFCURVE",
"-483 1849 QCURVE",
"-483 1849 LINE",
"-364 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"29 1774 QCURVE",
"107 1815 OFFCURVE",
"107 1923 QCURVE SMOOTH",
"107 2011 OFFCURVE",
"54 2054 QCURVE SMOOTH",
"3 2099 OFFCURVE",
"-100 2099 QCURVE SMOOTH",
"-245 2099 OFFCURVE",
"-288 2013 QCURVE",
"-382 2050 OFFCURVE",
"-487 2050 QCURVE SMOOTH",
"-665 2050 OFFCURVE",
"-753 1974 QCURVE SMOOTH",
"-843 1901 OFFCURVE",
"-843 1749 QCURVE",
"-843 1749 LINE",
"-843 1651 LINE",
"48 1651 LINE",
"48 1749 LINE",
"40 1761 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-48 1858 QCURVE",
"-114 1919 OFFCURVE",
"-181 1962 QCURVE",
"-163 1999 OFFCURVE",
"-100 1999 QCURVE SMOOTH",
"-57 1999 OFFCURVE",
"-34 1980 QCURVE SMOOTH",
"-12 1962 OFFCURVE",
"-12 1923 QCURVE",
"-12 1923 LINE",
"-12 1876 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-282 1825 QCURVE SMOOTH",
"-194 1800 OFFCURVE",
"-143 1749 QCURVE",
"-605 1749 LINE",
"-605 1800 OFFCURVE",
"-575 1825 QCURVE SMOOTH",
"-546 1849 OFFCURVE",
"-487 1849 QCURVE",
"-487 1849 LINE",
"-368 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-63 1878 LINE",
"-120 1929 OFFCURVE",
"-184 1966 QCURVE",
"-184 2099 LINE",
"-302 2099 LINE",
"-302 2021 LINE",
"-390 2050 OFFCURVE",
"-483 2050 QCURVE SMOOTH",
"-663 2050 OFFCURVE",
"-753 1974 QCURVE SMOOTH",
"-843 1901 OFFCURVE",
"-843 1749 QCURVE",
"-843 1749 LINE",
"-843 1651 LINE",
"56 1651 LINE",
"56 2099 LINE",
"-63 2099 LINE"
);
},
{
closed = 1;
nodes = (
"-276 1825 QCURVE SMOOTH",
"-188 1800 OFFCURVE",
"-134 1749 QCURVE",
"-603 1749 LINE",
"-603 1800 OFFCURVE",
"-573 1825 QCURVE SMOOTH",
"-544 1849 OFFCURVE",
"-483 1849 QCURVE",
"-483 1849 LINE",
"-364 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-370 2023 OFFCURVE",
"-344 1976 OFFCURVE",
"-344 1950 QCURVE SMOOTH",
"-344 1923 OFFCURVE",
"-368 1876 OFFCURVE",
"-417 1849 OFFCURVE",
"-444 1849 QCURVE SMOOTH",
"-469 1849 OFFCURVE",
"-516 1876 OFFCURVE",
"-542 1923 OFFCURVE",
"-542 1950 QCURVE SMOOTH",
"-542 1976 OFFCURVE",
"-516 2023 OFFCURVE",
"-469 2050 OFFCURVE",
"-444 2050 QCURVE",
"-444 2050 LINE",
"-417 2050 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-661 2173 OFFCURVE",
"-743 2028 OFFCURVE",
"-743 1950 QCURVE SMOOTH",
"-743 1872 OFFCURVE",
"-663 1729 OFFCURVE",
"-520 1651 OFFCURVE",
"-444 1651 QCURVE SMOOTH",
"-364 1651 OFFCURVE",
"-223 1729 OFFCURVE",
"-143 1872 OFFCURVE",
"-143 1950 QCURVE SMOOTH",
"-143 2028 OFFCURVE",
"-225 2173 OFFCURVE",
"-366 2251 OFFCURVE",
"-444 2251 QCURVE",
"-444 2251 LINE",
"-520 2251 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-517 2251 LINE",
"-718 2251 LINE",
"-718 1651 LINE",
"-517 1651 LINE"
);
},
{
closed = 1;
nodes = (
"-167 2251 LINE",
"-368 2251 LINE",
"-368 1651 LINE",
"-167 1651 LINE"
);
}
);
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"5 1950 QCURVE SMOOTH",
"5 2099 LINE",
"-302 2099 LINE",
"-302 1950 OFFCURVE",
"-458 1950 QCURVE SMOOTH",
"-894 1950 LINE",
"-894 1651 LINE",
"-437 1651 LINE",
"-437 1759 LINE",
"-585 1759 LINE",
"-585 1759 LINE",
"-585 1849 LINE",
"-276 1849 LINE SMOOTH",
"5 1849 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17B7_17CD.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-618 1825 QCURVE SMOOTH",
"-593 1849 OFFCURVE",
"-542 1849 QCURVE SMOOTH",
"-444 1849 OFFCURVE",
"-370 1825 QCURVE SMOOTH",
"-313 1806 OFFCURVE",
"-272 1769 QCURVE",
"-272 1769 LINE",
"-272 1749 LINE",
"-642 1749 LINE",
"-642 1800 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-28 1849 LINE SMOOTH",
"206 1849 OFFCURVE",
"206 1950 QCURVE SMOOTH",
"206 2099 LINE",
"-50 2099 LINE",
"-50 1950 OFFCURVE",
"-128 1950 QCURVE SMOOTH",
"-270 1950 LINE",
"-288 1962 OFFCURVE",
"-304 1974 QCURVE SMOOTH",
"-417 2050 OFFCURVE",
"-542 2050 QCURVE SMOOTH",
"-693 2050 OFFCURVE",
"-767 1974 QCURVE SMOOTH",
"-843 1901 OFFCURVE",
"-843 1749 QCURVE SMOOTH",
"-843 1651 LINE",
"-843 1651 LINE",
"-26 1651 LINE",
"-26 1759 LINE",
"-98 1759 LINE",
"-98 1849 LINE"
);
}
);
width = 0;
}
);
note = uni17B7_17CD.r;
},
{
glyphname = uni17D2_178A.n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1106 -82 QCURVE SMOOTH",
"-1505 -82 LINE SMOOTH",
"-1755 -82 OFFCURVE",
"-1755 -209 QCURVE SMOOTH",
"-1755 -594 LINE",
"-1356 -594 LINE",
"-1356 -422 LINE",
"-1456 -422 LINE",
"-1456 -209 LINE",
"-1155 -209 LINE",
"-1155 -594 LINE",
"-1155 -594 LINE",
"-856 -594 LINE",
"-856 -209 LINE SMOOTH",
"-856 -82 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_178A.n;
},
{
glyphname = uni17D2_178B.n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-856 -82 LINE",
"-1155 -82 LINE",
"-1155 -158 LINE",
"-1755 -158 LINE",
"-1755 -594 LINE",
"-1456 -594 LINE",
"-1304 -489 LINE",
"-1155 -594 LINE",
"-856 -594 LINE",
"-856 -289 LINE",
"-756 -289 LINE",
"-756 -158 LINE",
"-856 -158 LINE"
);
},
{
closed = 1;
nodes = (
"-1155 -420 LINE",
"-1304 -334 LINE",
"-1456 -420 LINE",
"-1456 -289 LINE",
"-1155 -289 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178B.n;
},
{
glyphname = uni17D2_178C.n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1755 -82 LINE",
"-1755 -276 LINE",
"-1456 -276 LINE",
"-1456 -201 LINE",
"-1304 -256 LINE",
"-1155 -201 LINE",
"-1155 -250 LINE SMOOTH",
"-1155 -291 OFFCURVE",
"-1755 -348 QCURVE",
"-1755 -594 LINE",
"-1456 -594 LINE",
"-1155 -526 LINE",
"-1155 -594 LINE",
"-856 -594 LINE",
"-856 -381 LINE",
"-1155 -381 LINE",
"-1155 -451 LINE",
"-1456 -508 LINE",
"-1456 -385 LINE",
"-856 -326 OFFCURVE",
"-856 -266 QCURVE",
"-856 -266 LINE",
"-856 -82 LINE",
"-1141 -82 LINE",
"-1304 -158 LINE",
"-1470 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178C.n;
},
{
glyphname = uni17D2_17A0.n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1712 -557 QCURVE SMOOTH",
"-1671 -594 OFFCURVE",
"-1589 -594 QCURVE SMOOTH",
"-1214 -594 LINE",
"-1214 -236 LINE",
"-1106 -236 LINE",
"-1106 -594 LINE",
"-856 -594 LINE",
"-856 -209 LINE SMOOTH",
"-856 -160 OFFCURVE",
"-897 -121 QCURVE SMOOTH",
"-938 -82 OFFCURVE",
"-1020 -82 QCURVE SMOOTH",
"-1395 -82 LINE",
"-1395 -440 LINE",
"-1505 -440 LINE",
"-1505 -440 LINE",
"-1505 -82 LINE",
"-1755 -82 LINE",
"-1755 -465 LINE SMOOTH",
"-1755 -518 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_17A0.n;
},
{
glyphname = uni17D2_178A.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-245 -82 QCURVE SMOOTH",
"-644 -82 LINE SMOOTH",
"-894 -82 OFFCURVE",
"-894 -209 QCURVE SMOOTH",
"-894 -594 LINE",
"-495 -594 LINE",
"-495 -422 LINE",
"-595 -422 LINE",
"-595 -209 LINE",
"-294 -209 LINE",
"-294 -594 LINE",
"-294 -594 LINE",
"5 -594 LINE",
"5 -209 LINE SMOOTH",
"5 -82 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_178A.r;
},
{
glyphname = uni17D2_1797.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"6 -209 LINE SMOOTH",
"6 -82 OFFCURVE",
"-243 -82 QCURVE SMOOTH",
"-643 -82 LINE SMOOTH",
"-893 -82 OFFCURVE",
"-893 -209 QCURVE SMOOTH",
"-893 -422 LINE",
"-993 -422 LINE",
"-993 -594 LINE",
"-594 -594 LINE",
"-594 -594 LINE",
"-594 -209 LINE",
"-293 -209 LINE",
"-293 -594 LINE",
"6 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1797.r;
},
{
glyphname = uni17D2_1798.r;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-61 -594 QCURVE SMOOTH",
"107 -594 OFFCURVE",
"107 -428 QCURVE SMOOTH",
"107 -383 OFFCURVE",
"54 -303 OFFCURVE",
"6 -285 QCURVE",
"-28 -266 OFFCURVE",
"-65 -264 QCURVE",
"58 -211 LINE",
"58 -82 LINE",
"-243 -82 LINE",
"-243 -262 LINE",
"-243 -262 LINE",
"-993 -262 LINE",
"-993 -471 LINE",
"-235 -469 LINE",
"-229 -594 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17D2_1798.r;
},
{
glyphname = uni17BB.n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1103 -700 LINE",
"-804 -700 LINE",
"-804 -100 LINE",
"-1103 -100 LINE"
);
}
);
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1253 -700 QCURVE SMOOTH",
"-1003 -700 LINE SMOOTH",
"-805 -700 OFFCURVE",
"-805 -551 QCURVE SMOOTH",
"-805 -100 LINE",
"-1104 -100 LINE",
"-1104 -551 LINE",
"-1253 -551 LINE",
"-1253 -100 LINE",
"-1454 -100 LINE",
"-1454 -100 LINE",
"-1454 -551 LINE SMOOTH",
"-1454 -700 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1304 -510 LINE",
"-1304 -100 LINE",
"-1505 -100 LINE",
"-1505 -700 LINE",
"-1304 -700 LINE",
"-1206 -569 LINE",
"-1106 -700 LINE",
"-805 -700 LINE",
"-805 -100 LINE",
"-1106 -100 LINE",
"-1106 -510 LINE",
"-1206 -381 LINE"
);
}
);
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1093 -1126 LINE",
"-794 -1126 LINE",
"-794 -676 LINE",
"-1093 -676 LINE"
);
}
);
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1242 -1126 QCURVE SMOOTH",
"-1044 -1126 LINE SMOOTH",
"-794 -1126 OFFCURVE",
"-794 -977 QCURVE SMOOTH",
"-794 -676 LINE",
"-1093 -676 LINE",
"-1093 -977 LINE",
"-1242 -977 LINE",
"-1242 -676 LINE",
"-1443 -676 LINE",
"-1443 -676 LINE",
"-1443 -977 LINE SMOOTH",
"-1443 -1126 OFFCURVE"
);
}
);
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1291 -971 LINE",
"-1291 -676 LINE",
"-1492 -676 LINE",
"-1492 -1126 LINE",
"-1291 -1126 LINE",
"-1193 -1028 LINE",
"-1093 -1126 LINE",
"-792 -1126 LINE",
"-792 -676 LINE",
"-1093 -676 LINE",
"-1093 -971 LINE",
"-1193 -872 LINE"
);
}
);
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17D2_1798.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-266 -1126 QCURVE SMOOTH",
"-98 -1126 OFFCURVE",
"-98 -981 QCURVE SMOOTH",
"-98 -940 OFFCURVE",
"-151 -870 OFFCURVE",
"-199 -854 QCURVE",
"-233 -838 OFFCURVE",
"-270 -836 QCURVE",
"-147 -788 LINE",
"-147 -676 LINE",
"-448 -676 LINE",
"-448 -834 LINE",
"-1198 -834 LINE",
"-1198 -1018 LINE",
"-440 -1016 LINE",
"-434 -1126 OFFCURVE"
);
}
);
width = 1318;
}
);
note = uni17D2_1798.b;
},
{
glyphname = uni17D2_17A0.b;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1056 -1094 QCURVE SMOOTH",
"-1015 -1126 OFFCURVE",
"-933 -1126 QCURVE SMOOTH",
"-558 -1126 LINE",
"-558 -811 LINE",
"-450 -811 LINE",
"-450 -1126 LINE",
"-200 -1126 LINE",
"-200 -788 LINE SMOOTH",
"-200 -743 OFFCURVE",
"-241 -711 QCURVE SMOOTH",
"-282 -676 OFFCURVE",
"-364 -676 QCURVE SMOOTH",
"-739 -676 LINE",
"-739 -991 LINE",
"-849 -991 LINE",
"-849 -676 LINE",
"-1099 -676 LINE",
"-1099 -1014 LINE SMOOTH",
"-1099 -1059 OFFCURVE"
);
}
);
width = 1318;
}
);
note = uni17D2_17A0.b;
},
{
glyphname = uni1794.a;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 250 LINE SMOOTH",
"150 0 OFFCURVE",
"399 0 QCURVE SMOOTH",
"801 0 LINE",
"801 -80 LINE",
"1151 -80 LINE",
"1151 1100 LINE",
"801 1100 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE"
);
}
);
width = 1300;
}
);
note = uni1794.a;
}
);
instances = (
{
customParameters = (
{
name = postscriptFullName;
value = Koulen;
},
{
name = postscriptFontName;
value = Koulen;
}
);
interpolationWeight = 400;
instanceInterpolations = {
"CA83E40A-73A6-405E-BD72-6C931CC3ADE9" = 1;
};
name = Regular;
weightClass = Normal;
}
);
kerning = {
"CA83E40A-73A6-405E-BD72-6C931CC3ADE9" = {
A = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -123;
U = -41;
V = -164;
W = -143;
Y = -143;
asterisk = -143;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
question = -123;
quotedbl = -164;
quotesingle = -164;
u = -41;
v = -123;
w = -61;
y = -102;
};
B = {
A = -41;
T = -41;
V = -82;
W = -61;
X = -41;
Y = -82;
Z = -41;
asterisk = -41;
question = -41;
w = -20;
y = -41;
};
D = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
E = {
V = -41;
W = -41;
Y = -41;
};
F = {
A = -143;
a = -82;
c = -82;
d = -82;
e = -82;
g = -82;
o = -82;
q = -82;
};
G = {
T = -41;
V = -41;
W = -41;
Y = -41;
question = -41;
};
K = {
C = -41;
G = -41;
O = -41;
Q = -41;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
u = -41;
w = -61;
y = -61;
};
L = {
T = -143;
V = -102;
W = -102;
Y = -123;
asterisk = -164;
question = -143;
quotedbl = -123;
quotesingle = -123;
};
O = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
P = {
A = -102;
comma = -246;
period = -246;
};
Q = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
R = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -41;
U = -20;
V = -61;
W = -61;
Y = -61;
asterisk = -41;
question = -41;
w = -41;
y = -41;
};
S = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -41;
question = -41;
w = -20;
y = -41;
};
T = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -61;
c = -61;
comma = -184;
d = -61;
e = -61;
g = -61;
o = -61;
period = -184;
q = -61;
};
U = {
A = -41;
};
V = {
A = -164;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -123;
c = -123;
comma = -225;
d = -123;
e = -123;
g = -123;
o = -123;
period = -225;
q = -123;
s = -82;
};
W = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -102;
c = -123;
comma = -184;
d = -123;
e = -123;
g = -123;
o = -123;
period = -184;
q = -123;
};
X = {
C = -41;
G = -41;
O = -41;
Q = -41;
S = -20;
w = -61;
y = -102;
};
Y = {
A = -143;
C = -61;
G = -61;
O = -61;
Q = -61;
S = -41;
a = -123;
c = -143;
comma = -164;
d = -143;
e = -143;
g = -143;
o = -143;
period = -164;
q = -143;
s = -123;
};
a = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
asterisk = {
A = -102;
comma = -246;
period = -246;
};
b = {
y = -41;
};
f = {
asterisk = 164;
braceright = 184;
bracketright = 184;
parenright = 184;
quotedbl = 164;
quotesingle = 164;
};
h = {
quotedbl = -82;
y = -41;
};
k = {
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
};
n = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
o = {
y = -41;
};
p = {
y = -41;
};
quotedbl = {
A = -164;
g = -82;
};
quotesingle = {
A = -164;
g = -82;
};
r = {
a = -41;
asterisk = 61;
};
v = {
comma = -102;
period = -143;
};
w = {
comma = -143;
period = -143;
};
y = {
comma = -184;
period = -184;
};
};
};
manufacturer = "Danh Hong";
manufacturerURL = "http://code.google.com/p/noto/";
unitsPerEm = 2048;
versionMajor = 8;
versionMinor = 0;
}
