{
.appVersion = "1352";
copyright = "Copyright 2012 Google Inc. All Rights Reserved.";
customParameters = (
{
name = vendorID;
value = MONO;
},
{
name = panose;
value = (
2,
2,
6,
0,
6,
5,
0,
2,
2,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
43,
44,
45,
46,
60,
62,
64,
67,
69
);
},
{
name = glyphOrder;
value = (
.notdef,
CR,
space,
uni0000,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
guillemotleft,
guillemotright,
uni1780,
uni1781,
uni1782,
uni1783,
uni1784,
uni1785,
uni1786,
uni1787,
uni1788,
uni1789,
uni178A,
uni178B,
uni178C,
uni178D,
uni178E,
uni178F,
uni1790,
uni1791,
uni1792,
uni1793,
uni1794,
uni1795,
uni1796,
uni1797,
uni1798,
uni1799,
uni179A,
uni179B,
uni179C,
uni179D,
uni179E,
uni179F,
uni17A0,
uni17A1,
uni17A2,
uni17A3,
uni17A4,
uni17A5,
uni17A6,
uni17A7,
uni17A8,
uni17A9,
uni17AA,
uni17AB,
uni17AC,
uni17AD,
uni17AE,
uni17AF,
uni17B0,
uni17B1,
uni17B2,
uni17B3,
uni17B4,
uni17B5,
uni17B6,
uni17B7,
uni17B8,
uni17B9,
uni17BA,
uni17BB,
uni17BC,
uni17BD,
uni17BE,
uni17BF,
uni17C0,
uni17C1,
uni17C2,
uni17C3,
uni17C4,
uni17C5,
uni17C6,
uni17C7,
uni17C8,
uni17C9,
uni17CA,
uni17CB,
uni17CC,
uni17CD,
uni17CE,
uni17CF,
uni17D0,
uni17D1,
uni17D2,
uni17D3,
uni17D4,
uni17D5,
uni17D6,
uni17D7,
uni17D8,
uni17D9,
uni17DA,
uni17DB,
uni17DC,
uni17DD,
uni17E0,
uni17E1,
uni17E2,
uni17E3,
uni17E4,
uni17E5,
uni17E6,
uni17E7,
uni17E8,
uni17E9,
uni17D2_1780,
uni17D2_1781,
uni17D2_1782,
uni17D2_1783,
uni17D2_1784,
uni17D2_1785,
uni17D2_1786,
uni17D2_1787,
uni17D2_1788,
uni17D2_1789,
uni17D2_1789.a,
uni17D2_178A,
uni17D2_178B,
uni17D2_178C,
uni17D2_178D,
uni17D2_178E,
uni17D2_178F,
uni17D2_1790,
uni17D2_1791,
uni17D2_1792,
uni17D2_1793,
uni17D2_1794,
uni17D2_1795,
uni17D2_1796,
uni17D2_1797,
uni17D2_1798,
uni17D2_1799,
uni17D2_179A,
uni17D2_179B,
uni17D2_179C,
uni17D2_179F,
uni17D2_17A0,
uni17D2_17A2,
uni17BB.b,
uni17BC.b,
uni17BD.b,
uni17B7.a,
uni17B8.a,
uni17B9.a,
uni17BA.a,
uni17C6.a,
uni17CE.a,
uni17D0.a,
uni1789.a,
uni17D2_179A.b,
uni17BF.b,
uni17C0.b,
uni17B7_17CD,
uni17B7.r,
uni17B8.r,
uni17B9.r,
uni17BA.r,
uni17C6.r,
uni17C9.r,
uni17CD.r,
uni17B7_17CD.r,
uni17D2_178A.n,
uni17D2_178B.n,
uni17D2_178C.n,
uni17D2_17A0.n,
uni17D2_178A.r,
uni17D2_1797.r,
uni17D2_1798.r,
uni17BB.n,
uni17BC.n,
uni17BD.n,
uni17BB.n2,
uni17BC.n2,
uni17BD.n2,
uni17D2_1798.b,
uni17D2_17A0.b,
uni1794.a
);
}
);
date = "2020-02-19 02:17:00 +0000";
designer = "Danh Hong";
designerURL = "http://www.nextspell.com";
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
familyName = Koulen;
featurePrefixes = (
{
code = "lookup lookup_0 {\012sub uni17B7 by uni17B7.r;\012sub uni17B8 by uni17B8.r;\012sub uni17B9 by uni17B9.r;\012sub uni17BA by uni17BA.r;\012sub uni17C6 by uni17C6.r;\012sub uni17C9 by uni17C9.r;\012sub uni17CD by uni17CD.r;\012sub uni17B7_17CD by uni17B7_17CD.r;\012} lookup_0;\012";
name = lookup_0;
},
{
code = "lookup lookup_1 {\012sub uni17BB by uni17BB.b;\012sub uni17BC by uni17BC.b;\012sub uni17BD by uni17BD.b;\012} lookup_1;\012";
name = lookup_1;
},
{
code = "lookup lookup_10 {\012sub uni17D2_1798 by uni17D2_1798.b;\012sub uni17D2_17A0 by uni17D2_17A0.b;\012} lookup_10;";
name = lookup_10;
},
{
code = "lookup lookup_11 {\012sub uni1794 by uni1794.a;\012} lookup_11;";
name = lookup_11;
},
{
code = "lookup lookup_12 {\012sub uni17D2_179A by uni17D2_179A.b;\012} lookup_12;";
name = lookup_12;
},
{
code = "lookup lookup_13 {\012sub uni17B7 by uni17B7.a;\012sub uni17B8 by uni17B8.a;\012sub uni17B9 by uni17B9.a;\012sub uni17BA by uni17BA.a;\012sub uni17BE by uni17B8.a;\012sub uni17C6 by uni17C6.a;\012} lookup_13;\012";
name = lookup_13;
},
{
code = "lookup lookup_14 {\012sub uni1789 by uni1789.a;\012} lookup_14;";
name = lookup_14;
},
{
code = "lookup lookup_15 {\012sub uni17BF by uni17BF.b;\012sub uni17C0 by uni17C0.b;\012} lookup_15;";
name = lookup_15;
},
{
code = "lookup lookup_2 {\012sub uni17CA by uni17BB;\012} lookup_2;";
name = lookup_2;
},
{
code = "lookup lookup_3 {\012sub uni17C9 by uni17BB.b;\012sub uni17CA by uni17BB.b;\012} lookup_3;";
name = lookup_3;
},
{
code = "lookup lookup_4 {\012sub uni17C9 by uni17BB;\012sub uni17C9.r by uni17BB;\012} lookup_4;";
name = lookup_4;
},
{
code = "lookup lookup_5 {\012sub uni17D2_178A by uni17D2_178A.n;\012sub uni17D2_178B by uni17D2_178B.n;\012sub uni17D2_178C by uni17D2_178C.n;\012sub uni17D2_178F by uni17D2_178A.n;\012sub uni17D2_17A0 by uni17D2_17A0.n;\012} lookup_5;";
name = lookup_5;
},
{
code = "lookup lookup_6 {\012sub uni17BB by uni17BB.n;\012sub uni17BC by uni17BC.n;\012sub uni17BD by uni17BD.n;\012} lookup_6;";
name = lookup_6;
},
{
code = "lookup lookup_7 {\012sub uni17BB.b by uni17BB.n2;\012sub uni17BC.b by uni17BC.n2;\012sub uni17BD.b by uni17BD.n2;\012} lookup_7;";
name = lookup_7;
},
{
code = "lookup lookup_8 {\012sub uni17D2_178A by uni17D2_178A.r;\012sub uni17D2_178F by uni17D2_178A.r;\012sub uni17D2_1797 by uni17D2_1797.r;\012sub uni17D2_1798 by uni17D2_1798.r;\012} lookup_8;";
name = lookup_8;
},
{
code = "lookup lookup_9 {\012sub uni17D2_1789 by uni17D2_1789.a;\012} lookup_9;";
name = lookup_9;
},
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem khmr dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature abvs;\012feature blwf;\012feature clig;\012feature pref;\012feature pstf;\012";
name = aalt;
},
{
code = "script khmr;\012sub uni17B7 uni17CD by uni17B7_17CD;\012sub uni179A [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni179C [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni17D2_178A.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni17D2_1797.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;\012sub uni17D2_1798.r [uni17B7 uni17B8 uni17B9 uni17BA uni17C6 uni17C9 uni17CD uni17B7_17CD]' lookup lookup_0 ;";
name = abvs;
},
{
code = "script khmr;\012sub uni17D2 uni1780 by uni17D2_1780;\012sub uni17D2 uni1781 by uni17D2_1781;\012sub uni17D2 uni1782 by uni17D2_1782;\012sub uni17D2 uni1784 by uni17D2_1784;\012sub uni17D2 uni1785 by uni17D2_1785;\012sub uni17D2 uni1786 by uni17D2_1786;\012sub uni17D2 uni1787 by uni17D2_1787;\012sub uni17D2 uni1789 by uni17D2_1789;\012sub uni17D2 uni178A by uni17D2_178A;\012sub uni17D2 uni178B by uni17D2_178B;\012sub uni17D2 uni178C by uni17D2_178C;\012sub uni17D2 uni178E by uni17D2_178E;\012sub uni17D2 uni178F by uni17D2_178F;\012sub uni17D2 uni1790 by uni17D2_1790;\012sub uni17D2 uni1791 by uni17D2_1791;\012sub uni17D2 uni1792 by uni17D2_1792;\012sub uni17D2 uni1793 by uni17D2_1793;\012sub uni17D2 uni1795 by uni17D2_1795;\012sub uni17D2 uni1796 by uni17D2_1796;\012sub uni17D2 uni1797 by uni17D2_1797;\012sub uni17D2 uni1798 by uni17D2_1798;\012sub uni17D2 uni179B by uni17D2_179B;\012sub uni17D2 uni179C by uni17D2_179C;\012sub uni17D2 uni17A0 by uni17D2_17A0;\012sub uni17D2 uni17A2 by uni17D2_17A2;\012sub [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni17A1 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni179F uni17CA' lookup lookup_2 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni17A0 uni17CA' lookup lookup_2 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni17CA' lookup lookup_2 uni17B6 uni17C6 ;\012sub uni179F uni17CA' lookup lookup_2 uni17BE ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17C9 uni17CA]' lookup lookup_3 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 [uni17B7.a uni17B8.a uni17B9.a uni17BA.a] ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17BE ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17C6 ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17D0 ;\012sub [uni17C9 uni17C9.r]' lookup lookup_4 uni17B6 uni17C6 ;\012sub uni178E [uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178F uni17D2_17A0]' lookup lookup_5 ;\012sub uni178E [uni17BB uni17BC uni17BD]' lookup lookup_6 ;\012sub [uni17D2_178A.n uni17D2_178B.n uni17D2_178C.n uni17D2_17A0.n] [uni17BB.b uni17BC.b uni17BD.b]' lookup lookup_7 ;\012sub uni179A [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798]' lookup lookup_8 ;\012sub uni179C [uni17D2_178A uni17D2_178F uni17D2_1797 uni17D2_1798]' lookup lookup_8 ;\012sub uni1789.a uni17D2_1789' lookup lookup_9 ;\012sub uni17D2_179F [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012sub uni17A1 [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012";
name = blwf;
},
{
code = "script khmr;\012sub [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1789 uni17C9 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni17A1 [uni17BB uni17BC uni17BD]' lookup lookup_1 ;\012sub uni1794' lookup lookup_11 uni17B6 ;\012sub uni1794' lookup lookup_11 uni17C4 ;\012sub uni1794' lookup lookup_11 uni17C5 ;\012sub uni1794' lookup lookup_11 uni17C9 uni17B6 ;\012sub uni1794' lookup lookup_11 uni17C9 uni17C4 ;\012sub uni1794' lookup lookup_11 uni17C9 uni17C5 ;\012sub uni1794' lookup lookup_11 uni17CA uni17B6 ;\012sub uni1794' lookup lookup_11 uni17CA uni17C4 ;\012sub uni1794' lookup lookup_11 uni17CA uni17C5 ;\012sub uni1794' lookup lookup_11 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] uni17B6 ;\012sub uni1794' lookup lookup_11 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] uni17C4 ;\012sub uni1794' lookup lookup_11 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] uni17C5 ;\012sub uni1794' lookup lookup_11 uni17BB uni17B6 ;\012sub uni1794' lookup lookup_11 uni17BB uni17C4 ;\012sub uni1794' lookup lookup_11 uni17BB uni17C5 ;\012sub uni17D2_179A' lookup lookup_12 [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2] [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] ;\012sub uni17CA [uni17B7 uni17B8 uni17B9 uni17BA uni17BE uni17C6]' lookup lookup_13 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17C9 uni17CA]' lookup lookup_3 [uni17B7 uni17B8 uni17B9 uni17BA] ;\012sub uni1789' lookup lookup_14 [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] ;\012sub uni1789' lookup lookup_14 [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] ;\012sub uni1789.a uni17D2_1789' lookup lookup_9 ;\012sub uni17D2_179F [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012sub uni17A1 [uni17D2_1798 uni17D2_17A0]' lookup lookup_10 ;\012";
name = clig;
},
{
code = "script khmr;\012sub uni17D2 uni179A by uni17D2_179A;\012sub uni17D2_179A' lookup lookup_12 [uni1780 uni1781 uni1782 uni1784 uni1785 uni1786 uni1787 uni178A uni178B uni178C uni178F uni1790 uni1791 uni1792 uni1793 uni1794 uni1795 uni1796 uni1797 uni1798 uni17A2] [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] ;";
name = pref;
},
{
code = "script khmr;\012sub uni17D2 uni1783 by uni17D2_1783;\012sub uni17D2 uni1788 by uni17D2_1788;\012sub uni17D2 uni178D by uni17D2_178D;\012sub uni17D2 uni1794 by uni17D2_1794;\012sub uni17D2 uni1799 by uni17D2_1799;\012sub uni17D2 uni179F by uni17D2_179F;\012sub [uni17D2_1780 uni17D2_1781 uni17D2_1782 uni17D2_1784 uni17D2_1785 uni17D2_1786 uni17D2_1787 uni17D2_1789 uni17D2_1789.a uni17D2_178A uni17D2_178B uni17D2_178C uni17D2_178E uni17D2_178F uni17D2_1790 uni17D2_1791 uni17D2_1792 uni17D2_1793 uni17D2_1795 uni17D2_1796 uni17D2_1797 uni17D2_1798 uni17D2_179B uni17D2_179C uni17D2_17A0 uni17D2_17A2] [uni17BF uni17C0]' lookup lookup_15 ;\012sub uni1789 [uni17BF uni17C0]' lookup lookup_15 ;\012sub [uni17D2_1783 uni17D2_1788 uni17D2_178D uni17D2_1794 uni17D2_1799 uni17D2_179F] [uni17BF uni17C0]' lookup lookup_15 ;\012";
name = pstf;
}
);
fontMaster = (
{
ascender = 2189;
capHeight = 1462;
customParameters = (
{
name = typoAscender;
value = 2189;
},
{
name = typoDescender;
value = -850;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2189;
},
{
name = winDescent;
value = 850;
},
{
name = hheaAscender;
value = 2189;
},
{
name = hheaDescender;
value = -850;
},
{
name = strikeoutPosition;
value = 498;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 59 44 28 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01264 4 48 8 39 5 21 7 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01268 2 56 6 44 2 28 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0124160 3136 2560 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 128 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01266 2 50 6 42 2 23 5 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
199,
199,
122,
122,
1300,
-70,
0,
-500,
-840,
1300,
-70,
0,
-500,
-840,
127,
127,
199,
49,
247,
42,
125,
125,
257,
2090,
-800,
2090,
-800,
198,
198,
107,
107,
1462,
0,
1556,
1098,
0,
-492,
1485,
-20,
1556,
1118,
-20,
-492,
50,
50,
50,
50,
1483,
588,
1483,
573
);
}
);
descender = -850;
id = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
weightValue = 400;
widthValue = 5;
xHeight = 1098;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"102 1462 LINE",
"102 0 LINE",
"922 0 LINE",
"922 1462 LINE"
);
},
{
closed = 1;
nodes = (
"823 98 LINE",
"201 98 LINE",
"201 1364 LINE",
"823 1364 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */\0120 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 4 1 1 2 1 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 \012CALL[ ]	/* CallFunction */";
};
width = 1024;
}
);
note = .notdef;
},
{
glyphname = CR;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 1044;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 532;
}
);
note = space;
unicode = 0020;
},
{
glyphname = uni0000;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 0;
}
);
note = uni0000;
},
{
glyphname = exclam;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"279 377 OFFCURVE",
"283 380 OFFCURVE",
"284 387 CURVE SMOOTH",
"327 858 LINE",
"329 1415 LINE SMOOTH",
"329 1422 OFFCURVE",
"326 1425 OFFCURVE",
"319 1425 CURVE SMOOTH",
"89 1425 LINE SMOOTH",
"84 1425 OFFCURVE",
"81 1422 OFFCURVE",
"81 1415 CURVE SMOOTH",
"81 858 LINE",
"124 387 LINE SMOOTH",
"125 380 OFFCURVE",
"129 377 OFFCURVE",
"134 377 CURVE SMOOTH",
"274 377 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"324 0 OFFCURVE",
"327 3 OFFCURVE",
"327 10 CURVE SMOOTH",
"327 233 LINE SMOOTH",
"327 239 OFFCURVE",
"324 242 OFFCURVE",
"319 242 CURVE SMOOTH",
"89 242 LINE SMOOTH",
"84 242 OFFCURVE",
"81 239 OFFCURVE",
"81 233 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"319 0 LINE SMOOTH"
);
}
);
width = 415;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"301 944 OFFCURVE",
"303 946 OFFCURVE",
"303 950 CURVE SMOOTH",
"342 1417 LINE",
"343 1422 OFFCURVE",
"341 1425 OFFCURVE",
"334 1425 CURVE SMOOTH",
"131 1425 LINE SMOOTH",
"126 1425 OFFCURVE",
"122 1422 OFFCURVE",
"121 1417 CURVE",
"88 954 LINE SMOOTH",
"88 947 OFFCURVE",
"91 944 OFFCURVE",
"96 944 CURVE SMOOTH",
"297 944 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"668 944 OFFCURVE",
"670 946 OFFCURVE",
"670 950 CURVE SMOOTH",
"709 1417 LINE",
"710 1422 OFFCURVE",
"707 1425 OFFCURVE",
"700 1425 CURVE SMOOTH",
"498 1425 LINE SMOOTH",
"492 1425 OFFCURVE",
"488 1422 OFFCURVE",
"487 1417 CURVE",
"455 954 LINE SMOOTH",
"455 947 OFFCURVE",
"458 944 OFFCURVE",
"463 944 CURVE SMOOTH",
"663 944 LINE SMOOTH"
);
}
);
width = 800;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"382 406 OFFCURVE",
"385 409 OFFCURVE",
"385 416 CURVE SMOOTH",
"385 616 LINE",
"573 616 LINE",
"573 416 LINE SMOOTH",
"573 409 OFFCURVE",
"577 406 OFFCURVE",
"584 406 CURVE SMOOTH",
"762 406 LINE SMOOTH",
"765 406 OFFCURVE",
"766 409 OFFCURVE",
"766 416 CURVE SMOOTH",
"766 616 LINE",
"903 616 LINE SMOOTH",
"910 616 OFFCURVE",
"913 620 OFFCURVE",
"913 627 CURVE SMOOTH",
"913 788 LINE SMOOTH",
"913 797 OFFCURVE",
"910 801 OFFCURVE",
"903 801 CURVE SMOOTH",
"766 801 LINE",
"766 1028 LINE",
"903 1028 LINE SMOOTH",
"910 1028 OFFCURVE",
"913 1032 OFFCURVE",
"913 1040 CURVE SMOOTH",
"913 1208 LINE SMOOTH",
"913 1214 OFFCURVE",
"910 1217 OFFCURVE",
"903 1217 CURVE SMOOTH",
"766 1217 LINE",
"766 1421 LINE SMOOTH",
"766 1424 OFFCURVE",
"765 1425 OFFCURVE",
"762 1425 CURVE SMOOTH",
"582 1425 LINE SMOOTH",
"576 1425 OFFCURVE",
"573 1422 OFFCURVE",
"573 1417 CURVE SMOOTH",
"573 1217 LINE",
"385 1217 LINE",
"385 1417 LINE SMOOTH",
"385 1422 OFFCURVE",
"384 1425 OFFCURVE",
"381 1425 CURVE SMOOTH",
"201 1425 LINE SMOOTH",
"197 1425 OFFCURVE",
"195 1422 OFFCURVE",
"195 1417 CURVE SMOOTH",
"195 1217 LINE",
"55 1217 LINE SMOOTH",
"47 1217 OFFCURVE",
"43 1213 OFFCURVE",
"43 1206 CURVE SMOOTH",
"43 1040 LINE SMOOTH",
"43 1032 OFFCURVE",
"47 1028 OFFCURVE",
"55 1028 CURVE SMOOTH",
"195 1028 LINE",
"195 801 LINE",
"55 801 LINE SMOOTH",
"47 801 OFFCURVE",
"43 792 OFFCURVE",
"43 788 CURVE SMOOTH",
"43 627 LINE SMOOTH",
"43 620 OFFCURVE",
"47 616 OFFCURVE",
"55 616 CURVE SMOOTH",
"195 616 LINE",
"195 416 LINE SMOOTH",
"195 409 OFFCURVE",
"198 406 OFFCURVE",
"205 406 CURVE SMOOTH",
"377 406 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"573 801 LINE",
"385 801 LINE",
"385 1028 LINE",
"573 1028 LINE"
);
}
);
width = 970;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"469 0 OFFCURVE",
"472 3 OFFCURVE",
"472 8 CURVE SMOOTH",
"472 129 LINE",
"607 173 OFFCURVE",
"700 293 OFFCURVE",
"700 449 CURVE SMOOTH",
"700 585 OFFCURVE",
"631 671 OFFCURVE",
"519 731 CURVE SMOOTH",
"349 825 LINE SMOOTH",
"270 872 OFFCURVE",
"245 915 OFFCURVE",
"245 983 CURVE SMOOTH",
"245 1054 OFFCURVE",
"300 1114 OFFCURVE",
"368 1114 CURVE SMOOTH",
"433 1114 OFFCURVE",
"493 1062 OFFCURVE",
"493 983 CURVE SMOOTH",
"495 846 LINE SMOOTH",
"495 842 OFFCURVE",
"497 840 OFFCURVE",
"501 840 CURVE SMOOTH",
"689 840 LINE SMOOTH",
"693 840 OFFCURVE",
"695 842 OFFCURVE",
"695 846 CURVE SMOOTH",
"695 983 LINE SMOOTH",
"695 1131 OFFCURVE",
"599 1256 OFFCURVE",
"468 1296 CURVE",
"468 1417 LINE SMOOTH",
"468 1422 OFFCURVE",
"465 1425 OFFCURVE",
"458 1425 CURVE SMOOTH",
"280 1425 LINE SMOOTH",
"274 1425 OFFCURVE",
"271 1422 OFFCURVE",
"271 1417 CURVE SMOOTH",
"271 1298 LINE",
"138 1258 OFFCURVE",
"38 1136 OFFCURVE",
"38 983 CURVE SMOOTH",
"38 844 OFFCURVE",
"94 729 OFFCURVE",
"222 657 CURVE SMOOTH",
"287 622 OFFCURVE",
"377 574 OFFCURVE",
"413 553 CURVE SMOOTH",
"466 523 OFFCURVE",
"493 487 OFFCURVE",
"493 444 CURVE SMOOTH",
"493 379 OFFCURVE",
"439 315 OFFCURVE",
"368 315 CURVE SMOOTH",
"300 315 OFFCURVE",
"241 377 OFFCURVE",
"241 449 CURVE SMOOTH",
"241 526 LINE SMOOTH",
"241 532 OFFCURVE",
"239 535 OFFCURVE",
"235 535 CURVE SMOOTH",
"48 535 LINE SMOOTH",
"43 535 OFFCURVE",
"40 532 OFFCURVE",
"40 526 CURVE SMOOTH",
"40 449 LINE SMOOTH",
"40 298 OFFCURVE",
"139 168 OFFCURVE",
"276 127 CURVE",
"276 8 LINE SMOOTH",
"276 3 OFFCURVE",
"279 0 OFFCURVE",
"284 0 CURVE SMOOTH",
"462 0 LINE SMOOTH"
);
}
);
width = 768;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"392 764 OFFCURVE",
"475 818 OFFCURVE",
"523 898 CURVE SMOOTH",
"546 938 OFFCURVE",
"558 983 OFFCURVE",
"558 1032 CURVE SMOOTH",
"558 1178 LINE SMOOTH",
"558 1275 OFFCURVE",
"509 1362 OFFCURVE",
"430 1410 CURVE SMOOTH",
"390 1434 OFFCURVE",
"345 1446 OFFCURVE",
"296 1446 CURVE SMOOTH",
"201 1446 OFFCURVE",
"116 1395 OFFCURVE",
"68 1313 CURVE SMOOTH",
"44 1272 OFFCURVE",
"32 1227 OFFCURVE",
"32 1178 CURVE SMOOTH",
"32 1032 LINE SMOOTH",
"32 937 OFFCURVE",
"84 850 OFFCURVE",
"165 801 CURVE SMOOTH",
"205 776 OFFCURVE",
"249 764 OFFCURVE",
"296 764 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"394 0 OFFCURVE",
"398 3 OFFCURVE",
"401 10 CURVE",
"1216 1417 LINE SMOOTH",
"1219 1422 OFFCURVE",
"1217 1425 OFFCURVE",
"1210 1425 CURVE SMOOTH",
"972 1425 LINE SMOOTH",
"968 1425 OFFCURVE",
"964 1422 OFFCURVE",
"960 1417 CURVE",
"143 10 LINE",
"140 3 OFFCURVE",
"142 0 OFFCURVE",
"149 0 CURVE SMOOTH",
"388 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"240 930 OFFCURVE",
"196 977 OFFCURVE",
"196 1032 CURVE SMOOTH",
"196 1174 LINE SMOOTH",
"196 1227 OFFCURVE",
"237 1274 OFFCURVE",
"292 1274 CURVE SMOOTH",
"347 1274 OFFCURVE",
"386 1227 OFFCURVE",
"386 1174 CURVE SMOOTH",
"386 1032 LINE SMOOTH",
"386 975 OFFCURVE",
"347 930 OFFCURVE",
"292 930 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1180 -20 OFFCURVE",
"1263 33 OFFCURVE",
"1311 114 CURVE SMOOTH",
"1335 154 OFFCURVE",
"1347 199 OFFCURVE",
"1347 248 CURVE SMOOTH",
"1347 393 LINE SMOOTH",
"1347 492 OFFCURVE",
"1297 578 OFFCURVE",
"1218 626 CURVE SMOOTH",
"1178 650 OFFCURVE",
"1134 662 OFFCURVE",
"1085 662 CURVE SMOOTH",
"989 662 OFFCURVE",
"904 611 OFFCURVE",
"856 529 CURVE SMOOTH",
"832 488 OFFCURVE",
"820 442 OFFCURVE",
"820 393 CURVE SMOOTH",
"820 248 LINE SMOOTH",
"820 152 OFFCURVE",
"872 65 OFFCURVE",
"953 17 CURVE SMOOTH",
"993 -8 OFFCURVE",
"1037 -20 OFFCURVE",
"1085 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1031 145 OFFCURVE",
"986 193 OFFCURVE",
"986 248 CURVE SMOOTH",
"986 389 LINE SMOOTH",
"986 444 OFFCURVE",
"1028 489 OFFCURVE",
"1083 489 CURVE SMOOTH",
"1138 489 OFFCURVE",
"1177 444 OFFCURVE",
"1177 389 CURVE SMOOTH",
"1177 248 LINE SMOOTH",
"1177 191 OFFCURVE",
"1138 145 OFFCURVE",
"1083 145 CURVE SMOOTH"
);
}
);
width = 1388;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"799 0 OFFCURVE",
"802 3 OFFCURVE",
"802 8 CURVE SMOOTH",
"804 649 LINE",
"985 649 LINE SMOOTH",
"990 649 OFFCURVE",
"993 652 OFFCURVE",
"993 657 CURVE SMOOTH",
"993 885 LINE SMOOTH",
"993 892 OFFCURVE",
"989 895 OFFCURVE",
"982 895 CURVE SMOOTH",
"425 895 LINE SMOOTH",
"341 895 OFFCURVE",
"298 950 OFFCURVE",
"298 1042 CURVE SMOOTH",
"298 1119 OFFCURVE",
"357 1182 OFFCURVE",
"425 1182 CURVE SMOOTH",
"704 1182 LINE SMOOTH",
"712 1182 OFFCURVE",
"716 1186 OFFCURVE",
"716 1194 CURVE SMOOTH",
"716 1411 LINE SMOOTH",
"716 1420 OFFCURVE",
"711 1425 OFFCURVE",
"702 1425 CURVE SMOOTH",
"425 1425 LINE SMOOTH",
"286 1425 OFFCURVE",
"168 1352 OFFCURVE",
"101 1236 CURVE SMOOTH",
"68 1178 OFFCURVE",
"51 1113 OFFCURVE",
"51 1042 CURVE SMOOTH",
"51 930 OFFCURVE",
"86 837 OFFCURVE",
"143 774 CURVE",
"72 706 OFFCURVE",
"24 615 OFFCURVE",
"24 522 CURVE SMOOTH",
"24 387 LINE SMOOTH",
"24 267 OFFCURVE",
"96 137 OFFCURVE",
"218 58 CURVE SMOOTH",
"279 18 OFFCURVE",
"349 -2 OFFCURVE",
"430 -2 CURVE SMOOTH",
"794 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"363 244 OFFCURVE",
"314 278 OFFCURVE",
"288 323 CURVE SMOOTH",
"275 345 OFFCURVE",
"268 366 OFFCURVE",
"268 387 CURVE SMOOTH",
"268 522 LINE SMOOTH",
"268 558 OFFCURVE",
"297 599 OFFCURVE",
"345 628 CURVE SMOOTH",
"368 642 OFFCURVE",
"394 649 OFFCURVE",
"423 649 CURVE SMOOTH",
"565 649 LINE",
"563 246 LINE",
"430 244 LINE SMOOTH"
);
}
);
width = 1017;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"301 944 OFFCURVE",
"303 946 OFFCURVE",
"303 950 CURVE SMOOTH",
"342 1417 LINE",
"343 1422 OFFCURVE",
"341 1425 OFFCURVE",
"334 1425 CURVE SMOOTH",
"131 1425 LINE SMOOTH",
"126 1425 OFFCURVE",
"122 1422 OFFCURVE",
"121 1417 CURVE",
"88 954 LINE SMOOTH",
"88 947 OFFCURVE",
"91 944 OFFCURVE",
"96 944 CURVE SMOOTH",
"297 944 LINE SMOOTH"
);
}
);
width = 434;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"582 -20 OFFCURVE",
"585 -17 OFFCURVE",
"585 -12 CURVE SMOOTH",
"583 219 LINE SMOOTH",
"583 224 OFFCURVE",
"580 227 OFFCURVE",
"573 227 CURVE SMOOTH",
"462 227 LINE",
"386 235 OFFCURVE",
"321 307 OFFCURVE",
"321 391 CURVE SMOOTH",
"321 1040 LINE SMOOTH",
"321 1128 OFFCURVE",
"383 1200 OFFCURVE",
"462 1200 CURVE SMOOTH",
"579 1200 LINE SMOOTH",
"586 1200 OFFCURVE",
"589 1203 OFFCURVE",
"589 1208 CURVE SMOOTH",
"589 1440 LINE SMOOTH",
"589 1445 OFFCURVE",
"586 1448 OFFCURVE",
"579 1448 CURVE SMOOTH",
"464 1448 LINE SMOOTH",
"323 1443 OFFCURVE",
"198 1361 OFFCURVE",
"129 1240 CURVE SMOOTH",
"94 1179 OFFCURVE",
"77 1113 OFFCURVE",
"77 1040 CURVE SMOOTH",
"75 391 LINE SMOOTH",
"75 244 OFFCURVE",
"152 115 OFFCURVE",
"270 40 CURVE SMOOTH",
"329 3 OFFCURVE",
"393 -17 OFFCURVE",
"464 -20 CURVE SMOOTH",
"575 -20 LINE SMOOTH"
);
}
);
width = 667;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"344 -15 OFFCURVE",
"467 65 OFFCURVE",
"538 189 CURVE SMOOTH",
"573 250 OFFCURVE",
"591 318 OFFCURVE",
"591 391 CURVE SMOOTH",
"589 1040 LINE SMOOTH",
"589 1185 OFFCURVE",
"515 1312 OFFCURVE",
"397 1388 CURVE SMOOTH",
"338 1425 OFFCURVE",
"273 1445 OFFCURVE",
"202 1448 CURVE SMOOTH",
"87 1448 LINE SMOOTH",
"80 1448 OFFCURVE",
"77 1445 OFFCURVE",
"77 1440 CURVE SMOOTH",
"77 1208 LINE SMOOTH",
"77 1203 OFFCURVE",
"80 1200 OFFCURVE",
"87 1200 CURVE SMOOTH",
"200 1200 LINE SMOOTH",
"284 1200 OFFCURVE",
"345 1128 OFFCURVE",
"345 1040 CURVE SMOOTH",
"345 391 LINE SMOOTH",
"345 307 OFFCURVE",
"281 235 OFFCURVE",
"200 227 CURVE",
"91 227 LINE SMOOTH",
"84 227 OFFCURVE",
"81 224 OFFCURVE",
"81 219 CURVE SMOOTH",
"81 -12 LINE SMOOTH",
"81 -17 OFFCURVE",
"84 -20 OFFCURVE",
"91 -20 CURVE SMOOTH",
"200 -20 LINE SMOOTH"
);
}
);
width = 667;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"538 1331 LINE",
"405 1235 LINE",
"417 1423 LINE",
"266 1423 LINE",
"276 1235 LINE",
"145 1335 LINE",
"55 1217 LINE",
"227 1110 LINE",
"57 1006 LINE",
"145 887 LINE",
"274 987 LINE",
"266 809 LINE",
"415 809 LINE",
"407 989 LINE",
"536 891 LINE",
"626 1010 LINE",
"456 1112 LINE",
"626 1212 LINE"
);
}
);
width = 720;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"538 262 OFFCURVE",
"541 265 OFFCURVE",
"541 272 CURVE SMOOTH",
"541 639 LINE",
"846 639 LINE SMOOTH",
"849 639 OFFCURVE",
"856 644 OFFCURVE",
"856 649 CURVE SMOOTH",
"856 811 LINE SMOOTH",
"856 819 OFFCURVE",
"853 823 OFFCURVE",
"846 823 CURVE SMOOTH",
"541 823 LINE",
"541 1196 LINE SMOOTH",
"541 1199 OFFCURVE",
"538 1200 OFFCURVE",
"532 1200 CURVE SMOOTH",
"360 1200 LINE SMOOTH",
"353 1200 OFFCURVE",
"350 1199 OFFCURVE",
"350 1196 CURVE SMOOTH",
"350 823 LINE",
"59 823 LINE SMOOTH",
"51 823 OFFCURVE",
"47 814 OFFCURVE",
"47 811 CURVE SMOOTH",
"47 649 LINE SMOOTH",
"47 642 OFFCURVE",
"51 639 OFFCURVE",
"59 639 CURVE SMOOTH",
"350 639 LINE",
"350 272 LINE SMOOTH",
"350 265 OFFCURVE",
"353 262 OFFCURVE",
"360 262 CURVE SMOOTH",
"532 262 LINE SMOOTH"
);
}
);
width = 905;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"169 -258 OFFCURVE",
"247 -210 OFFCURVE",
"294 -131 CURVE SMOOTH",
"317 -92 OFFCURVE",
"329 -48 OFFCURVE",
"329 0 CURVE SMOOTH",
"329 238 LINE SMOOTH",
"329 243 OFFCURVE",
"326 246 OFFCURVE",
"321 246 CURVE SMOOTH",
"89 246 LINE SMOOTH",
"84 246 OFFCURVE",
"81 243 OFFCURVE",
"81 238 CURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"204 0 LINE",
"204 -71 OFFCURVE",
"149 -131 OFFCURVE",
"81 -131 CURVE",
"81 -258 LINE"
);
}
);
width = 415;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"501 592 OFFCURVE",
"504 595 OFFCURVE",
"504 600 CURVE SMOOTH",
"504 823 LINE SMOOTH",
"504 828 OFFCURVE",
"501 831 OFFCURVE",
"494 831 CURVE SMOOTH",
"98 831 LINE SMOOTH",
"91 831 OFFCURVE",
"88 828 OFFCURVE",
"88 823 CURVE SMOOTH",
"88 600 LINE SMOOTH",
"88 595 OFFCURVE",
"91 592 OFFCURVE",
"98 592 CURVE SMOOTH",
"494 592 LINE SMOOTH"
);
}
);
width = 620;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 8 CURVE SMOOTH",
"329 240 LINE SMOOTH",
"329 245 OFFCURVE",
"326 248 OFFCURVE",
"321 248 CURVE SMOOTH",
"89 248 LINE SMOOTH",
"84 248 OFFCURVE",
"81 245 OFFCURVE",
"81 240 CURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 415;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"285 0 OFFCURVE",
"289 3 OFFCURVE",
"290 10 CURVE SMOOTH",
"548 1417 LINE SMOOTH",
"549 1422 OFFCURVE",
"547 1425 OFFCURVE",
"540 1425 CURVE SMOOTH",
"327 1425 LINE SMOOTH",
"322 1425 OFFCURVE",
"318 1422 OFFCURVE",
"317 1417 CURVE SMOOTH",
"63 10 LINE SMOOTH",
"62 3 OFFCURVE",
"64 0 OFFCURVE",
"71 0 CURVE SMOOTH",
"280 0 LINE SMOOTH"
);
}
);
width = 612;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"676 -20 OFFCURVE",
"812 61 OFFCURVE",
"888 186 CURVE SMOOTH",
"925 248 OFFCURVE",
"944 316 OFFCURVE",
"944 391 CURVE SMOOTH",
"942 1040 LINE SMOOTH",
"942 1191 OFFCURVE",
"862 1319 OFFCURVE",
"731 1393 CURVE SMOOTH",
"665 1430 OFFCURVE",
"588 1448 OFFCURVE",
"501 1448 CURVE SMOOTH",
"329 1448 OFFCURVE",
"191 1368 OFFCURVE",
"116 1245 CURVE SMOOTH",
"78 1184 OFFCURVE",
"59 1115 OFFCURVE",
"59 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 242 OFFCURVE",
"137 111 OFFCURVE",
"270 36 CURVE SMOOTH",
"337 -1 OFFCURVE",
"414 -20 OFFCURVE",
"501 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"696 290 OFFCURVE",
"616 227 OFFCURVE",
"501 227 CURVE SMOOTH",
"384 227 OFFCURVE",
"307 290 OFFCURVE",
"307 391 CURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1136 OFFCURVE",
"384 1202 OFFCURVE",
"501 1202 CURVE SMOOTH",
"616 1202 OFFCURVE",
"694 1136 OFFCURVE",
"694 1040 CURVE SMOOTH",
"696 391 LINE SMOOTH"
);
}
);
width = 1017;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"328 0 OFFCURVE",
"331 3 OFFCURVE",
"331 10 CURVE SMOOTH",
"329 1417 LINE SMOOTH",
"329 1422 OFFCURVE",
"326 1425 OFFCURVE",
"321 1425 CURVE SMOOTH",
"91 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"323 0 LINE SMOOTH"
);
}
);
width = 430;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"822 0 OFFCURVE",
"825 3 OFFCURVE",
"825 10 CURVE SMOOTH",
"825 242 LINE SMOOTH",
"825 247 OFFCURVE",
"822 250 OFFCURVE",
"816 250 CURVE SMOOTH",
"356 250 LINE",
"745 784 LINE SMOOTH",
"800 856 OFFCURVE",
"833 955 OFFCURVE",
"833 1044 CURVE SMOOTH",
"833 1187 OFFCURVE",
"754 1316 OFFCURVE",
"634 1392 CURVE SMOOTH",
"574 1429 OFFCURVE",
"507 1448 OFFCURVE",
"433 1448 CURVE SMOOTH",
"294 1448 OFFCURVE",
"166 1368 OFFCURVE",
"91 1243 CURVE SMOOTH",
"53 1180 OFFCURVE",
"34 1111 OFFCURVE",
"34 1034 CURVE SMOOTH",
"34 934 LINE SMOOTH",
"34 927 OFFCURVE",
"37 924 OFFCURVE",
"42 924 CURVE SMOOTH",
"272 924 LINE SMOOTH",
"279 924 OFFCURVE",
"282 927 OFFCURVE",
"282 934 CURVE SMOOTH",
"282 1034 LINE SMOOTH",
"282 1133 OFFCURVE",
"349 1204 OFFCURVE",
"433 1204 CURVE SMOOTH",
"521 1204 OFFCURVE",
"585 1124 OFFCURVE",
"585 1044 CURVE SMOOTH",
"585 1015 OFFCURVE",
"571 969 OFFCURVE",
"552 944 CURVE SMOOTH",
"46 250 LINE",
"43 247 OFFCURVE",
"42 245 OFFCURVE",
"42 242 CURVE SMOOTH",
"42 10 LINE SMOOTH",
"42 3 OFFCURVE",
"45 0 OFFCURVE",
"52 0 CURVE SMOOTH",
"816 0 LINE SMOOTH"
);
}
);
width = 899;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"581 -23 OFFCURVE",
"708 57 OFFCURVE",
"781 182 CURVE SMOOTH",
"817 245 OFFCURVE",
"835 314 OFFCURVE",
"835 391 CURVE SMOOTH",
"835 453 LINE SMOOTH",
"835 556 OFFCURVE",
"791 656 OFFCURVE",
"720 737 CURVE",
"791 817 OFFCURVE",
"833 898 OFFCURVE",
"833 1018 CURVE SMOOTH",
"833 1051 LINE SMOOTH",
"833 1195 OFFCURVE",
"756 1321 OFFCURVE",
"635 1394 CURVE SMOOTH",
"574 1430 OFFCURVE",
"507 1448 OFFCURVE",
"433 1448 CURVE SMOOTH",
"297 1448 OFFCURVE",
"168 1372 OFFCURVE",
"93 1255 CURVE SMOOTH",
"55 1196 OFFCURVE",
"36 1130 OFFCURVE",
"36 1055 CURVE SMOOTH",
"36 946 LINE SMOOTH",
"36 939 OFFCURVE",
"39 936 OFFCURVE",
"44 936 CURVE SMOOTH",
"274 936 LINE SMOOTH",
"279 936 OFFCURVE",
"282 939 OFFCURVE",
"282 946 CURVE SMOOTH",
"282 1044 LINE SMOOTH",
"282 1132 OFFCURVE",
"349 1202 OFFCURVE",
"433 1202 CURVE SMOOTH",
"521 1202 OFFCURVE",
"587 1132 OFFCURVE",
"587 1044 CURVE SMOOTH",
"587 1016 LINE SMOOTH",
"587 923 OFFCURVE",
"519 860 OFFCURVE",
"446 860 CURVE SMOOTH",
"366 860 LINE SMOOTH",
"361 860 OFFCURVE",
"358 857 OFFCURVE",
"358 852 CURVE SMOOTH",
"356 623 LINE SMOOTH",
"356 616 OFFCURVE",
"359 612 OFFCURVE",
"366 612 CURVE SMOOTH",
"446 612 LINE SMOOTH",
"527 612 OFFCURVE",
"587 531 OFFCURVE",
"587 446 CURVE SMOOTH",
"587 391 LINE SMOOTH",
"587 307 OFFCURVE",
"529 227 OFFCURVE",
"433 227 CURVE SMOOTH",
"346 227 OFFCURVE",
"282 302 OFFCURVE",
"282 391 CURVE SMOOTH",
"282 483 LINE SMOOTH",
"282 490 OFFCURVE",
"279 494 OFFCURVE",
"272 494 CURVE SMOOTH",
"42 494 LINE SMOOTH",
"37 494 OFFCURVE",
"34 490 OFFCURVE",
"34 483 CURVE SMOOTH",
"34 391 LINE SMOOTH",
"34 242 OFFCURVE",
"113 109 OFFCURVE",
"234 34 CURVE SMOOTH",
"295 -4 OFFCURVE",
"361 -23 OFFCURVE",
"433 -23 CURVE SMOOTH"
);
}
);
width = 901;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"723 0 OFFCURVE",
"726 3 OFFCURVE",
"726 10 CURVE SMOOTH",
"726 250 LINE",
"872 250 LINE SMOOTH",
"877 250 OFFCURVE",
"880 253 OFFCURVE",
"880 260 CURVE SMOOTH",
"880 483 LINE SMOOTH",
"880 490 OFFCURVE",
"877 494 OFFCURVE",
"870 494 CURVE SMOOTH",
"726 494 LINE",
"724 1417 LINE SMOOTH",
"724 1422 OFFCURVE",
"722 1425 OFFCURVE",
"718 1425 CURVE SMOOTH",
"487 1425 LINE SMOOTH",
"482 1425 OFFCURVE",
"477 1422 OFFCURVE",
"474 1417 CURVE SMOOTH",
"28 485 LINE",
"28 260 LINE SMOOTH",
"28 253 OFFCURVE",
"31 250 OFFCURVE",
"36 250 CURVE SMOOTH",
"479 250 LINE",
"479 10 LINE SMOOTH",
"479 3 OFFCURVE",
"482 0 OFFCURVE",
"487 0 CURVE SMOOTH",
"718 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"479 940 LINE",
"479 494 LINE",
"270 494 LINE"
);
}
);
width = 923;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"596 -20 OFFCURVE",
"723 61 OFFCURVE",
"796 187 CURVE SMOOTH",
"832 250 OFFCURVE",
"850 318 OFFCURVE",
"850 393 CURVE SMOOTH",
"850 532 LINE SMOOTH",
"850 677 OFFCURVE",
"770 803 OFFCURVE",
"646 876 CURVE SMOOTH",
"584 912 OFFCURVE",
"516 930 OFFCURVE",
"442 930 CURVE SMOOTH",
"399 930 OFFCURVE",
"338 917 OFFCURVE",
"305 901 CURVE",
"315 1184 LINE",
"795 1184 LINE SMOOTH",
"800 1184 OFFCURVE",
"803 1187 OFFCURVE",
"803 1194 CURVE SMOOTH",
"803 1417 LINE SMOOTH",
"803 1422 OFFCURVE",
"800 1425 OFFCURVE",
"795 1425 CURVE SMOOTH",
"106 1425 LINE SMOOTH",
"101 1425 OFFCURVE",
"98 1422 OFFCURVE",
"98 1417 CURVE SMOOTH",
"86 1194 LINE",
"61 633 LINE SMOOTH",
"61 626 OFFCURVE",
"65 623 OFFCURVE",
"72 623 CURVE SMOOTH",
"291 606 LINE",
"295 612 LINE SMOOTH",
"333 659 OFFCURVE",
"381 682 OFFCURVE",
"440 682 CURVE SMOOTH",
"531 682 OFFCURVE",
"600 617 OFFCURVE",
"600 532 CURVE SMOOTH",
"600 393 LINE SMOOTH",
"600 304 OFFCURVE",
"533 229 OFFCURVE",
"448 229 CURVE SMOOTH",
"364 229 OFFCURVE",
"295 301 OFFCURVE",
"295 393 CURVE SMOOTH",
"295 440 LINE SMOOTH",
"295 446 OFFCURVE",
"292 449 OFFCURVE",
"287 449 CURVE SMOOTH",
"55 449 LINE SMOOTH",
"48 449 OFFCURVE",
"45 446 OFFCURVE",
"45 440 CURVE SMOOTH",
"45 379 LINE SMOOTH",
"45 236 OFFCURVE",
"125 108 OFFCURVE",
"248 35 CURVE SMOOTH",
"309 -2 OFFCURVE",
"376 -20 OFFCURVE",
"448 -20 CURVE SMOOTH"
);
}
);
width = 886;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"608 -20 OFFCURVE",
"733 59 OFFCURVE",
"806 183 CURVE SMOOTH",
"842 245 OFFCURVE",
"860 313 OFFCURVE",
"860 387 CURVE SMOOTH",
"860 514 LINE SMOOTH",
"860 665 OFFCURVE",
"783 795 OFFCURVE",
"662 869 CURVE SMOOTH",
"601 906 OFFCURVE",
"534 924 OFFCURVE",
"460 924 CURVE SMOOTH",
"407 924 OFFCURVE",
"356 914 OFFCURVE",
"307 893 CURVE",
"307 1034 LINE SMOOTH",
"307 1125 OFFCURVE",
"376 1198 OFFCURVE",
"460 1198 CURVE SMOOTH",
"548 1198 OFFCURVE",
"614 1125 OFFCURVE",
"614 1034 CURVE SMOOTH",
"614 993 LINE SMOOTH",
"614 988 OFFCURVE",
"617 985 OFFCURVE",
"622 985 CURVE SMOOTH",
"852 985 LINE SMOOTH",
"859 985 OFFCURVE",
"862 988 OFFCURVE",
"862 993 CURVE SMOOTH",
"862 1034 LINE SMOOTH",
"862 1187 OFFCURVE",
"783 1316 OFFCURVE",
"662 1392 CURVE SMOOTH",
"601 1429 OFFCURVE",
"534 1448 OFFCURVE",
"460 1448 CURVE SMOOTH",
"316 1448 OFFCURVE",
"187 1366 OFFCURVE",
"113 1241 CURVE SMOOTH",
"76 1178 OFFCURVE",
"57 1109 OFFCURVE",
"57 1034 CURVE SMOOTH",
"59 387 LINE SMOOTH",
"59 239 OFFCURVE",
"140 111 OFFCURVE",
"261 36 CURVE SMOOTH",
"322 -1 OFFCURVE",
"388 -20 OFFCURVE",
"460 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"376 225 OFFCURVE",
"307 300 OFFCURVE",
"307 387 CURVE SMOOTH",
"307 514 LINE SMOOTH",
"307 605 OFFCURVE",
"376 676 OFFCURVE",
"460 676 CURVE SMOOTH",
"545 676 OFFCURVE",
"612 602 OFFCURVE",
"612 514 CURVE SMOOTH",
"612 387 LINE SMOOTH",
"612 296 OFFCURVE",
"545 225 OFFCURVE",
"460 225 CURVE SMOOTH"
);
}
);
width = 931;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"447 0 OFFCURVE",
"451 3 OFFCURVE",
"454 10 CURVE SMOOTH",
"847 1186 LINE",
"847 1415 LINE SMOOTH",
"847 1422 OFFCURVE",
"844 1425 OFFCURVE",
"839 1425 CURVE SMOOTH",
"46 1425 LINE SMOOTH",
"41 1425 OFFCURVE",
"38 1422 OFFCURVE",
"38 1415 CURVE SMOOTH",
"38 1192 LINE SMOOTH",
"38 1187 OFFCURVE",
"41 1184 OFFCURVE",
"46 1184 CURVE SMOOTH",
"605 1184 LINE",
"183 10 LINE SMOOTH",
"180 3 OFFCURVE",
"182 0 OFFCURVE",
"188 0 CURVE SMOOTH",
"441 0 LINE SMOOTH"
);
}
);
width = 905;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"594 -20 OFFCURVE",
"719 59 OFFCURVE",
"792 183 CURVE SMOOTH",
"828 245 OFFCURVE",
"846 313 OFFCURVE",
"846 387 CURVE SMOOTH",
"846 514 LINE SMOOTH",
"846 629 OFFCURVE",
"800 734 OFFCURVE",
"727 807 CURVE",
"787 875 OFFCURVE",
"823 964 OFFCURVE",
"823 1065 CURVE SMOOTH",
"823 1206 OFFCURVE",
"749 1326 OFFCURVE",
"636 1396 CURVE SMOOTH",
"579 1431 OFFCURVE",
"516 1448 OFFCURVE",
"446 1448 CURVE SMOOTH",
"307 1448 OFFCURVE",
"187 1375 OFFCURVE",
"120 1259 CURVE SMOOTH",
"87 1200 OFFCURVE",
"70 1136 OFFCURVE",
"70 1065 CURVE SMOOTH",
"70 964 OFFCURVE",
"106 872 OFFCURVE",
"166 807 CURVE",
"93 731 OFFCURVE",
"45 629 OFFCURVE",
"45 514 CURVE SMOOTH",
"45 387 LINE SMOOTH",
"45 239 OFFCURVE",
"126 111 OFFCURVE",
"247 36 CURVE SMOOTH",
"308 -1 OFFCURVE",
"374 -20 OFFCURVE",
"446 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"375 928 OFFCURVE",
"315 992 OFFCURVE",
"315 1065 CURVE SMOOTH",
"315 1141 OFFCURVE",
"375 1204 OFFCURVE",
"446 1204 CURVE SMOOTH",
"518 1204 OFFCURVE",
"575 1141 OFFCURVE",
"575 1065 CURVE SMOOTH",
"575 989 OFFCURVE",
"518 928 OFFCURVE",
"446 928 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"362 225 OFFCURVE",
"293 300 OFFCURVE",
"293 387 CURVE SMOOTH",
"293 514 LINE SMOOTH",
"293 605 OFFCURVE",
"362 676 OFFCURVE",
"446 676 CURVE SMOOTH",
"531 676 OFFCURVE",
"598 602 OFFCURVE",
"598 514 CURVE SMOOTH",
"598 387 LINE SMOOTH",
"598 296 OFFCURVE",
"531 225 OFFCURVE",
"446 225 CURVE SMOOTH"
);
}
);
width = 919;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"589 -20 OFFCURVE",
"716 61 OFFCURVE",
"790 187 CURVE SMOOTH",
"827 250 OFFCURVE",
"845 318 OFFCURVE",
"845 393 CURVE SMOOTH",
"843 913 LINE",
"843 1040 LINE SMOOTH",
"843 1188 OFFCURVE",
"762 1319 OFFCURVE",
"641 1393 CURVE SMOOTH",
"580 1430 OFFCURVE",
"514 1448 OFFCURVE",
"441 1448 CURVE SMOOTH",
"297 1448 OFFCURVE",
"169 1368 OFFCURVE",
"97 1245 CURVE SMOOTH",
"60 1184 OFFCURVE",
"42 1115 OFFCURVE",
"42 1040 CURVE SMOOTH",
"42 913 LINE SMOOTH",
"42 764 OFFCURVE",
"121 632 OFFCURVE",
"241 559 CURVE SMOOTH",
"301 522 OFFCURVE",
"368 504 OFFCURVE",
"441 504 CURVE SMOOTH",
"494 504 OFFCURVE",
"546 514 OFFCURVE",
"595 535 CURVE",
"595 393 LINE SMOOTH",
"595 304 OFFCURVE",
"526 229 OFFCURVE",
"441 229 CURVE SMOOTH",
"357 229 OFFCURVE",
"288 304 OFFCURVE",
"288 393 CURVE SMOOTH",
"288 434 LINE SMOOTH",
"288 439 OFFCURVE",
"285 442 OFFCURVE",
"280 442 CURVE SMOOTH",
"50 442 LINE SMOOTH",
"43 442 OFFCURVE",
"40 439 OFFCURVE",
"40 434 CURVE SMOOTH",
"40 393 LINE SMOOTH",
"40 244 OFFCURVE",
"118 111 OFFCURVE",
"241 36 CURVE SMOOTH",
"302 -1 OFFCURVE",
"369 -20 OFFCURVE",
"441 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"357 752 OFFCURVE",
"290 826 OFFCURVE",
"290 913 CURVE SMOOTH",
"290 1040 LINE SMOOTH",
"290 1131 OFFCURVE",
"357 1202 OFFCURVE",
"441 1202 CURVE SMOOTH",
"526 1202 OFFCURVE",
"595 1128 OFFCURVE",
"595 1040 CURVE SMOOTH",
"595 913 LINE SMOOTH",
"595 824 OFFCURVE",
"529 752 OFFCURVE",
"441 752 CURVE SMOOTH"
);
}
);
width = 919;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 608 OFFCURVE",
"329 611 OFFCURVE",
"329 616 CURVE SMOOTH",
"329 848 LINE SMOOTH",
"329 853 OFFCURVE",
"326 856 OFFCURVE",
"321 856 CURVE SMOOTH",
"89 856 LINE SMOOTH",
"84 856 OFFCURVE",
"81 853 OFFCURVE",
"81 848 CURVE SMOOTH",
"81 616 LINE SMOOTH",
"81 611 OFFCURVE",
"84 608 OFFCURVE",
"89 608 CURVE SMOOTH",
"321 608 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 8 CURVE SMOOTH",
"329 240 LINE SMOOTH",
"329 245 OFFCURVE",
"326 248 OFFCURVE",
"321 248 CURVE SMOOTH",
"89 248 LINE SMOOTH",
"84 248 OFFCURVE",
"81 245 OFFCURVE",
"81 240 CURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 415;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 608 OFFCURVE",
"329 611 OFFCURVE",
"329 616 CURVE SMOOTH",
"329 848 LINE SMOOTH",
"329 853 OFFCURVE",
"326 856 OFFCURVE",
"321 856 CURVE SMOOTH",
"89 856 LINE SMOOTH",
"84 856 OFFCURVE",
"81 853 OFFCURVE",
"81 848 CURVE SMOOTH",
"81 616 LINE SMOOTH",
"81 611 OFFCURVE",
"84 608 OFFCURVE",
"89 608 CURVE SMOOTH",
"321 608 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169 -258 OFFCURVE",
"247 -210 OFFCURVE",
"294 -131 CURVE SMOOTH",
"317 -92 OFFCURVE",
"329 -48 OFFCURVE",
"329 0 CURVE SMOOTH",
"329 238 LINE SMOOTH",
"329 243 OFFCURVE",
"326 246 OFFCURVE",
"321 246 CURVE SMOOTH",
"89 246 LINE SMOOTH",
"84 246 OFFCURVE",
"81 243 OFFCURVE",
"81 238 CURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"204 0 LINE",
"204 -71 OFFCURVE",
"149 -131 OFFCURVE",
"81 -131 CURVE",
"81 -258 LINE"
);
}
);
width = 415;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"633 242 OFFCURVE",
"638 243 OFFCURVE",
"643 248 CURVE",
"745 373 LINE SMOOTH",
"750 380 OFFCURVE",
"750 385 OFFCURVE",
"745 389 CURVE SMOOTH",
"321 733 LINE",
"731 1065 LINE SMOOTH",
"734 1068 OFFCURVE",
"733 1073 OFFCURVE",
"729 1081 CURVE",
"629 1206 LINE",
"623 1211 OFFCURVE",
"618 1212 OFFCURVE",
"614 1208 CURVE",
"61 768 LINE SMOOTH",
"50 760 OFFCURVE",
"45 749 OFFCURVE",
"45 736 CURVE SMOOTH",
"45 722 OFFCURVE",
"50 709 OFFCURVE",
"61 698 CURVE",
"629 246 LINE"
);
}
);
width = 872;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"853 811 OFFCURVE",
"856 814 OFFCURVE",
"856 821 CURVE SMOOTH",
"856 983 LINE SMOOTH",
"856 991 OFFCURVE",
"853 995 OFFCURVE",
"846 995 CURVE SMOOTH",
"59 995 LINE SMOOTH",
"51 995 OFFCURVE",
"47 991 OFFCURVE",
"47 983 CURVE SMOOTH",
"47 821 LINE SMOOTH",
"47 814 OFFCURVE",
"51 811 OFFCURVE",
"59 811 CURVE SMOOTH",
"846 811 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"855 463 OFFCURVE",
"858 466 OFFCURVE",
"858 473 CURVE SMOOTH",
"858 635 LINE SMOOTH",
"858 643 OFFCURVE",
"855 647 OFFCURVE",
"848 647 CURVE SMOOTH",
"61 647 LINE SMOOTH",
"53 647 OFFCURVE",
"49 643 OFFCURVE",
"49 635 CURVE SMOOTH",
"49 473 LINE SMOOTH",
"49 466 OFFCURVE",
"53 463 OFFCURVE",
"61 463 CURVE SMOOTH",
"848 463 LINE SMOOTH"
);
}
);
width = 907;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"776 709 OFFCURVE",
"782 722 OFFCURVE",
"782 736 CURVE SMOOTH",
"782 749 OFFCURVE",
"776 760 OFFCURVE",
"765 768 CURVE SMOOTH",
"212 1208 LINE",
"208 1212 OFFCURVE",
"203 1211 OFFCURVE",
"198 1206 CURVE",
"98 1081 LINE",
"93 1073 OFFCURVE",
"92 1068 OFFCURVE",
"95 1065 CURVE SMOOTH",
"505 733 LINE",
"81 389 LINE SMOOTH",
"77 385 OFFCURVE",
"77 380 OFFCURVE",
"81 373 CURVE",
"184 248 LINE SMOOTH",
"189 243 OFFCURVE",
"194 242 OFFCURVE",
"198 246 CURVE",
"765 698 LINE"
);
}
);
width = 872;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"549 377 OFFCURVE",
"552 380 OFFCURVE",
"552 385 CURVE SMOOTH",
"552 483 LINE SMOOTH",
"552 548 OFFCURVE",
"578 597 OFFCURVE",
"646 666 CURVE",
"747 778 OFFCURVE",
"795 845 OFFCURVE",
"815 915 CURVE SMOOTH",
"824 950 OFFCURVE",
"829 989 OFFCURVE",
"829 1034 CURVE SMOOTH",
"829 1187 OFFCURVE",
"752 1319 OFFCURVE",
"631 1393 CURVE SMOOTH",
"570 1430 OFFCURVE",
"503 1448 OFFCURVE",
"429 1448 CURVE SMOOTH",
"282 1448 OFFCURVE",
"155 1368 OFFCURVE",
"83 1243 CURVE SMOOTH",
"46 1180 OFFCURVE",
"28 1111 OFFCURVE",
"28 1034 CURVE SMOOTH",
"28 885 LINE SMOOTH",
"28 880 OFFCURVE",
"31 877 OFFCURVE",
"36 877 CURVE SMOOTH",
"268 877 LINE SMOOTH",
"273 877 OFFCURVE",
"276 880 OFFCURVE",
"276 885 CURVE SMOOTH",
"276 1034 LINE SMOOTH",
"276 1130 OFFCURVE",
"342 1202 OFFCURVE",
"429 1202 CURVE SMOOTH",
"517 1202 OFFCURVE",
"581 1130 OFFCURVE",
"581 1034 CURVE SMOOTH",
"581 982 OFFCURVE",
"575 949 OFFCURVE",
"536 904 CURVE SMOOTH",
"517 881 OFFCURVE",
"487 850 OFFCURVE",
"446 809 CURVE SMOOTH",
"358 721 OFFCURVE",
"304 605 OFFCURVE",
"304 496 CURVE SMOOTH",
"304 385 LINE SMOOTH",
"304 380 OFFCURVE",
"308 377 OFFCURVE",
"315 377 CURVE SMOOTH",
"542 377 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"549 0 OFFCURVE",
"552 3 OFFCURVE",
"552 10 CURVE SMOOTH",
"552 238 LINE SMOOTH",
"552 243 OFFCURVE",
"549 246 OFFCURVE",
"542 246 CURVE SMOOTH",
"315 246 LINE SMOOTH",
"308 246 OFFCURVE",
"304 243 OFFCURVE",
"304 238 CURVE SMOOTH",
"304 10 LINE SMOOTH",
"304 3 OFFCURVE",
"308 0 OFFCURVE",
"315 0 CURVE SMOOTH",
"542 0 LINE SMOOTH"
);
}
);
width = 890;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"564 -20 OFFCURVE",
"688 -17 OFFCURVE",
"799 -12 CURVE SMOOTH",
"887 -8 OFFCURVE",
"991 -3 OFFCURVE",
"1024 0 CURVE SMOOTH",
"1031 1 OFFCURVE",
"1034 5 OFFCURVE",
"1034 10 CURVE SMOOTH",
"1034 264 LINE SMOOTH",
"1034 271 OFFCURVE",
"1031 274 OFFCURVE",
"1024 274 CURVE SMOOTH",
"837 258 OFFCURVE",
"619 256 OFFCURVE",
"460 256 CURVE SMOOTH",
"376 256 OFFCURVE",
"307 302 OFFCURVE",
"307 391 CURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1131 OFFCURVE",
"374 1199 OFFCURVE",
"458 1202 CURVE SMOOTH",
"589 1202 LINE SMOOTH",
"677 1202 OFFCURVE",
"741 1131 OFFCURVE",
"741 1040 CURVE SMOOTH",
"739 731 LINE SMOOTH",
"739 668 OFFCURVE",
"736 626 OFFCURVE",
"730 603 CURVE SMOOTH",
"724 580 OFFCURVE",
"709 569 OFFCURVE",
"686 569 CURVE SMOOTH",
"667 569 OFFCURVE",
"653 581 OFFCURVE",
"646 606 CURVE SMOOTH",
"639 631 OFFCURVE",
"635 672 OFFCURVE",
"635 731 CURVE SMOOTH",
"635 1006 LINE SMOOTH",
"635 1010 OFFCURVE",
"633 1012 OFFCURVE",
"628 1012 CURVE SMOOTH",
"407 1012 LINE SMOOTH",
"402 1012 OFFCURVE",
"399 1010 OFFCURVE",
"399 1006 CURVE SMOOTH",
"399 737 LINE SMOOTH",
"399 513 OFFCURVE",
"494 350 OFFCURVE",
"678 350 CURVE SMOOTH",
"830 350 OFFCURVE",
"917 424 OFFCURVE",
"958 541 CURVE SMOOTH",
"979 600 OFFCURVE",
"989 665 OFFCURVE",
"989 737 CURVE SMOOTH",
"991 1034 LINE SMOOTH",
"994 1182 OFFCURVE",
"918 1314 OFFCURVE",
"797 1391 CURVE SMOOTH",
"736 1429 OFFCURVE",
"667 1448 OFFCURVE",
"589 1448 CURVE SMOOTH",
"458 1448 LINE SMOOTH",
"314 1448 OFFCURVE",
"186 1365 OFFCURVE",
"114 1244 CURVE SMOOTH",
"77 1183 OFFCURVE",
"59 1115 OFFCURVE",
"59 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 242 OFFCURVE",
"138 111 OFFCURVE",
"259 36 CURVE SMOOTH",
"320 -1 OFFCURVE",
"387 -20 OFFCURVE",
"460 -20 CURVE SMOOTH"
);
}
);
width = 1107;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"12 3 OFFCURVE",
"15 0 OFFCURVE",
"20 0 CURVE SMOOTH",
"248 0 LINE SMOOTH",
"253 0 OFFCURVE",
"257 3 OFFCURVE",
"258 10 CURVE SMOOTH",
"280 160 LINE",
"559 160 LINE",
"581 10 LINE SMOOTH",
"582 3 OFFCURVE",
"586 0 OFFCURVE",
"592 0 CURVE SMOOTH",
"819 0 LINE SMOOTH",
"826 0 OFFCURVE",
"828 3 OFFCURVE",
"827 10 CURVE SMOOTH",
"583 1417 LINE SMOOTH",
"582 1422 OFFCURVE",
"578 1425 OFFCURVE",
"573 1425 CURVE SMOOTH",
"276 1425 LINE SMOOTH",
"271 1425 OFFCURVE",
"267 1422 OFFCURVE",
"266 1417 CURVE SMOOTH",
"12 10 LINE"
);
},
{
closed = 1;
nodes = (
"422 1030 LINE",
"434 954 LINE",
"518 379 LINE",
"321 379 LINE",
"413 954 LINE"
);
}
);
width = 874;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"615 0 OFFCURVE",
"750 84 OFFCURVE",
"827 215 CURVE SMOOTH",
"865 280 OFFCURVE",
"884 353 OFFCURVE",
"884 432 CURVE SMOOTH",
"884 547 OFFCURVE",
"838 654 OFFCURVE",
"759 733 CURVE",
"832 796 OFFCURVE",
"894 903 OFFCURVE",
"894 1020 CURVE SMOOTH",
"894 1164 OFFCURVE",
"819 1294 OFFCURVE",
"696 1369 CURVE SMOOTH",
"634 1406 OFFCURVE",
"564 1425 OFFCURVE",
"487 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"456 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"574 1182 OFFCURVE",
"646 1107 OFFCURVE",
"646 1020 CURVE SMOOTH",
"646 941 OFFCURVE",
"582 860 OFFCURVE",
"487 860 CURVE SMOOTH",
"331 860 LINE",
"331 1182 LINE",
"487 1182 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"555 612 OFFCURVE",
"636 531 OFFCURVE",
"636 432 CURVE SMOOTH",
"636 333 OFFCURVE",
"555 250 OFFCURVE",
"456 250 CURVE SMOOTH",
"329 250 LINE",
"331 612 LINE",
"456 612 LINE SMOOTH"
);
}
);
width = 950;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"609 -20 OFFCURVE",
"733 61 OFFCURVE",
"806 187 CURVE SMOOTH",
"842 250 OFFCURVE",
"860 320 OFFCURVE",
"860 397 CURVE SMOOTH",
"860 492 LINE SMOOTH",
"860 497 OFFCURVE",
"857 500 OFFCURVE",
"852 500 CURVE SMOOTH",
"620 500 LINE SMOOTH",
"615 500 OFFCURVE",
"612 497 OFFCURVE",
"612 492 CURVE SMOOTH",
"612 397 LINE SMOOTH",
"612 310 OFFCURVE",
"546 227 OFFCURVE",
"458 227 CURVE SMOOTH",
"374 227 OFFCURVE",
"307 297 OFFCURVE",
"307 397 CURVE SMOOTH",
"307 1036 LINE SMOOTH",
"307 1124 OFFCURVE",
"361 1202 OFFCURVE",
"458 1202 CURVE SMOOTH",
"546 1202 OFFCURVE",
"612 1127 OFFCURVE",
"612 1036 CURVE SMOOTH",
"612 942 LINE SMOOTH",
"612 937 OFFCURVE",
"615 934 OFFCURVE",
"620 934 CURVE SMOOTH",
"850 934 LINE SMOOTH",
"855 934 OFFCURVE",
"858 937 OFFCURVE",
"858 942 CURVE SMOOTH",
"858 1036 LINE SMOOTH",
"858 1189 OFFCURVE",
"781 1319 OFFCURVE",
"661 1393 CURVE SMOOTH",
"601 1430 OFFCURVE",
"533 1448 OFFCURVE",
"458 1448 CURVE SMOOTH",
"309 1448 OFFCURVE",
"180 1366 OFFCURVE",
"111 1242 CURVE SMOOTH",
"76 1180 OFFCURVE",
"59 1111 OFFCURVE",
"59 1036 CURVE SMOOTH",
"57 397 LINE SMOOTH",
"57 242 OFFCURVE",
"133 111 OFFCURVE",
"255 36 CURVE SMOOTH",
"316 -1 OFFCURVE",
"383 -20 OFFCURVE",
"458 -20 CURVE SMOOTH"
);
}
);
width = 927;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"619 5 OFFCURVE",
"752 87 OFFCURVE",
"829 216 CURVE SMOOTH",
"867 281 OFFCURVE",
"886 353 OFFCURVE",
"886 432 CURVE SMOOTH",
"886 1020 LINE SMOOTH",
"886 1171 OFFCURVE",
"806 1301 OFFCURVE",
"682 1375 CURVE SMOOTH",
"620 1412 OFFCURVE",
"551 1429 OFFCURVE",
"476 1427 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"458 2 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"564 1185 OFFCURVE",
"638 1109 OFFCURVE",
"638 1022 CURVE SMOOTH",
"638 432 LINE SMOOTH",
"638 333 OFFCURVE",
"559 252 OFFCURVE",
"458 252 CURVE SMOOTH",
"331 252 LINE",
"333 1180 LINE",
"476 1182 LINE SMOOTH"
);
}
);
width = 966;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"756 0 OFFCURVE",
"759 3 OFFCURVE",
"759 8 CURVE SMOOTH",
"759 242 LINE SMOOTH",
"759 249 OFFCURVE",
"756 252 OFFCURVE",
"751 252 CURVE SMOOTH",
"329 252 LINE",
"329 610 LINE",
"751 610 LINE SMOOTH",
"756 610 OFFCURVE",
"759 613 OFFCURVE",
"759 618 CURVE SMOOTH",
"757 850 LINE SMOOTH",
"757 855 OFFCURVE",
"754 858 OFFCURVE",
"749 858 CURVE SMOOTH",
"329 858 LINE",
"329 1178 LINE",
"749 1178 LINE SMOOTH",
"754 1178 OFFCURVE",
"757 1181 OFFCURVE",
"757 1186 CURVE SMOOTH",
"757 1415 LINE SMOOTH",
"757 1422 OFFCURVE",
"754 1425 OFFCURVE",
"749 1425 CURVE SMOOTH",
"91 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"751 0 LINE SMOOTH"
);
}
);
width = 860;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"328 0 OFFCURVE",
"331 3 OFFCURVE",
"331 10 CURVE SMOOTH",
"331 610 LINE",
"751 610 LINE SMOOTH",
"758 610 OFFCURVE",
"761 613 OFFCURVE",
"761 618 CURVE SMOOTH",
"759 850 LINE SMOOTH",
"759 857 OFFCURVE",
"756 860 OFFCURVE",
"751 860 CURVE SMOOTH",
"331 860 LINE",
"331 1178 LINE",
"751 1178 LINE SMOOTH",
"756 1178 OFFCURVE",
"759 1181 OFFCURVE",
"759 1186 CURVE SMOOTH",
"759 1417 LINE SMOOTH",
"759 1422 OFFCURVE",
"756 1425 OFFCURVE",
"749 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 862;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"607 -20 OFFCURVE",
"731 59 OFFCURVE",
"804 183 CURVE SMOOTH",
"840 245 OFFCURVE",
"858 314 OFFCURVE",
"858 391 CURVE SMOOTH",
"858 731 LINE SMOOTH",
"858 738 OFFCURVE",
"855 741 OFFCURVE",
"850 741 CURVE SMOOTH",
"467 741 LINE SMOOTH",
"460 741 OFFCURVE",
"456 738 OFFCURVE",
"456 731 CURVE SMOOTH",
"456 502 LINE SMOOTH",
"456 495 OFFCURVE",
"460 492 OFFCURVE",
"467 492 CURVE SMOOTH",
"610 492 LINE",
"610 391 LINE SMOOTH",
"610 299 OFFCURVE",
"544 227 OFFCURVE",
"456 227 CURVE SMOOTH",
"375 227 OFFCURVE",
"305 302 OFFCURVE",
"305 391 CURVE SMOOTH",
"305 1040 LINE SMOOTH",
"305 1128 OFFCURVE",
"377 1204 OFFCURVE",
"456 1204 CURVE SMOOTH",
"544 1204 OFFCURVE",
"610 1128 OFFCURVE",
"610 1024 CURVE SMOOTH",
"610 946 LINE SMOOTH",
"610 941 OFFCURVE",
"613 938 OFFCURVE",
"618 938 CURVE SMOOTH",
"848 938 LINE SMOOTH",
"855 938 OFFCURVE",
"858 941 OFFCURVE",
"858 946 CURVE SMOOTH",
"858 1040 LINE SMOOTH",
"858 1193 OFFCURVE",
"781 1321 OFFCURVE",
"660 1394 CURVE SMOOTH",
"599 1430 OFFCURVE",
"531 1448 OFFCURVE",
"456 1448 CURVE SMOOTH",
"312 1448 OFFCURVE",
"184 1368 OFFCURVE",
"112 1244 CURVE SMOOTH",
"75 1182 OFFCURVE",
"57 1114 OFFCURVE",
"57 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 238 OFFCURVE",
"136 108 OFFCURVE",
"256 35 CURVE SMOOTH",
"316 -2 OFFCURVE",
"383 -20 OFFCURVE",
"456 -20 CURVE SMOOTH"
);
}
);
width = 921;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"329 612 LINE",
"636 612 LINE",
"636 10 LINE SMOOTH",
"636 3 OFFCURVE",
"639 0 OFFCURVE",
"646 0 CURVE SMOOTH",
"876 0 LINE SMOOTH",
"883 0 OFFCURVE",
"886 3 OFFCURVE",
"886 10 CURVE SMOOTH",
"882 1417 LINE SMOOTH",
"882 1422 OFFCURVE",
"879 1425 OFFCURVE",
"872 1425 CURVE SMOOTH",
"644 1425 LINE SMOOTH",
"639 1425 OFFCURVE",
"636 1422 OFFCURVE",
"636 1417 CURVE SMOOTH",
"636 860 LINE",
"329 860 LINE",
"331 1417 LINE SMOOTH",
"331 1422 OFFCURVE",
"328 1425 OFFCURVE",
"321 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 972;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"328 0 OFFCURVE",
"331 3 OFFCURVE",
"331 10 CURVE SMOOTH",
"329 1417 LINE SMOOTH",
"329 1422 OFFCURVE",
"326 1425 OFFCURVE",
"321 1425 CURVE SMOOTH",
"91 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"323 0 LINE SMOOTH"
);
}
);
width = 430;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"565 -20 OFFCURVE",
"690 62 OFFCURVE",
"763 190 CURVE SMOOTH",
"799 253 OFFCURVE",
"817 322 OFFCURVE",
"817 397 CURVE SMOOTH",
"815 1413 LINE SMOOTH",
"815 1420 OFFCURVE",
"812 1423 OFFCURVE",
"807 1423 CURVE SMOOTH",
"577 1423 LINE SMOOTH",
"572 1423 OFFCURVE",
"569 1420 OFFCURVE",
"569 1415 CURVE SMOOTH",
"569 397 LINE SMOOTH",
"569 308 OFFCURVE",
"500 227 OFFCURVE",
"417 227 CURVE SMOOTH",
"328 227 OFFCURVE",
"264 297 OFFCURVE",
"264 397 CURVE SMOOTH",
"264 489 LINE SMOOTH",
"264 496 OFFCURVE",
"261 500 OFFCURVE",
"256 500 CURVE SMOOTH",
"24 500 LINE SMOOTH",
"19 500 OFFCURVE",
"16 497 OFFCURVE",
"16 492 CURVE SMOOTH",
"16 397 LINE SMOOTH",
"16 240 OFFCURVE",
"90 106 OFFCURVE",
"212 34 CURVE SMOOTH",
"273 -2 OFFCURVE",
"341 -20 OFFCURVE",
"417 -20 CURVE SMOOTH"
);
}
);
width = 890;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"329 498 LINE",
"400 610 LINE",
"677 8 LINE",
"678 3 OFFCURVE",
"682 0 OFFCURVE",
"689 0 CURVE SMOOTH",
"939 0 LINE SMOOTH",
"948 0 OFFCURVE",
"952 3 OFFCURVE",
"949 8 CURVE SMOOTH",
"552 852 LINE",
"906 1417 LINE SMOOTH",
"909 1422 OFFCURVE",
"907 1425 OFFCURVE",
"902 1425 CURVE SMOOTH",
"667 1425 LINE SMOOTH",
"662 1425 OFFCURVE",
"657 1422 OFFCURVE",
"652 1417 CURVE",
"331 930 LINE",
"331 1415 LINE SMOOTH",
"331 1422 OFFCURVE",
"328 1425 OFFCURVE",
"323 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1415 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 960;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"758 0 OFFCURVE",
"761 3 OFFCURVE",
"761 10 CURVE SMOOTH",
"761 242 LINE SMOOTH",
"761 249 OFFCURVE",
"758 252 OFFCURVE",
"751 252 CURVE SMOOTH",
"329 252 LINE",
"331 1415 LINE SMOOTH",
"331 1422 OFFCURVE",
"328 1425 OFFCURVE",
"321 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1415 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"751 0 LINE SMOOTH"
);
}
);
width = 813;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"331 1055 LINE",
"544 743 LINE",
"759 1055 LINE",
"761 10 LINE SMOOTH",
"761 3 OFFCURVE",
"764 0 OFFCURVE",
"769 0 CURVE SMOOTH",
"1001 0 LINE SMOOTH",
"1006 0 OFFCURVE",
"1009 3 OFFCURVE",
"1009 10 CURVE SMOOTH",
"1005 1417 LINE SMOOTH",
"1005 1422 OFFCURVE",
"1002 1425 OFFCURVE",
"996 1425 CURVE SMOOTH",
"745 1425 LINE SMOOTH",
"739 1425 OFFCURVE",
"734 1422 OFFCURVE",
"730 1417 CURVE SMOOTH",
"544 1147 LINE",
"357 1417 LINE SMOOTH",
"353 1422 OFFCURVE",
"348 1425 OFFCURVE",
"343 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 1099;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"317 0 OFFCURVE",
"323 5 OFFCURVE",
"323 16 CURVE SMOOTH",
"308 754 LINE",
"663 0 LINE",
"843 0 LINE SMOOTH",
"850 0 OFFCURVE",
"853 4 OFFCURVE",
"853 12 CURVE SMOOTH",
"851 1409 LINE SMOOTH",
"851 1420 OFFCURVE",
"847 1425 OFFCURVE",
"839 1425 CURVE SMOOTH",
"636 1425 LINE SMOOTH",
"624 1425 OFFCURVE",
"618 1420 OFFCURVE",
"618 1409 CURVE SMOOTH",
"628 618 LINE",
"282 1425 LINE",
"97 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"81 1420 OFFCURVE",
"81 1409 CURVE SMOOTH",
"83 14 LINE SMOOTH",
"83 5 OFFCURVE",
"88 0 OFFCURVE",
"99 0 CURVE SMOOTH",
"304 0 LINE SMOOTH"
);
}
);
width = 950;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"608 -20 OFFCURVE",
"735 61 OFFCURVE",
"808 186 CURVE SMOOTH",
"844 248 OFFCURVE",
"862 316 OFFCURVE",
"862 391 CURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1191 OFFCURVE",
"781 1319 OFFCURVE",
"661 1393 CURVE SMOOTH",
"601 1430 OFFCURVE",
"534 1448 OFFCURVE",
"460 1448 CURVE SMOOTH",
"316 1448 OFFCURVE",
"186 1368 OFFCURVE",
"114 1245 CURVE SMOOTH",
"77 1184 OFFCURVE",
"59 1115 OFFCURVE",
"59 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 242 OFFCURVE",
"138 111 OFFCURVE",
"259 36 CURVE SMOOTH",
"320 -1 OFFCURVE",
"387 -20 OFFCURVE",
"460 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"376 227 OFFCURVE",
"307 302 OFFCURVE",
"307 391 CURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1133 OFFCURVE",
"376 1202 OFFCURVE",
"460 1202 CURVE SMOOTH",
"548 1202 OFFCURVE",
"612 1131 OFFCURVE",
"612 1040 CURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 307 OFFCURVE",
"543 227 OFFCURVE",
"460 227 CURVE SMOOTH"
);
}
);
width = 935;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"328 0 OFFCURVE",
"331 3 OFFCURVE",
"331 10 CURVE SMOOTH",
"331 526 LINE",
"487 526 LINE SMOOTH",
"631 526 OFFCURVE",
"760 606 OFFCURVE",
"837 748 CURVE SMOOTH",
"875 819 OFFCURVE",
"894 902 OFFCURVE",
"894 999 CURVE SMOOTH",
"894 1262 OFFCURVE",
"738 1425 OFFCURVE",
"487 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"587 1182 OFFCURVE",
"648 1106 OFFCURVE",
"648 999 CURVE SMOOTH",
"648 866 OFFCURVE",
"574 774 OFFCURVE",
"487 774 CURVE SMOOTH",
"331 774 LINE",
"331 1180 LINE",
"487 1182 LINE SMOOTH"
);
}
);
width = 935;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"760 -135 OFFCURVE",
"765 -135 OFFCURVE",
"770 -131 CURVE",
"931 31 LINE",
"936 35 OFFCURVE",
"935 40 OFFCURVE",
"929 45 CURVE",
"802 174 LINE",
"838 237 OFFCURVE",
"862 312 OFFCURVE",
"862 391 CURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1193 OFFCURVE",
"781 1321 OFFCURVE",
"660 1394 CURVE SMOOTH",
"599 1430 OFFCURVE",
"533 1448 OFFCURVE",
"460 1448 CURVE SMOOTH",
"311 1448 OFFCURVE",
"184 1366 OFFCURVE",
"113 1242 CURVE SMOOTH",
"77 1180 OFFCURVE",
"59 1113 OFFCURVE",
"59 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 242 OFFCURVE",
"137 108 OFFCURVE",
"260 35 CURVE SMOOTH",
"321 -2 OFFCURVE",
"388 -20 OFFCURVE",
"460 -20 CURVE SMOOTH",
"513 -20 OFFCURVE",
"565 -9 OFFCURVE",
"614 12 CURVE",
"755 -131 LINE"
);
},
{
closed = 1;
nodes = (
"384 227 OFFCURVE",
"307 292 OFFCURVE",
"307 391 CURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1125 OFFCURVE",
"368 1202 OFFCURVE",
"460 1202 CURVE SMOOTH",
"548 1202 OFFCURVE",
"612 1128 OFFCURVE",
"612 1040 CURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 312 OFFCURVE",
"553 227 OFFCURVE",
"460 227 CURVE SMOOTH"
);
}
);
width = 954;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"331 612 LINE",
"466 612 LINE SMOOTH",
"567 612 OFFCURVE",
"646 529 OFFCURVE",
"646 430 CURVE SMOOTH",
"646 6 LINE SMOOTH",
"646 2 OFFCURVE",
"649 0 OFFCURVE",
"654 0 CURVE SMOOTH",
"886 0 LINE SMOOTH",
"893 0 OFFCURVE",
"896 3 OFFCURVE",
"896 10 CURVE SMOOTH",
"894 430 LINE SMOOTH",
"894 541 OFFCURVE",
"857 637 OFFCURVE",
"783 719 CURVE",
"816 746 OFFCURVE",
"861 803 OFFCURVE",
"892 884 CURVE SMOOTH",
"907 924 OFFCURVE",
"915 969 OFFCURVE",
"915 1020 CURVE SMOOTH",
"915 1173 OFFCURVE",
"835 1299 OFFCURVE",
"711 1371 CURVE SMOOTH",
"649 1407 OFFCURVE",
"581 1425 OFFCURVE",
"507 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"595 1180 OFFCURVE",
"669 1107 OFFCURVE",
"669 1020 CURVE SMOOTH",
"669 929 OFFCURVE",
"591 858 OFFCURVE",
"507 858 CURVE SMOOTH",
"331 858 LINE",
"331 1180 LINE",
"507 1180 LINE SMOOTH"
);
}
);
width = 987;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"577 -20 OFFCURVE",
"704 57 OFFCURVE",
"777 181 CURVE SMOOTH",
"813 243 OFFCURVE",
"831 313 OFFCURVE",
"831 391 CURVE SMOOTH",
"831 552 OFFCURVE",
"746 659 OFFCURVE",
"610 735 CURVE SMOOTH",
"593 744 OFFCURVE",
"429 832 OFFCURVE",
"409 844 CURVE SMOOTH",
"308 899 OFFCURVE",
"276 953 OFFCURVE",
"276 1042 CURVE SMOOTH",
"276 1130 OFFCURVE",
"345 1204 OFFCURVE",
"429 1204 CURVE SMOOTH",
"512 1204 OFFCURVE",
"581 1138 OFFCURVE",
"581 1042 CURVE SMOOTH",
"583 874 LINE SMOOTH",
"583 869 OFFCURVE",
"586 866 OFFCURVE",
"591 866 CURVE SMOOTH",
"821 866 LINE SMOOTH",
"826 866 OFFCURVE",
"829 869 OFFCURVE",
"829 874 CURVE SMOOTH",
"829 1042 LINE SMOOTH",
"829 1193 OFFCURVE",
"750 1319 OFFCURVE",
"629 1392 CURVE SMOOTH",
"568 1428 OFFCURVE",
"502 1446 OFFCURVE",
"429 1446 CURVE SMOOTH",
"288 1446 OFFCURVE",
"160 1369 OFFCURVE",
"86 1248 CURVE SMOOTH",
"49 1187 OFFCURVE",
"30 1119 OFFCURVE",
"30 1042 CURVE SMOOTH",
"30 877 OFFCURVE",
"102 741 OFFCURVE",
"251 653 CURVE SMOOTH",
"292 630 OFFCURVE",
"336 605 OFFCURVE",
"383 580 CURVE SMOOTH",
"429 554 OFFCURVE",
"463 535 OFFCURVE",
"485 522 CURVE SMOOTH",
"550 485 OFFCURVE",
"583 442 OFFCURVE",
"583 391 CURVE SMOOTH",
"583 304 OFFCURVE",
"514 227 OFFCURVE",
"429 227 CURVE SMOOTH",
"345 227 OFFCURVE",
"276 302 OFFCURVE",
"276 391 CURVE SMOOTH",
"276 485 LINE SMOOTH",
"276 492 OFFCURVE",
"273 496 OFFCURVE",
"268 496 CURVE SMOOTH",
"38 496 LINE SMOOTH",
"31 496 OFFCURVE",
"28 492 OFFCURVE",
"28 485 CURVE SMOOTH",
"28 391 LINE SMOOTH",
"28 242 OFFCURVE",
"107 111 OFFCURVE",
"228 36 CURVE SMOOTH",
"289 -1 OFFCURVE",
"356 -20 OFFCURVE",
"429 -20 CURVE SMOOTH"
);
}
);
width = 892;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"523 0 OFFCURVE",
"526 3 OFFCURVE",
"526 10 CURVE SMOOTH",
"524 1178 LINE",
"793 1178 LINE SMOOTH",
"798 1178 OFFCURVE",
"801 1181 OFFCURVE",
"801 1188 CURVE SMOOTH",
"801 1417 LINE SMOOTH",
"801 1422 OFFCURVE",
"797 1425 OFFCURVE",
"790 1425 CURVE SMOOTH",
"12 1425 LINE SMOOTH",
"7 1425 OFFCURVE",
"4 1422 OFFCURVE",
"4 1417 CURVE SMOOTH",
"2 1188 LINE SMOOTH",
"2 1181 OFFCURVE",
"5 1178 OFFCURVE",
"12 1178 CURVE SMOOTH",
"278 1178 LINE",
"278 10 LINE SMOOTH",
"278 3 OFFCURVE",
"281 0 OFFCURVE",
"287 0 CURVE SMOOTH",
"518 0 LINE SMOOTH"
);
}
);
width = 819;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"609 -20 OFFCURVE",
"735 59 OFFCURVE",
"808 185 CURVE SMOOTH",
"844 248 OFFCURVE",
"862 317 OFFCURVE",
"862 393 CURVE SMOOTH",
"858 1417 LINE SMOOTH",
"858 1422 OFFCURVE",
"855 1425 OFFCURVE",
"850 1425 CURVE SMOOTH",
"620 1425 LINE SMOOTH",
"615 1425 OFFCURVE",
"612 1422 OFFCURVE",
"612 1417 CURVE SMOOTH",
"612 393 LINE SMOOTH",
"612 301 OFFCURVE",
"546 227 OFFCURVE",
"458 227 CURVE SMOOTH",
"374 227 OFFCURVE",
"307 301 OFFCURVE",
"307 393 CURVE SMOOTH",
"307 1417 LINE SMOOTH",
"307 1422 OFFCURVE",
"304 1425 OFFCURVE",
"299 1425 CURVE SMOOTH",
"69 1425 LINE SMOOTH",
"64 1425 OFFCURVE",
"61 1422 OFFCURVE",
"61 1417 CURVE SMOOTH",
"57 393 LINE SMOOTH",
"57 244 OFFCURVE",
"135 111 OFFCURVE",
"258 36 CURVE SMOOTH",
"319 -1 OFFCURVE",
"386 -20 OFFCURVE",
"458 -20 CURVE SMOOTH"
);
}
);
width = 942;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"564 0 OFFCURVE",
"568 3 OFFCURVE",
"569 10 CURVE SMOOTH",
"847 1417 LINE",
"849 1422 OFFCURVE",
"846 1425 OFFCURVE",
"839 1425 CURVE SMOOTH",
"610 1425 LINE SMOOTH",
"605 1425 OFFCURVE",
"601 1422 OFFCURVE",
"600 1417 CURVE SMOOTH",
"436 479 LINE",
"268 1417 LINE SMOOTH",
"267 1422 OFFCURVE",
"263 1425 OFFCURVE",
"258 1425 CURVE SMOOTH",
"26 1425 LINE SMOOTH",
"19 1425 OFFCURVE",
"17 1422 OFFCURVE",
"18 1417 CURVE SMOOTH",
"301 10 LINE SMOOTH",
"302 3 OFFCURVE",
"306 0 OFFCURVE",
"311 0 CURVE SMOOTH",
"559 0 LINE SMOOTH"
);
}
);
width = 886;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"523 0 OFFCURVE",
"527 3 OFFCURVE",
"528 10 CURVE SMOOTH",
"632 745 LINE",
"737 10 LINE",
"740 3 OFFCURVE",
"743 0 OFFCURVE",
"747 0 CURVE SMOOTH",
"995 0 LINE",
"999 3 LINE SMOOTH",
"1002 5 OFFCURVE",
"1004 7 OFFCURVE",
"1005 10 CURVE",
"1249 1417 LINE SMOOTH",
"1250 1422 OFFCURVE",
"1248 1425 OFFCURVE",
"1241 1425 CURVE SMOOTH",
"1013 1425 LINE SMOOTH",
"1008 1425 OFFCURVE",
"1004 1422 OFFCURVE",
"1003 1417 CURVE SMOOTH",
"870 492 LINE",
"737 1417 LINE SMOOTH",
"736 1422 OFFCURVE",
"732 1425 OFFCURVE",
"727 1425 CURVE SMOOTH",
"542 1425 LINE SMOOTH",
"535 1425 OFFCURVE",
"531 1422 OFFCURVE",
"530 1417 CURVE SMOOTH",
"395 492 LINE",
"264 1417 LINE SMOOTH",
"263 1422 OFFCURVE",
"259 1425 OFFCURVE",
"254 1425 CURVE SMOOTH",
"24 1425 LINE SMOOTH",
"19 1425 OFFCURVE",
"17 1422 OFFCURVE",
"18 1417 CURVE SMOOTH",
"260 10 LINE SMOOTH",
"261 3 OFFCURVE",
"265 0 OFFCURVE",
"270 0 CURVE SMOOTH",
"518 0 LINE SMOOTH"
);
}
);
width = 1288;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"255 0 OFFCURVE",
"259 3 OFFCURVE",
"260 10 CURVE",
"401 539 LINE",
"540 10 LINE",
"543 3 OFFCURVE",
"548 0 OFFCURVE",
"553 0 CURVE SMOOTH",
"782 0 LINE SMOOTH",
"789 0 OFFCURVE",
"791 3 OFFCURVE",
"788 10 CURVE",
"557 743 LINE",
"786 1417 LINE",
"787 1422 OFFCURVE",
"785 1425 OFFCURVE",
"780 1425 CURVE SMOOTH",
"553 1425 LINE SMOOTH",
"546 1425 OFFCURVE",
"541 1422 OFFCURVE",
"540 1417 CURVE SMOOTH",
"401 930 LINE",
"264 1417 LINE SMOOTH",
"263 1422 OFFCURVE",
"259 1425 OFFCURVE",
"252 1425 CURVE SMOOTH",
"22 1425 LINE SMOOTH",
"17 1425 OFFCURVE",
"15 1422 OFFCURVE",
"16 1417 CURVE",
"246 741 LINE",
"12 10 LINE",
"11 3 OFFCURVE",
"13 0 OFFCURVE",
"18 0 CURVE SMOOTH",
"248 0 LINE SMOOTH"
);
}
);
width = 827;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"513 0 OFFCURVE",
"516 3 OFFCURVE",
"516 8 CURVE SMOOTH",
"514 598 LINE",
"791 1417 LINE",
"792 1422 OFFCURVE",
"790 1425 OFFCURVE",
"785 1425 CURVE SMOOTH",
"555 1425 LINE SMOOTH",
"550 1425 OFFCURVE",
"546 1422 OFFCURVE",
"545 1417 CURVE SMOOTH",
"391 866 LINE",
"240 1417 LINE SMOOTH",
"239 1422 OFFCURVE",
"235 1425 OFFCURVE",
"228 1425 CURVE SMOOTH",
"0 1425 LINE SMOOTH",
"-5 1425 OFFCURVE",
"-7 1422 OFFCURVE",
"-6 1417 CURVE",
"268 590 LINE",
"266 8 LINE SMOOTH",
"266 3 OFFCURVE",
"268 0 OFFCURVE",
"273 0 CURVE SMOOTH",
"508 0 LINE SMOOTH"
);
}
);
width = 821;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"797 0 OFFCURVE",
"800 3 OFFCURVE",
"800 10 CURVE SMOOTH",
"798 229 LINE SMOOTH",
"798 236 OFFCURVE",
"795 240 OFFCURVE",
"790 240 CURVE SMOOTH",
"297 240 LINE",
"796 1194 LINE",
"796 1415 LINE SMOOTH",
"796 1422 OFFCURVE",
"793 1425 OFFCURVE",
"786 1425 CURVE SMOOTH",
"45 1425 LINE SMOOTH",
"39 1425 OFFCURVE",
"36 1422 OFFCURVE",
"36 1415 CURVE SMOOTH",
"36 1200 LINE SMOOTH",
"36 1195 OFFCURVE",
"39 1192 OFFCURVE",
"45 1192 CURVE SMOOTH",
"520 1192 LINE",
"18 233 LINE",
"16 10 LINE SMOOTH",
"16 3 OFFCURVE",
"19 0 OFFCURVE",
"26 0 CURVE SMOOTH",
"790 0 LINE SMOOTH"
);
}
);
width = 847;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"602 0 OFFCURVE",
"605 3 OFFCURVE",
"605 8 CURVE SMOOTH",
"605 231 LINE SMOOTH",
"605 237 OFFCURVE",
"602 240 OFFCURVE",
"595 240 CURVE SMOOTH",
"313 240 LINE",
"313 1186 LINE",
"595 1186 LINE SMOOTH",
"602 1186 OFFCURVE",
"605 1189 OFFCURVE",
"605 1194 CURVE SMOOTH",
"605 1417 LINE SMOOTH",
"605 1422 OFFCURVE",
"602 1425 OFFCURVE",
"595 1425 CURVE SMOOTH",
"83 1425 LINE SMOOTH",
"78 1425 OFFCURVE",
"75 1422 OFFCURVE",
"75 1417 CURVE SMOOTH",
"75 8 LINE SMOOTH",
"75 3 OFFCURVE",
"78 0 OFFCURVE",
"83 0 CURVE SMOOTH",
"595 0 LINE SMOOTH"
);
}
);
width = 684;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"551 0 OFFCURVE",
"554 3 OFFCURVE",
"553 10 CURVE SMOOTH",
"294 1417 LINE SMOOTH",
"293 1422 OFFCURVE",
"289 1425 OFFCURVE",
"284 1425 CURVE SMOOTH",
"71 1425 LINE SMOOTH",
"64 1425 OFFCURVE",
"62 1422 OFFCURVE",
"63 1417 CURVE SMOOTH",
"319 10 LINE SMOOTH",
"320 3 OFFCURVE",
"324 0 OFFCURVE",
"329 0 CURVE SMOOTH",
"544 0 LINE SMOOTH"
);
}
);
width = 616;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"604 0 OFFCURVE",
"607 3 OFFCURVE",
"607 8 CURVE SMOOTH",
"607 1417 LINE SMOOTH",
"607 1422 OFFCURVE",
"604 1425 OFFCURVE",
"599 1425 CURVE SMOOTH",
"87 1425 LINE SMOOTH",
"80 1425 OFFCURVE",
"77 1422 OFFCURVE",
"77 1417 CURVE SMOOTH",
"77 1194 LINE SMOOTH",
"77 1189 OFFCURVE",
"80 1186 OFFCURVE",
"87 1186 CURVE SMOOTH",
"370 1186 LINE",
"370 240 LINE",
"87 240 LINE SMOOTH",
"80 240 OFFCURVE",
"77 237 OFFCURVE",
"77 231 CURVE SMOOTH",
"77 8 LINE SMOOTH",
"77 3 OFFCURVE",
"80 0 OFFCURVE",
"87 0 CURVE SMOOTH",
"599 0 LINE SMOOTH"
);
}
);
width = 684;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"409 1401 LINE",
"400 1412 OFFCURVE",
"386 1417 OFFCURVE",
"365 1417 CURVE SMOOTH",
"344 1417 OFFCURVE",
"328 1412 OFFCURVE",
"317 1401 CURVE",
"38 965 LINE",
"188 856 LINE",
"362 1141 LINE",
"538 856 LINE",
"687 967 LINE"
);
}
);
width = 753;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1030 -215 OFFCURVE",
"1033 -212 OFFCURVE",
"1033 -207 CURVE SMOOTH",
"1033 2 LINE SMOOTH",
"1033 7 OFFCURVE",
"1030 10 OFFCURVE",
"1025 10 CURVE SMOOTH",
"89 10 LINE SMOOTH",
"84 10 OFFCURVE",
"81 7 OFFCURVE",
"81 2 CURVE SMOOTH",
"81 -207 LINE SMOOTH",
"81 -212 OFFCURVE",
"84 -215 OFFCURVE",
"89 -215 CURVE SMOOTH",
"1025 -215 LINE SMOOTH"
);
}
);
width = 1120;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"496 1534 OFFCURVE",
"498 1537 OFFCURVE",
"497 1542 CURVE",
"333 1896 LINE",
"332 1902 OFFCURVE",
"328 1905 OFFCURVE",
"323 1905 CURVE SMOOTH",
"89 1905 LINE SMOOTH",
"81 1905 OFFCURVE",
"78 1902 OFFCURVE",
"81 1896 CURVE SMOOTH",
"272 1542 LINE SMOOTH",
"275 1537 OFFCURVE",
"279 1534 OFFCURVE",
"284 1534 CURVE SMOOTH",
"489 1534 LINE SMOOTH"
);
}
);
width = 583;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"12 3 OFFCURVE",
"15 0 OFFCURVE",
"20 0 CURVE SMOOTH",
"248 0 LINE SMOOTH",
"253 0 OFFCURVE",
"257 3 OFFCURVE",
"258 10 CURVE SMOOTH",
"280 160 LINE",
"559 160 LINE",
"581 10 LINE SMOOTH",
"582 3 OFFCURVE",
"586 0 OFFCURVE",
"592 0 CURVE SMOOTH",
"819 0 LINE SMOOTH",
"826 0 OFFCURVE",
"828 3 OFFCURVE",
"827 10 CURVE SMOOTH",
"583 1417 LINE SMOOTH",
"582 1422 OFFCURVE",
"578 1425 OFFCURVE",
"573 1425 CURVE SMOOTH",
"276 1425 LINE SMOOTH",
"271 1425 OFFCURVE",
"267 1422 OFFCURVE",
"266 1417 CURVE SMOOTH",
"12 10 LINE"
);
},
{
closed = 1;
nodes = (
"422 1030 LINE",
"434 954 LINE",
"518 379 LINE",
"321 379 LINE",
"413 954 LINE"
);
}
);
width = 874;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"615 0 OFFCURVE",
"750 84 OFFCURVE",
"827 215 CURVE SMOOTH",
"865 280 OFFCURVE",
"884 353 OFFCURVE",
"884 432 CURVE SMOOTH",
"884 547 OFFCURVE",
"838 654 OFFCURVE",
"759 733 CURVE",
"832 796 OFFCURVE",
"894 903 OFFCURVE",
"894 1020 CURVE SMOOTH",
"894 1164 OFFCURVE",
"819 1294 OFFCURVE",
"696 1369 CURVE SMOOTH",
"634 1406 OFFCURVE",
"564 1425 OFFCURVE",
"487 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"456 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"574 1182 OFFCURVE",
"646 1107 OFFCURVE",
"646 1020 CURVE SMOOTH",
"646 941 OFFCURVE",
"582 860 OFFCURVE",
"487 860 CURVE SMOOTH",
"331 860 LINE",
"331 1182 LINE",
"487 1182 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"555 612 OFFCURVE",
"636 531 OFFCURVE",
"636 432 CURVE SMOOTH",
"636 333 OFFCURVE",
"555 250 OFFCURVE",
"456 250 CURVE SMOOTH",
"329 250 LINE",
"331 612 LINE",
"456 612 LINE SMOOTH"
);
}
);
width = 950;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"609 -20 OFFCURVE",
"733 61 OFFCURVE",
"806 187 CURVE SMOOTH",
"842 250 OFFCURVE",
"860 320 OFFCURVE",
"860 397 CURVE SMOOTH",
"860 492 LINE SMOOTH",
"860 497 OFFCURVE",
"857 500 OFFCURVE",
"852 500 CURVE SMOOTH",
"620 500 LINE SMOOTH",
"615 500 OFFCURVE",
"612 497 OFFCURVE",
"612 492 CURVE SMOOTH",
"612 397 LINE SMOOTH",
"612 310 OFFCURVE",
"546 227 OFFCURVE",
"458 227 CURVE SMOOTH",
"374 227 OFFCURVE",
"307 297 OFFCURVE",
"307 397 CURVE SMOOTH",
"307 1036 LINE SMOOTH",
"307 1124 OFFCURVE",
"361 1202 OFFCURVE",
"458 1202 CURVE SMOOTH",
"546 1202 OFFCURVE",
"612 1127 OFFCURVE",
"612 1036 CURVE SMOOTH",
"612 942 LINE SMOOTH",
"612 937 OFFCURVE",
"615 934 OFFCURVE",
"620 934 CURVE SMOOTH",
"850 934 LINE SMOOTH",
"855 934 OFFCURVE",
"858 937 OFFCURVE",
"858 942 CURVE SMOOTH",
"858 1036 LINE SMOOTH",
"858 1189 OFFCURVE",
"781 1319 OFFCURVE",
"661 1393 CURVE SMOOTH",
"601 1430 OFFCURVE",
"533 1448 OFFCURVE",
"458 1448 CURVE SMOOTH",
"309 1448 OFFCURVE",
"180 1366 OFFCURVE",
"111 1242 CURVE SMOOTH",
"76 1180 OFFCURVE",
"59 1111 OFFCURVE",
"59 1036 CURVE SMOOTH",
"57 397 LINE SMOOTH",
"57 242 OFFCURVE",
"133 111 OFFCURVE",
"255 36 CURVE SMOOTH",
"316 -1 OFFCURVE",
"383 -20 OFFCURVE",
"458 -20 CURVE SMOOTH"
);
}
);
width = 927;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"619 5 OFFCURVE",
"752 87 OFFCURVE",
"829 216 CURVE SMOOTH",
"867 281 OFFCURVE",
"886 353 OFFCURVE",
"886 432 CURVE SMOOTH",
"886 1020 LINE SMOOTH",
"886 1171 OFFCURVE",
"806 1301 OFFCURVE",
"682 1375 CURVE SMOOTH",
"620 1412 OFFCURVE",
"551 1429 OFFCURVE",
"476 1427 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"458 2 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"564 1185 OFFCURVE",
"638 1109 OFFCURVE",
"638 1022 CURVE SMOOTH",
"638 432 LINE SMOOTH",
"638 333 OFFCURVE",
"559 252 OFFCURVE",
"458 252 CURVE SMOOTH",
"331 252 LINE",
"333 1180 LINE",
"476 1182 LINE SMOOTH"
);
}
);
width = 966;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"756 0 OFFCURVE",
"759 3 OFFCURVE",
"759 8 CURVE SMOOTH",
"759 242 LINE SMOOTH",
"759 249 OFFCURVE",
"756 252 OFFCURVE",
"751 252 CURVE SMOOTH",
"329 252 LINE",
"329 610 LINE",
"751 610 LINE SMOOTH",
"756 610 OFFCURVE",
"759 613 OFFCURVE",
"759 618 CURVE SMOOTH",
"757 850 LINE SMOOTH",
"757 855 OFFCURVE",
"754 858 OFFCURVE",
"749 858 CURVE SMOOTH",
"329 858 LINE",
"329 1178 LINE",
"749 1178 LINE SMOOTH",
"754 1178 OFFCURVE",
"757 1181 OFFCURVE",
"757 1186 CURVE SMOOTH",
"757 1415 LINE SMOOTH",
"757 1422 OFFCURVE",
"754 1425 OFFCURVE",
"749 1425 CURVE SMOOTH",
"91 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"751 0 LINE SMOOTH"
);
}
);
width = 860;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"328 0 OFFCURVE",
"331 3 OFFCURVE",
"331 10 CURVE SMOOTH",
"331 610 LINE",
"751 610 LINE SMOOTH",
"758 610 OFFCURVE",
"761 613 OFFCURVE",
"761 618 CURVE SMOOTH",
"759 850 LINE SMOOTH",
"759 857 OFFCURVE",
"756 860 OFFCURVE",
"751 860 CURVE SMOOTH",
"331 860 LINE",
"331 1178 LINE",
"751 1178 LINE SMOOTH",
"756 1178 OFFCURVE",
"759 1181 OFFCURVE",
"759 1186 CURVE SMOOTH",
"759 1417 LINE SMOOTH",
"759 1422 OFFCURVE",
"756 1425 OFFCURVE",
"749 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 862;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"607 -20 OFFCURVE",
"731 59 OFFCURVE",
"804 183 CURVE SMOOTH",
"840 245 OFFCURVE",
"858 314 OFFCURVE",
"858 391 CURVE SMOOTH",
"858 731 LINE SMOOTH",
"858 738 OFFCURVE",
"855 741 OFFCURVE",
"850 741 CURVE SMOOTH",
"467 741 LINE SMOOTH",
"460 741 OFFCURVE",
"456 738 OFFCURVE",
"456 731 CURVE SMOOTH",
"456 502 LINE SMOOTH",
"456 495 OFFCURVE",
"460 492 OFFCURVE",
"467 492 CURVE SMOOTH",
"610 492 LINE",
"610 391 LINE SMOOTH",
"610 299 OFFCURVE",
"544 227 OFFCURVE",
"456 227 CURVE SMOOTH",
"375 227 OFFCURVE",
"305 302 OFFCURVE",
"305 391 CURVE SMOOTH",
"305 1040 LINE SMOOTH",
"305 1128 OFFCURVE",
"377 1204 OFFCURVE",
"456 1204 CURVE SMOOTH",
"544 1204 OFFCURVE",
"610 1128 OFFCURVE",
"610 1024 CURVE SMOOTH",
"610 946 LINE SMOOTH",
"610 941 OFFCURVE",
"613 938 OFFCURVE",
"618 938 CURVE SMOOTH",
"848 938 LINE SMOOTH",
"855 938 OFFCURVE",
"858 941 OFFCURVE",
"858 946 CURVE SMOOTH",
"858 1040 LINE SMOOTH",
"858 1193 OFFCURVE",
"781 1321 OFFCURVE",
"660 1394 CURVE SMOOTH",
"599 1430 OFFCURVE",
"531 1448 OFFCURVE",
"456 1448 CURVE SMOOTH",
"312 1448 OFFCURVE",
"184 1368 OFFCURVE",
"112 1244 CURVE SMOOTH",
"75 1182 OFFCURVE",
"57 1114 OFFCURVE",
"57 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 238 OFFCURVE",
"136 108 OFFCURVE",
"256 35 CURVE SMOOTH",
"316 -2 OFFCURVE",
"383 -20 OFFCURVE",
"456 -20 CURVE SMOOTH"
);
}
);
width = 921;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"329 612 LINE",
"636 612 LINE",
"636 10 LINE SMOOTH",
"636 3 OFFCURVE",
"639 0 OFFCURVE",
"646 0 CURVE SMOOTH",
"876 0 LINE SMOOTH",
"883 0 OFFCURVE",
"886 3 OFFCURVE",
"886 10 CURVE SMOOTH",
"882 1417 LINE SMOOTH",
"882 1422 OFFCURVE",
"879 1425 OFFCURVE",
"872 1425 CURVE SMOOTH",
"644 1425 LINE SMOOTH",
"639 1425 OFFCURVE",
"636 1422 OFFCURVE",
"636 1417 CURVE SMOOTH",
"636 860 LINE",
"329 860 LINE",
"331 1417 LINE SMOOTH",
"331 1422 OFFCURVE",
"328 1425 OFFCURVE",
"321 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 972;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"328 0 OFFCURVE",
"331 3 OFFCURVE",
"331 10 CURVE SMOOTH",
"329 1417 LINE SMOOTH",
"329 1422 OFFCURVE",
"326 1425 OFFCURVE",
"321 1425 CURVE SMOOTH",
"91 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"323 0 LINE SMOOTH"
);
}
);
width = 430;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"565 -20 OFFCURVE",
"690 62 OFFCURVE",
"763 190 CURVE SMOOTH",
"799 253 OFFCURVE",
"817 322 OFFCURVE",
"817 397 CURVE SMOOTH",
"815 1413 LINE SMOOTH",
"815 1420 OFFCURVE",
"812 1423 OFFCURVE",
"807 1423 CURVE SMOOTH",
"577 1423 LINE SMOOTH",
"572 1423 OFFCURVE",
"569 1420 OFFCURVE",
"569 1415 CURVE SMOOTH",
"569 397 LINE SMOOTH",
"569 308 OFFCURVE",
"500 227 OFFCURVE",
"417 227 CURVE SMOOTH",
"328 227 OFFCURVE",
"264 297 OFFCURVE",
"264 397 CURVE SMOOTH",
"264 489 LINE SMOOTH",
"264 496 OFFCURVE",
"261 500 OFFCURVE",
"256 500 CURVE SMOOTH",
"24 500 LINE SMOOTH",
"19 500 OFFCURVE",
"16 497 OFFCURVE",
"16 492 CURVE SMOOTH",
"16 397 LINE SMOOTH",
"16 240 OFFCURVE",
"90 106 OFFCURVE",
"212 34 CURVE SMOOTH",
"273 -2 OFFCURVE",
"341 -20 OFFCURVE",
"417 -20 CURVE SMOOTH"
);
}
);
width = 890;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"329 498 LINE",
"400 610 LINE",
"677 8 LINE",
"678 3 OFFCURVE",
"682 0 OFFCURVE",
"689 0 CURVE SMOOTH",
"939 0 LINE SMOOTH",
"948 0 OFFCURVE",
"952 3 OFFCURVE",
"949 8 CURVE SMOOTH",
"552 852 LINE",
"906 1417 LINE SMOOTH",
"909 1422 OFFCURVE",
"907 1425 OFFCURVE",
"902 1425 CURVE SMOOTH",
"667 1425 LINE SMOOTH",
"662 1425 OFFCURVE",
"657 1422 OFFCURVE",
"652 1417 CURVE",
"331 930 LINE",
"331 1415 LINE SMOOTH",
"331 1422 OFFCURVE",
"328 1425 OFFCURVE",
"323 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1415 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 960;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"758 0 OFFCURVE",
"761 3 OFFCURVE",
"761 10 CURVE SMOOTH",
"761 242 LINE SMOOTH",
"761 249 OFFCURVE",
"758 252 OFFCURVE",
"751 252 CURVE SMOOTH",
"329 252 LINE",
"331 1415 LINE SMOOTH",
"331 1422 OFFCURVE",
"328 1425 OFFCURVE",
"321 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"83 1422 OFFCURVE",
"83 1415 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"751 0 LINE SMOOTH"
);
}
);
width = 813;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"331 1055 LINE",
"544 743 LINE",
"759 1055 LINE",
"761 10 LINE SMOOTH",
"761 3 OFFCURVE",
"764 0 OFFCURVE",
"769 0 CURVE SMOOTH",
"1001 0 LINE SMOOTH",
"1006 0 OFFCURVE",
"1009 3 OFFCURVE",
"1009 10 CURVE SMOOTH",
"1005 1417 LINE SMOOTH",
"1005 1422 OFFCURVE",
"1002 1425 OFFCURVE",
"996 1425 CURVE SMOOTH",
"745 1425 LINE SMOOTH",
"739 1425 OFFCURVE",
"734 1422 OFFCURVE",
"730 1417 CURVE SMOOTH",
"544 1147 LINE",
"357 1417 LINE SMOOTH",
"353 1422 OFFCURVE",
"348 1425 OFFCURVE",
"343 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
}
);
width = 1099;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"317 0 OFFCURVE",
"323 5 OFFCURVE",
"323 16 CURVE SMOOTH",
"308 754 LINE",
"663 0 LINE",
"843 0 LINE SMOOTH",
"850 0 OFFCURVE",
"853 4 OFFCURVE",
"853 12 CURVE SMOOTH",
"851 1409 LINE SMOOTH",
"851 1420 OFFCURVE",
"847 1425 OFFCURVE",
"839 1425 CURVE SMOOTH",
"636 1425 LINE SMOOTH",
"624 1425 OFFCURVE",
"618 1420 OFFCURVE",
"618 1409 CURVE SMOOTH",
"628 618 LINE",
"282 1425 LINE",
"97 1425 LINE SMOOTH",
"86 1425 OFFCURVE",
"81 1420 OFFCURVE",
"81 1409 CURVE SMOOTH",
"83 14 LINE SMOOTH",
"83 5 OFFCURVE",
"88 0 OFFCURVE",
"99 0 CURVE SMOOTH",
"304 0 LINE SMOOTH"
);
}
);
width = 950;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"608 -20 OFFCURVE",
"735 61 OFFCURVE",
"808 186 CURVE SMOOTH",
"844 248 OFFCURVE",
"862 316 OFFCURVE",
"862 391 CURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1191 OFFCURVE",
"781 1319 OFFCURVE",
"661 1393 CURVE SMOOTH",
"601 1430 OFFCURVE",
"534 1448 OFFCURVE",
"460 1448 CURVE SMOOTH",
"316 1448 OFFCURVE",
"186 1368 OFFCURVE",
"114 1245 CURVE SMOOTH",
"77 1184 OFFCURVE",
"59 1115 OFFCURVE",
"59 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 242 OFFCURVE",
"138 111 OFFCURVE",
"259 36 CURVE SMOOTH",
"320 -1 OFFCURVE",
"387 -20 OFFCURVE",
"460 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"376 227 OFFCURVE",
"307 302 OFFCURVE",
"307 391 CURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1133 OFFCURVE",
"376 1202 OFFCURVE",
"460 1202 CURVE SMOOTH",
"548 1202 OFFCURVE",
"612 1131 OFFCURVE",
"612 1040 CURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 307 OFFCURVE",
"543 227 OFFCURVE",
"460 227 CURVE SMOOTH"
);
}
);
width = 935;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"328 0 OFFCURVE",
"331 3 OFFCURVE",
"331 10 CURVE SMOOTH",
"331 526 LINE",
"487 526 LINE SMOOTH",
"631 526 OFFCURVE",
"760 606 OFFCURVE",
"837 748 CURVE SMOOTH",
"875 819 OFFCURVE",
"894 902 OFFCURVE",
"894 999 CURVE SMOOTH",
"894 1262 OFFCURVE",
"738 1425 OFFCURVE",
"487 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"91 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"587 1182 OFFCURVE",
"648 1106 OFFCURVE",
"648 999 CURVE SMOOTH",
"648 866 OFFCURVE",
"574 774 OFFCURVE",
"487 774 CURVE SMOOTH",
"331 774 LINE",
"331 1180 LINE",
"487 1182 LINE SMOOTH"
);
}
);
width = 952;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"760 -135 OFFCURVE",
"765 -135 OFFCURVE",
"770 -131 CURVE",
"931 31 LINE",
"936 35 OFFCURVE",
"935 40 OFFCURVE",
"929 45 CURVE",
"802 174 LINE",
"838 237 OFFCURVE",
"862 312 OFFCURVE",
"862 391 CURVE SMOOTH",
"860 1040 LINE SMOOTH",
"860 1193 OFFCURVE",
"781 1321 OFFCURVE",
"660 1394 CURVE SMOOTH",
"599 1430 OFFCURVE",
"533 1448 OFFCURVE",
"460 1448 CURVE SMOOTH",
"311 1448 OFFCURVE",
"184 1366 OFFCURVE",
"113 1242 CURVE SMOOTH",
"77 1180 OFFCURVE",
"59 1113 OFFCURVE",
"59 1040 CURVE SMOOTH",
"57 391 LINE SMOOTH",
"57 242 OFFCURVE",
"137 108 OFFCURVE",
"260 35 CURVE SMOOTH",
"321 -2 OFFCURVE",
"388 -20 OFFCURVE",
"460 -20 CURVE SMOOTH",
"513 -20 OFFCURVE",
"565 -9 OFFCURVE",
"614 12 CURVE",
"755 -131 LINE"
);
},
{
closed = 1;
nodes = (
"384 227 OFFCURVE",
"307 292 OFFCURVE",
"307 391 CURVE SMOOTH",
"307 1040 LINE SMOOTH",
"307 1125 OFFCURVE",
"368 1202 OFFCURVE",
"460 1202 CURVE SMOOTH",
"548 1202 OFFCURVE",
"612 1128 OFFCURVE",
"612 1040 CURVE SMOOTH",
"614 391 LINE SMOOTH",
"614 312 OFFCURVE",
"553 227 OFFCURVE",
"460 227 CURVE SMOOTH"
);
}
);
width = 954;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"326 0 OFFCURVE",
"329 3 OFFCURVE",
"329 10 CURVE SMOOTH",
"331 612 LINE",
"466 612 LINE SMOOTH",
"567 612 OFFCURVE",
"646 529 OFFCURVE",
"646 430 CURVE SMOOTH",
"646 6 LINE SMOOTH",
"646 2 OFFCURVE",
"649 0 OFFCURVE",
"654 0 CURVE SMOOTH",
"886 0 LINE SMOOTH",
"893 0 OFFCURVE",
"896 3 OFFCURVE",
"896 10 CURVE SMOOTH",
"894 430 LINE SMOOTH",
"894 541 OFFCURVE",
"857 637 OFFCURVE",
"783 719 CURVE",
"816 746 OFFCURVE",
"861 803 OFFCURVE",
"892 884 CURVE SMOOTH",
"907 924 OFFCURVE",
"915 969 OFFCURVE",
"915 1020 CURVE SMOOTH",
"915 1173 OFFCURVE",
"835 1299 OFFCURVE",
"711 1371 CURVE SMOOTH",
"649 1407 OFFCURVE",
"581 1425 OFFCURVE",
"507 1425 CURVE SMOOTH",
"93 1425 LINE SMOOTH",
"88 1425 OFFCURVE",
"85 1422 OFFCURVE",
"85 1417 CURVE SMOOTH",
"81 10 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"321 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"595 1180 OFFCURVE",
"669 1107 OFFCURVE",
"669 1020 CURVE SMOOTH",
"669 929 OFFCURVE",
"591 858 OFFCURVE",
"507 858 CURVE SMOOTH",
"331 858 LINE",
"331 1180 LINE",
"507 1180 LINE SMOOTH"
);
}
);
width = 987;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"577 -20 OFFCURVE",
"704 57 OFFCURVE",
"777 181 CURVE SMOOTH",
"813 243 OFFCURVE",
"831 313 OFFCURVE",
"831 391 CURVE SMOOTH",
"831 552 OFFCURVE",
"746 659 OFFCURVE",
"610 735 CURVE SMOOTH",
"593 744 OFFCURVE",
"429 832 OFFCURVE",
"409 844 CURVE SMOOTH",
"308 899 OFFCURVE",
"276 953 OFFCURVE",
"276 1042 CURVE SMOOTH",
"276 1130 OFFCURVE",
"345 1204 OFFCURVE",
"429 1204 CURVE SMOOTH",
"512 1204 OFFCURVE",
"581 1138 OFFCURVE",
"581 1042 CURVE SMOOTH",
"583 874 LINE SMOOTH",
"583 869 OFFCURVE",
"586 866 OFFCURVE",
"591 866 CURVE SMOOTH",
"821 866 LINE SMOOTH",
"826 866 OFFCURVE",
"829 869 OFFCURVE",
"829 874 CURVE SMOOTH",
"829 1042 LINE SMOOTH",
"829 1193 OFFCURVE",
"750 1319 OFFCURVE",
"629 1392 CURVE SMOOTH",
"568 1428 OFFCURVE",
"502 1446 OFFCURVE",
"429 1446 CURVE SMOOTH",
"288 1446 OFFCURVE",
"160 1369 OFFCURVE",
"86 1248 CURVE SMOOTH",
"49 1187 OFFCURVE",
"30 1119 OFFCURVE",
"30 1042 CURVE SMOOTH",
"30 877 OFFCURVE",
"102 741 OFFCURVE",
"251 653 CURVE SMOOTH",
"292 630 OFFCURVE",
"336 605 OFFCURVE",
"383 580 CURVE SMOOTH",
"429 554 OFFCURVE",
"463 535 OFFCURVE",
"485 522 CURVE SMOOTH",
"550 485 OFFCURVE",
"583 442 OFFCURVE",
"583 391 CURVE SMOOTH",
"583 304 OFFCURVE",
"514 227 OFFCURVE",
"429 227 CURVE SMOOTH",
"345 227 OFFCURVE",
"276 302 OFFCURVE",
"276 391 CURVE SMOOTH",
"276 485 LINE SMOOTH",
"276 492 OFFCURVE",
"273 496 OFFCURVE",
"268 496 CURVE SMOOTH",
"38 496 LINE SMOOTH",
"31 496 OFFCURVE",
"28 492 OFFCURVE",
"28 485 CURVE SMOOTH",
"28 391 LINE SMOOTH",
"28 242 OFFCURVE",
"107 111 OFFCURVE",
"228 36 CURVE SMOOTH",
"289 -1 OFFCURVE",
"356 -20 OFFCURVE",
"429 -20 CURVE SMOOTH"
);
}
);
width = 892;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"523 0 OFFCURVE",
"526 3 OFFCURVE",
"526 10 CURVE SMOOTH",
"524 1178 LINE",
"793 1178 LINE SMOOTH",
"798 1178 OFFCURVE",
"801 1181 OFFCURVE",
"801 1188 CURVE SMOOTH",
"801 1417 LINE SMOOTH",
"801 1422 OFFCURVE",
"797 1425 OFFCURVE",
"790 1425 CURVE SMOOTH",
"12 1425 LINE SMOOTH",
"7 1425 OFFCURVE",
"4 1422 OFFCURVE",
"4 1417 CURVE SMOOTH",
"2 1188 LINE SMOOTH",
"2 1181 OFFCURVE",
"5 1178 OFFCURVE",
"12 1178 CURVE SMOOTH",
"278 1178 LINE",
"278 10 LINE SMOOTH",
"278 3 OFFCURVE",
"281 0 OFFCURVE",
"287 0 CURVE SMOOTH",
"518 0 LINE SMOOTH"
);
}
);
width = 819;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"609 -20 OFFCURVE",
"735 59 OFFCURVE",
"808 185 CURVE SMOOTH",
"844 248 OFFCURVE",
"862 317 OFFCURVE",
"862 393 CURVE SMOOTH",
"858 1417 LINE SMOOTH",
"858 1422 OFFCURVE",
"855 1425 OFFCURVE",
"850 1425 CURVE SMOOTH",
"620 1425 LINE SMOOTH",
"615 1425 OFFCURVE",
"612 1422 OFFCURVE",
"612 1417 CURVE SMOOTH",
"612 393 LINE SMOOTH",
"612 301 OFFCURVE",
"546 227 OFFCURVE",
"458 227 CURVE SMOOTH",
"374 227 OFFCURVE",
"307 301 OFFCURVE",
"307 393 CURVE SMOOTH",
"307 1417 LINE SMOOTH",
"307 1422 OFFCURVE",
"304 1425 OFFCURVE",
"299 1425 CURVE SMOOTH",
"69 1425 LINE SMOOTH",
"64 1425 OFFCURVE",
"61 1422 OFFCURVE",
"61 1417 CURVE SMOOTH",
"57 393 LINE SMOOTH",
"57 244 OFFCURVE",
"135 111 OFFCURVE",
"258 36 CURVE SMOOTH",
"319 -1 OFFCURVE",
"386 -20 OFFCURVE",
"458 -20 CURVE SMOOTH"
);
}
);
width = 942;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"564 0 OFFCURVE",
"568 3 OFFCURVE",
"569 10 CURVE SMOOTH",
"847 1417 LINE",
"849 1422 OFFCURVE",
"846 1425 OFFCURVE",
"839 1425 CURVE SMOOTH",
"610 1425 LINE SMOOTH",
"605 1425 OFFCURVE",
"601 1422 OFFCURVE",
"600 1417 CURVE SMOOTH",
"436 479 LINE",
"268 1417 LINE SMOOTH",
"267 1422 OFFCURVE",
"263 1425 OFFCURVE",
"258 1425 CURVE SMOOTH",
"26 1425 LINE SMOOTH",
"19 1425 OFFCURVE",
"17 1422 OFFCURVE",
"18 1417 CURVE SMOOTH",
"301 10 LINE SMOOTH",
"302 3 OFFCURVE",
"306 0 OFFCURVE",
"311 0 CURVE SMOOTH",
"559 0 LINE SMOOTH"
);
}
);
width = 886;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"523 0 OFFCURVE",
"527 3 OFFCURVE",
"528 10 CURVE SMOOTH",
"632 745 LINE",
"737 10 LINE",
"740 3 OFFCURVE",
"743 0 OFFCURVE",
"747 0 CURVE SMOOTH",
"995 0 LINE",
"999 3 LINE SMOOTH",
"1002 5 OFFCURVE",
"1004 7 OFFCURVE",
"1005 10 CURVE",
"1249 1417 LINE SMOOTH",
"1250 1422 OFFCURVE",
"1248 1425 OFFCURVE",
"1241 1425 CURVE SMOOTH",
"1013 1425 LINE SMOOTH",
"1008 1425 OFFCURVE",
"1004 1422 OFFCURVE",
"1003 1417 CURVE SMOOTH",
"870 492 LINE",
"737 1417 LINE SMOOTH",
"736 1422 OFFCURVE",
"732 1425 OFFCURVE",
"727 1425 CURVE SMOOTH",
"542 1425 LINE SMOOTH",
"535 1425 OFFCURVE",
"531 1422 OFFCURVE",
"530 1417 CURVE SMOOTH",
"395 492 LINE",
"264 1417 LINE SMOOTH",
"263 1422 OFFCURVE",
"259 1425 OFFCURVE",
"254 1425 CURVE SMOOTH",
"24 1425 LINE SMOOTH",
"19 1425 OFFCURVE",
"17 1422 OFFCURVE",
"18 1417 CURVE SMOOTH",
"260 10 LINE SMOOTH",
"261 3 OFFCURVE",
"265 0 OFFCURVE",
"270 0 CURVE SMOOTH",
"518 0 LINE SMOOTH"
);
}
);
width = 1288;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"255 0 OFFCURVE",
"259 3 OFFCURVE",
"260 10 CURVE",
"401 539 LINE",
"540 10 LINE",
"543 3 OFFCURVE",
"548 0 OFFCURVE",
"553 0 CURVE SMOOTH",
"782 0 LINE SMOOTH",
"789 0 OFFCURVE",
"791 3 OFFCURVE",
"788 10 CURVE",
"557 743 LINE",
"786 1417 LINE",
"787 1422 OFFCURVE",
"785 1425 OFFCURVE",
"780 1425 CURVE SMOOTH",
"553 1425 LINE SMOOTH",
"546 1425 OFFCURVE",
"541 1422 OFFCURVE",
"540 1417 CURVE SMOOTH",
"401 930 LINE",
"264 1417 LINE SMOOTH",
"263 1422 OFFCURVE",
"259 1425 OFFCURVE",
"252 1425 CURVE SMOOTH",
"22 1425 LINE SMOOTH",
"17 1425 OFFCURVE",
"15 1422 OFFCURVE",
"16 1417 CURVE",
"246 741 LINE",
"12 10 LINE",
"11 3 OFFCURVE",
"13 0 OFFCURVE",
"18 0 CURVE SMOOTH",
"248 0 LINE SMOOTH"
);
}
);
width = 827;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"513 0 OFFCURVE",
"516 3 OFFCURVE",
"516 8 CURVE SMOOTH",
"514 598 LINE",
"791 1417 LINE",
"792 1422 OFFCURVE",
"790 1425 OFFCURVE",
"785 1425 CURVE SMOOTH",
"555 1425 LINE SMOOTH",
"550 1425 OFFCURVE",
"546 1422 OFFCURVE",
"545 1417 CURVE SMOOTH",
"391 866 LINE",
"240 1417 LINE SMOOTH",
"239 1422 OFFCURVE",
"235 1425 OFFCURVE",
"228 1425 CURVE SMOOTH",
"0 1425 LINE SMOOTH",
"-5 1425 OFFCURVE",
"-7 1422 OFFCURVE",
"-6 1417 CURVE",
"268 590 LINE",
"266 8 LINE SMOOTH",
"266 3 OFFCURVE",
"268 0 OFFCURVE",
"273 0 CURVE SMOOTH",
"508 0 LINE SMOOTH"
);
}
);
width = 821;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"797 0 OFFCURVE",
"800 3 OFFCURVE",
"800 10 CURVE SMOOTH",
"798 229 LINE SMOOTH",
"798 236 OFFCURVE",
"795 240 OFFCURVE",
"790 240 CURVE SMOOTH",
"297 240 LINE",
"796 1194 LINE",
"796 1415 LINE SMOOTH",
"796 1422 OFFCURVE",
"793 1425 OFFCURVE",
"786 1425 CURVE SMOOTH",
"45 1425 LINE SMOOTH",
"39 1425 OFFCURVE",
"36 1422 OFFCURVE",
"36 1415 CURVE SMOOTH",
"36 1200 LINE SMOOTH",
"36 1195 OFFCURVE",
"39 1192 OFFCURVE",
"45 1192 CURVE SMOOTH",
"520 1192 LINE",
"18 233 LINE",
"16 10 LINE SMOOTH",
"16 3 OFFCURVE",
"19 0 OFFCURVE",
"26 0 CURVE SMOOTH",
"790 0 LINE SMOOTH"
);
}
);
width = 847;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"750 0 OFFCURVE",
"753 3 OFFCURVE",
"753 8 CURVE SMOOTH",
"753 231 LINE SMOOTH",
"753 237 OFFCURVE",
"750 240 OFFCURVE",
"743 240 CURVE SMOOTH",
"460 240 LINE",
"460 1186 LINE",
"743 1186 LINE SMOOTH",
"750 1186 OFFCURVE",
"753 1189 OFFCURVE",
"753 1194 CURVE SMOOTH",
"753 1417 LINE SMOOTH",
"753 1422 OFFCURVE",
"750 1425 OFFCURVE",
"743 1425 CURVE SMOOTH",
"231 1425 LINE SMOOTH",
"226 1425 OFFCURVE",
"223 1422 OFFCURVE",
"223 1417 CURVE SMOOTH",
"223 848 LINE",
"24 848 LINE SMOOTH",
"17 848 OFFCURVE",
"14 845 OFFCURVE",
"14 840 CURVE SMOOTH",
"14 616 LINE SMOOTH",
"14 611 OFFCURVE",
"17 608 OFFCURVE",
"24 608 CURVE SMOOTH",
"223 608 LINE",
"223 8 LINE SMOOTH",
"223 3 OFFCURVE",
"226 0 OFFCURVE",
"231 0 CURVE SMOOTH",
"743 0 LINE SMOOTH"
);
}
);
width = 831;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"317 0 OFFCURVE",
"319 3 OFFCURVE",
"319 8 CURVE SMOOTH",
"319 1417 LINE SMOOTH",
"319 1422 OFFCURVE",
"316 1425 OFFCURVE",
"310 1425 CURVE SMOOTH",
"89 1425 LINE SMOOTH",
"84 1425 OFFCURVE",
"81 1422 OFFCURVE",
"81 1417 CURVE SMOOTH",
"81 8 LINE SMOOTH",
"81 3 OFFCURVE",
"84 0 OFFCURVE",
"89 0 CURVE SMOOTH",
"314 0 LINE SMOOTH"
);
}
);
width = 405;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"604 0 OFFCURVE",
"607 3 OFFCURVE",
"607 8 CURVE SMOOTH",
"607 608 LINE",
"806 608 LINE SMOOTH",
"813 608 OFFCURVE",
"816 611 OFFCURVE",
"816 616 CURVE SMOOTH",
"816 840 LINE SMOOTH",
"816 845 OFFCURVE",
"813 848 OFFCURVE",
"806 848 CURVE SMOOTH",
"607 848 LINE",
"607 1417 LINE SMOOTH",
"607 1422 OFFCURVE",
"604 1425 OFFCURVE",
"599 1425 CURVE SMOOTH",
"87 1425 LINE SMOOTH",
"80 1425 OFFCURVE",
"77 1422 OFFCURVE",
"77 1417 CURVE SMOOTH",
"77 1194 LINE SMOOTH",
"77 1189 OFFCURVE",
"80 1186 OFFCURVE",
"87 1186 CURVE SMOOTH",
"370 1186 LINE",
"370 240 LINE",
"87 240 LINE SMOOTH",
"80 240 OFFCURVE",
"77 237 OFFCURVE",
"77 231 CURVE SMOOTH",
"77 8 LINE SMOOTH",
"77 3 OFFCURVE",
"80 0 OFFCURVE",
"87 0 CURVE SMOOTH",
"599 0 LINE SMOOTH"
);
}
);
width = 831;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"703 625 OFFCURVE",
"781 665 OFFCURVE",
"826 742 CURVE SMOOTH",
"848 780 OFFCURVE",
"859 827 OFFCURVE",
"859 883 CURVE SMOOTH",
"859 888 OFFCURVE",
"856 891 OFFCURVE",
"851 891 CURVE SMOOTH",
"667 891 LINE SMOOTH",
"662 891 OFFCURVE",
"659 888 OFFCURVE",
"659 883 CURVE SMOOTH",
"659 831 OFFCURVE",
"626 807 OFFCURVE",
"587 807 CURVE SMOOTH",
"554 807 OFFCURVE",
"492 845 OFFCURVE",
"444 867 CURVE SMOOTH",
"414 880 OFFCURVE",
"379 887 OFFCURVE",
"339 887 CURVE SMOOTH",
"230 887 OFFCURVE",
"151 828 OFFCURVE",
"109 753 CURVE SMOOTH",
"88 715 OFFCURVE",
"77 678 OFFCURVE",
"77 643 CURVE SMOOTH",
"77 638 OFFCURVE",
"80 635 OFFCURVE",
"85 635 CURVE SMOOTH",
"270 635 LINE SMOOTH",
"275 635 OFFCURVE",
"278 638 OFFCURVE",
"278 643 CURVE SMOOTH",
"278 682 OFFCURVE",
"306 711 OFFCURVE",
"358 711 CURVE SMOOTH",
"399 711 OFFCURVE",
"465 670 OFFCURVE",
"518 647 CURVE SMOOTH",
"550 632 OFFCURVE",
"585 625 OFFCURVE",
"624 625 CURVE SMOOTH"
);
}
);
width = 972;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = guillemotleft;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"493 209 OFFCURVE",
"498 210 OFFCURVE",
"504 215 CURVE",
"643 360 LINE SMOOTH",
"650 367 OFFCURVE",
"650 373 OFFCURVE",
"645 377 CURVE SMOOTH",
"319 694 LINE",
"649 999 LINE",
"653 1004 OFFCURVE",
"653 1009 OFFCURVE",
"649 1016 CURVE",
"514 1169 LINE",
"510 1176 OFFCURVE",
"505 1177 OFFCURVE",
"500 1171 CURVE SMOOTH",
"65 727 LINE SMOOTH",
"44 706 OFFCURVE",
"49 670 OFFCURVE",
"65 655 CURVE SMOOTH",
"489 213 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1005 209 OFFCURVE",
"1010 210 OFFCURVE",
"1016 215 CURVE",
"1155 360 LINE SMOOTH",
"1162 367 OFFCURVE",
"1162 373 OFFCURVE",
"1157 377 CURVE SMOOTH",
"831 694 LINE",
"1161 999 LINE",
"1165 1004 OFFCURVE",
"1165 1009 OFFCURVE",
"1161 1016 CURVE",
"1026 1169 LINE",
"1022 1176 OFFCURVE",
"1017 1177 OFFCURVE",
"1012 1171 CURVE SMOOTH",
"577 727 LINE SMOOTH",
"556 706 OFFCURVE",
"561 670 OFFCURVE",
"577 655 CURVE SMOOTH",
"1001 213 LINE SMOOTH"
);
}
);
width = 1243;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"686 680 OFFCURVE",
"681 716 OFFCURVE",
"665 729 CURVE",
"241 1171 LINE SMOOTH",
"237 1176 OFFCURVE",
"232 1175 OFFCURVE",
"227 1169 CURVE SMOOTH",
"87 1024 LINE SMOOTH",
"80 1017 OFFCURVE",
"80 1012 OFFCURVE",
"85 1008 CURVE SMOOTH",
"411 690 LINE",
"81 385 LINE SMOOTH",
"77 381 OFFCURVE",
"77 376 OFFCURVE",
"81 369 CURVE",
"216 215 LINE",
"220 208 OFFCURVE",
"225 208 OFFCURVE",
"231 213 CURVE",
"665 657 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1198 680 OFFCURVE",
"1193 716 OFFCURVE",
"1177 729 CURVE",
"753 1171 LINE SMOOTH",
"749 1176 OFFCURVE",
"744 1175 OFFCURVE",
"739 1169 CURVE SMOOTH",
"599 1024 LINE SMOOTH",
"592 1017 OFFCURVE",
"592 1012 OFFCURVE",
"597 1008 CURVE SMOOTH",
"923 690 LINE",
"593 385 LINE SMOOTH",
"589 381 OFFCURVE",
"589 376 OFFCURVE",
"593 369 CURVE",
"728 215 LINE",
"732 208 OFFCURVE",
"737 208 OFFCURVE",
"743 213 CURVE",
"1177 657 LINE SMOOTH"
);
}
);
width = 1243;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = uni1780;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE",
"1148 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1148 1017 OFFCURVE",
"1065 1100 OFFCURVE",
"899 1100 CURVE SMOOTH",
"399 1100 LINE SMOOTH",
"232 1100 OFFCURVE",
"149 1017 OFFCURVE",
"149 850 CURVE SMOOTH",
"149 0 LINE",
"499 0 LINE",
"499 850 LINE",
"798 850 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni1780;
unicode = 1780;
},
{
glyphname = uni1781;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 932 OFFCURVE",
"199 899 OFFCURVE",
"299 899 CURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1065 0 OFFCURVE",
"1148 83 OFFCURVE",
"1148 250 CURVE SMOOTH",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE",
"575 586 LINE"
);
}
);
width = 1298;
}
);
note = uni1781;
unicode = 1781;
},
{
glyphname = uni1782;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE",
"1148 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1148 1017 OFFCURVE",
"1065 1100 OFFCURVE",
"899 1100 CURVE SMOOTH",
"399 1100 LINE SMOOTH",
"232 1100 OFFCURVE",
"149 1017 OFFCURVE",
"149 850 CURVE SMOOTH",
"149 0 LINE",
"499 0 LINE",
"499 27 LINE",
"731 455 LINE",
"598 526 LINE",
"499 342 LINE",
"499 850 LINE",
"798 850 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni1782;
unicode = 1782;
},
{
glyphname = uni1783;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"1548 0 LINE SMOOTH",
"1715 0 OFFCURVE",
"1798 83 OFFCURVE",
"1798 250 CURVE SMOOTH",
"1798 999 LINE",
"1509 1249 LINE",
"1798 1249 LINE",
"1798 1499 LINE",
"1499 1499 LINE",
"1298 1157 LINE",
"1450 999 LINE",
"1450 250 LINE",
"1149 250 LINE",
"1149 999 LINE",
"860 1249 LINE",
"1149 1249 LINE",
"1149 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"799 999 LINE",
"799 250 LINE",
"500 250 LINE",
"500 1499 LINE",
"49 1499 LINE",
"49 1249 LINE",
"149 1249 LINE",
"149 250 LINE SMOOTH"
);
}
);
width = 1949;
}
);
note = uni1783;
unicode = 1783;
},
{
glyphname = uni1784;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"98 999 LINE",
"98 801 LINE",
"147 801 LINE",
"147 0 LINE",
"497 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1149 0 LINE",
"1149 999 LINE",
"979 1106 LINE",
"998 1110 OFFCURVE",
"1017 1117 OFFCURVE",
"1036 1126 CURVE SMOOTH",
"1107 1162 OFFCURVE",
"1149 1229 OFFCURVE",
"1149 1300 CURVE SMOOTH",
"1149 1499 LINE",
"788 1499 LINE",
"788 1300 LINE",
"497 1300 LINE",
"497 1599 LINE",
"147 1599 LINE",
"147 1300 LINE SMOOTH",
"147 1167 OFFCURVE",
"230 1100 OFFCURVE",
"397 1100 CURVE SMOOTH",
"798 1100 LINE",
"798 293 LINE",
"649 438 LINE",
"497 293 LINE",
"497 999 LINE"
);
}
);
width = 1298;
}
);
note = uni1784;
unicode = 1784;
},
{
glyphname = uni1785;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni1785;
unicode = 1785;
},
{
glyphname = uni1786;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 270 LINE",
"500 500 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 500 LINE",
"49 500 LINE",
"49 250 LINE",
"150 250 LINE",
"150 0 LINE",
"500 0 LINE",
"500 229 LINE",
"801 0 LINE",
"1151 0 LINE",
"1151 1100 LINE"
);
}
);
width = 1298;
}
);
note = uni1786;
unicode = 1786;
},
{
glyphname = uni1787;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 0 LINE",
"500 0 LINE",
"649 145 LINE",
"801 0 LINE",
"1151 0 LINE",
"1151 1100 LINE",
"801 1100 LINE",
"801 293 LINE",
"649 438 LINE",
"500 293 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1599 LINE",
"801 1599 LINE",
"801 1499 LINE",
"201 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni1787;
unicode = 1787;
},
{
glyphname = uni1788;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 250 LINE SMOOTH",
"798 83 OFFCURVE",
"881 0 OFFCURVE",
"1048 0 CURVE SMOOTH",
"2199 0 LINE SMOOTH",
"2366 0 OFFCURVE",
"2449 83 OFFCURVE",
"2449 250 CURVE SMOOTH",
"2449 999 LINE",
"2158 1249 LINE",
"2449 1249 LINE",
"2449 1499 LINE",
"2150 1499 LINE",
"1949 1157 LINE",
"2099 999 LINE",
"2099 250 LINE",
"1800 250 LINE",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 1249 LINE SMOOTH"
);
}
);
width = 2598;
}
);
note = uni1788;
unicode = 1788;
},
{
glyphname = uni1789;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1449 1249 LINE",
"1449 0 LINE",
"1800 0 LINE",
"1800 1499 LINE",
"1200 1499 LINE",
"1200 1249 LINE"
);
},
{
closed = 1;
nodes = (
"564 -451 OFFCURVE",
"768 -534 OFFCURVE",
"1011 -700 CURVE",
"1599 -700 LINE SMOOTH",
"1733 -700 OFFCURVE",
"1800 -633 OFFCURVE",
"1800 -500 CURVE SMOOTH",
"1800 -299 LINE SMOOTH",
"1800 -166 OFFCURVE",
"1733 -100 OFFCURVE",
"1599 -100 CURVE SMOOTH",
"1300 -100 LINE",
"1300 -350 LINE",
"1449 -350 LINE",
"1449 -500 LINE",
"1153 -500 LINE",
"882 -301 OFFCURVE",
"631 -201 OFFCURVE",
"399 -201 CURVE SMOOTH",
"149 -201 LINE",
"149 -451 LINE",
"399 -451 LINE SMOOTH"
);
}
);
width = 1949;
}
);
note = uni1789;
unicode = 1789;
},
{
glyphname = uni178A;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1082 1151 OFFCURVE",
"1148 1201 OFFCURVE",
"1148 1300 CURVE SMOOTH",
"1148 1599 LINE",
"798 1599 LINE",
"798 1350 LINE",
"499 1350 LINE",
"499 1401 LINE",
"548 1401 LINE",
"548 1499 LINE",
"149 1499 LINE",
"149 1151 LINE",
"950 1151 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"499 293 LINE",
"499 1051 LINE",
"149 1051 LINE",
"149 0 LINE",
"499 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1051 LINE",
"798 1051 LINE",
"798 293 LINE",
"649 438 LINE"
);
}
);
width = 1298;
}
);
note = uni178A;
unicode = 178A;
},
{
glyphname = uni178B;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"999 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"799 999 LINE",
"799 250 LINE",
"500 250 LINE",
"500 1499 LINE",
"49 1499 LINE",
"49 1249 LINE",
"149 1249 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1066 0 OFFCURVE",
"1149 83 OFFCURVE",
"1149 250 CURVE SMOOTH",
"1149 999 LINE",
"860 1249 LINE",
"1149 1249 LINE",
"1149 1599 LINE",
"999 1599 LINE"
);
}
);
width = 1298;
}
);
note = uni178B;
unicode = 178B;
},
{
glyphname = uni178C;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 0 LINE",
"499 0 LINE",
"798 150 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 350 LINE",
"499 201 LINE",
"499 559 LINE",
"575 586 LINE",
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE",
"149 899 LINE",
"548 899 LINE",
"548 1051 LINE",
"499 1051 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 1051 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni178C;
unicode = 178C;
},
{
glyphname = uni178D;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 500 LINE",
"700 500 LINE",
"700 250 LINE",
"798 250 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 229 LINE",
"1449 0 LINE",
"1800 0 LINE",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 270 LINE",
"1148 500 LINE",
"1148 1499 LINE"
);
}
);
width = 1949;
}
);
note = uni178D;
unicode = 178D;
},
{
glyphname = uni178E;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1800 1249 LINE",
"2099 1249 LINE",
"2099 0 LINE",
"2449 0 LINE",
"2449 1249 LINE SMOOTH",
"2449 1416 OFFCURVE",
"2366 1499 OFFCURVE",
"2199 1499 CURVE SMOOTH",
"1699 1499 LINE SMOOTH",
"1532 1499 OFFCURVE",
"1449 1416 OFFCURVE",
"1449 1249 CURVE SMOOTH",
"1449 293 LINE",
"1300 438 LINE",
"1148 293 LINE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 0 LINE",
"1148 0 LINE",
"1300 145 LINE",
"1449 0 LINE",
"1800 0 LINE"
);
}
);
width = 2598;
}
);
note = uni178E;
unicode = 178E;
},
{
glyphname = uni178F;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE",
"1148 1499 LINE"
);
},
{
closed = 1;
nodes = (
"798 850 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH",
"1148 1017 OFFCURVE",
"1065 1100 OFFCURVE",
"899 1100 CURVE SMOOTH",
"399 1100 LINE SMOOTH",
"232 1100 OFFCURVE",
"149 1017 OFFCURVE",
"149 850 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 850 LINE"
);
}
);
width = 1298;
}
);
note = uni178F;
unicode = 178F;
},
{
glyphname = uni1790;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1599 LINE",
"801 1599 LINE",
"801 1499 LINE",
"201 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni1790;
unicode = 1790;
},
{
glyphname = uni1791;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 824 OFFCURVE",
"266 711 OFFCURVE",
"499 659 CURVE SMOOTH",
"798 586 LINE",
"798 250 LINE",
"499 250 LINE",
"499 551 LINE",
"149 621 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1065 0 OFFCURVE",
"1148 83 OFFCURVE",
"1148 250 CURVE SMOOTH",
"1148 489 LINE",
"1046 539 LINE",
"1114 560 OFFCURVE",
"1148 595 OFFCURVE",
"1148 643 CURVE SMOOTH",
"1148 850 LINE",
"917 850 LINE",
"887 825 OFFCURVE",
"865 806 OFFCURVE",
"851 791 CURVE",
"714 821 LINE SMOOTH",
"571 855 OFFCURVE",
"499 914 OFFCURVE",
"499 999 CURVE SMOOTH",
"499 1249 LINE",
"798 1249 LINE",
"798 1151 LINE",
"749 1151 LINE",
"749 950 LINE",
"999 950 LINE SMOOTH",
"1098 950 OFFCURVE",
"1148 984 OFFCURVE",
"1148 1051 CURVE SMOOTH",
"1148 1249 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni1791;
unicode = 1791;
},
{
glyphname = uni1792;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 0 LINE",
"500 0 LINE",
"649 145 LINE",
"801 0 LINE",
"1151 0 LINE",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 293 LINE",
"649 438 LINE",
"500 293 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE"
);
}
);
width = 1298;
}
);
note = uni1792;
unicode = 1792;
},
{
glyphname = uni1793;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 899 LINE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 836 OFFCURVE",
"341 701 OFFCURVE",
"724 596 CURVE SMOOTH",
"798 575 LINE",
"798 293 LINE",
"649 438 LINE",
"499 293 LINE",
"499 600 LINE",
"149 600 LINE",
"149 0 LINE",
"499 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 698 LINE",
"798 780 LINE",
"599 835 OFFCURVE",
"499 908 OFFCURVE",
"499 999 CURVE SMOOTH",
"499 1249 LINE",
"798 1249 LINE",
"798 1100 LINE",
"749 1100 LINE",
"749 899 LINE"
);
}
);
width = 1298;
}
);
note = uni1793;
unicode = 1793;
},
{
glyphname = uni1794;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni1794;
unicode = 1794;
},
{
glyphname = uni1795;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"801 0 LINE",
"1151 0 LINE",
"1151 1100 LINE",
"700 1100 LINE",
"700 899 LINE",
"801 899 LINE",
"801 293 LINE",
"649 438 LINE",
"500 293 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1599 LINE",
"801 1599 LINE",
"801 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 0 LINE",
"500 0 LINE",
"649 145 LINE"
);
}
);
width = 1298;
}
);
note = uni1795;
unicode = 1795;
},
{
glyphname = uni1796;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni1796;
unicode = 1796;
},
{
glyphname = uni1797;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 1249 LINE",
"1149 1249 LINE",
"1149 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1149 1017 OFFCURVE",
"1066 1100 OFFCURVE",
"899 1100 CURVE SMOOTH",
"399 1100 LINE SMOOTH",
"232 1100 OFFCURVE",
"149 1017 OFFCURVE",
"149 850 CURVE SMOOTH",
"149 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 850 LINE",
"799 850 LINE",
"799 0 LINE",
"1149 0 LINE",
"1149 850 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni1797;
unicode = 1797;
},
{
glyphname = uni1798;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 250 LINE",
"500 250 LINE"
);
}
);
width = 1298;
}
);
note = uni1798;
unicode = 1798;
},
{
glyphname = uni1799;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"1550 0 LINE SMOOTH",
"1717 0 OFFCURVE",
"1800 83 OFFCURVE",
"1800 250 CURVE SMOOTH",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 999 LINE",
"860 1249 LINE",
"1148 1249 LINE",
"1148 1499 LINE",
"849 1499 LINE",
"649 1157 LINE",
"798 999 LINE",
"798 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"600 1249 LINE",
"600 1499 LINE",
"149 1499 LINE",
"149 250 LINE SMOOTH"
);
}
);
width = 1949;
}
);
note = uni1799;
unicode = 1799;
},
{
glyphname = uni179A;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE"
);
}
);
width = 649;
}
);
note = uni179A;
unicode = 179A;
},
{
glyphname = uni179B;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 250 LINE SMOOTH",
"798 83 OFFCURVE",
"881 0 OFFCURVE",
"1048 0 CURVE SMOOTH",
"1550 0 LINE SMOOTH",
"1717 0 OFFCURVE",
"1800 83 OFFCURVE",
"1800 250 CURVE SMOOTH",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 1249 LINE SMOOTH"
);
}
);
width = 1949;
}
);
note = uni179B;
unicode = 179B;
},
{
glyphname = uni179C;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1599 LINE",
"350 1599 LINE",
"350 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
}
);
width = 649;
}
);
note = uni179C;
unicode = 179C;
},
{
glyphname = uni179D;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE",
"1148 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1148 1017 OFFCURVE",
"1065 1100 OFFCURVE",
"899 1100 CURVE SMOOTH",
"399 1100 LINE SMOOTH",
"232 1100 OFFCURVE",
"149 1017 OFFCURVE",
"149 850 CURVE SMOOTH",
"149 0 LINE",
"499 0 LINE",
"499 27 LINE",
"729 451 LINE",
"798 451 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 451 LINE",
"1249 451 LINE",
"1249 649 LINE",
"1148 649 LINE",
"1148 850 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"499 342 LINE",
"499 850 LINE",
"798 850 LINE",
"798 649 LINE",
"649 649 LINE",
"649 498 LINE",
"598 526 LINE"
);
}
);
width = 1298;
}
);
note = uni179D;
unicode = 179D;
},
{
glyphname = uni179E;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 649 LINE",
"1249 649 LINE",
"1249 850 LINE",
"1151 850 LINE",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"649 850 LINE",
"649 649 LINE",
"801 649 LINE",
"801 250 LINE",
"500 250 LINE"
);
}
);
width = 1298;
}
);
note = uni179E;
unicode = 179E;
},
{
glyphname = uni179F;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"305 1090 LINE",
"201 1063 OFFCURVE",
"149 983 OFFCURVE",
"149 850 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 850 LINE",
"798 850 LINE",
"798 250 LINE SMOOTH",
"798 83 OFFCURVE",
"881 0 OFFCURVE",
"1048 0 CURVE SMOOTH",
"1550 0 LINE SMOOTH",
"1717 0 OFFCURVE",
"1800 83 OFFCURVE",
"1800 250 CURVE SMOOTH",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 250 LINE",
"1148 250 LINE",
"1148 850 LINE SMOOTH",
"1148 1017 OFFCURVE",
"1065 1100 OFFCURVE",
"899 1100 CURVE SMOOTH",
"583 1100 LINE",
"409 1249 LINE",
"999 1249 LINE",
"999 1499 LINE",
"299 1499 LINE",
"149 1237 LINE"
);
}
);
width = 1949;
}
);
note = uni179F;
unicode = 179F;
},
{
glyphname = uni17A0;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1800 1416 OFFCURVE",
"1717 1499 OFFCURVE",
"1550 1499 CURVE SMOOTH",
"1051 1499 LINE SMOOTH",
"884 1499 OFFCURVE",
"801 1416 OFFCURVE",
"801 1249 CURVE SMOOTH",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 1249 LINE",
"1450 1249 LINE",
"1450 0 LINE",
"1800 0 LINE",
"1800 1249 LINE SMOOTH"
);
}
);
width = 1949;
}
);
note = uni17A0;
unicode = 17A0;
},
{
glyphname = uni17A1;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 824 OFFCURVE",
"266 711 OFFCURVE",
"499 659 CURVE SMOOTH",
"798 586 LINE",
"798 250 LINE",
"499 250 LINE",
"499 551 LINE",
"149 621 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1065 0 OFFCURVE",
"1148 83 OFFCURVE",
"1148 250 CURVE SMOOTH",
"1148 489 LINE",
"1046 539 LINE",
"1114 560 OFFCURVE",
"1148 595 OFFCURVE",
"1148 643 CURVE SMOOTH",
"1148 850 LINE",
"917 850 LINE",
"887 825 OFFCURVE",
"865 806 OFFCURVE",
"851 791 CURVE",
"714 821 LINE SMOOTH",
"571 855 OFFCURVE",
"499 914 OFFCURVE",
"499 999 CURVE SMOOTH",
"499 1249 LINE",
"798 1249 LINE",
"798 1151 LINE",
"749 1151 LINE",
"749 950 LINE",
"999 950 LINE SMOOTH",
"1098 950 OFFCURVE",
"1148 984 OFFCURVE",
"1148 1051 CURVE SMOOTH",
"1148 1249 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1148 -100 LINE",
"749 -100 LINE",
"749 -299 LINE",
"798 -299 LINE",
"798 -700 LINE",
"1148 -700 LINE",
"1300 -555 LINE",
"1449 -700 LINE",
"1800 -700 LINE",
"1800 999 LINE",
"1509 1249 LINE",
"1800 1249 LINE",
"1800 1499 LINE",
"1499 1499 LINE",
"1300 1157 LINE",
"1449 999 LINE",
"1449 -408 LINE",
"1300 -260 LINE",
"1148 -408 LINE"
);
}
);
width = 1949;
}
);
note = uni17A1;
unicode = 17A1;
},
{
glyphname = uni17A2;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
},
{
closed = 1;
nodes = (
"801 999 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 250 LINE",
"700 250 LINE",
"700 0 LINE",
"1151 0 LINE",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE"
);
}
);
width = 1298;
}
);
note = uni17A2;
unicode = 17A2;
},
{
glyphname = uni17A3;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
},
{
closed = 1;
nodes = (
"801 999 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 250 LINE",
"700 250 LINE",
"700 0 LINE",
"1151 0 LINE",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE"
);
}
);
width = 1298;
}
);
note = uni17A3;
unicode = 17A3;
},
{
glyphname = uni17A4;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 999 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
},
{
closed = 1;
nodes = (
"860 1249 LINE",
"1450 1249 LINE",
"1450 0 LINE",
"1800 0 LINE",
"1800 1249 LINE SMOOTH",
"1800 1416 OFFCURVE",
"1717 1499 OFFCURVE",
"1550 1499 CURVE SMOOTH",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 850 LINE",
"551 850 LINE",
"551 600 LINE",
"801 600 LINE",
"801 250 LINE",
"700 250 LINE",
"700 0 LINE",
"1151 0 LINE",
"1151 999 LINE"
);
}
);
width = 1949;
}
);
note = uni17A4;
unicode = 17A4;
},
{
glyphname = uni17A5;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1499 LINE",
"149 1249 LINE",
"1148 1249 LINE",
"1148 1599 LINE",
"798 1599 LINE",
"798 1499 LINE"
);
},
{
closed = 1;
nodes = (
"798 850 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 850 LINE SMOOTH",
"1148 1017 OFFCURVE",
"1065 1100 OFFCURVE",
"899 1100 CURVE SMOOTH",
"399 1100 LINE SMOOTH",
"232 1100 OFFCURVE",
"149 1017 OFFCURVE",
"149 850 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 850 LINE"
);
}
);
width = 1298;
}
);
note = uni17A5;
unicode = 17A5;
},
{
glyphname = uni17A6;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1800 1883 OFFCURVE",
"1717 1950 OFFCURVE",
"1550 1950 CURVE SMOOTH",
"1148 1950 LINE",
"1148 2300 LINE",
"798 2300 LINE",
"798 1651 LINE",
"1148 1651 LINE",
"1148 1749 LINE",
"1449 1749 LINE",
"1449 -467 LINE",
"1099 -467 LINE",
"1099 -209 LINE SMOOTH",
"1099 -124 OFFCURVE",
"999 -82 OFFCURVE",
"798 -82 CURVE SMOOTH",
"499 -82 LINE SMOOTH",
"298 -82 OFFCURVE",
"198 -124 OFFCURVE",
"198 -209 CURVE SMOOTH",
"198 -594 LINE",
"600 -594 LINE",
"600 -381 LINE",
"499 -381 LINE",
"499 -209 LINE",
"798 -209 LINE",
"798 -467 LINE SMOOTH",
"798 -552 OFFCURVE",
"898 -594 OFFCURVE",
"1099 -594 CURVE SMOOTH",
"1550 -594 LINE SMOOTH",
"1717 -594 OFFCURVE",
"1800 -552 OFFCURVE",
"1800 -467 CURVE SMOOTH",
"1800 1749 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1249 LINE SMOOTH"
);
}
);
width = 1949;
}
);
note = uni17A6;
unicode = 17A6;
},
{
glyphname = uni17A7;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"575 586 LINE",
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 932 OFFCURVE",
"199 899 OFFCURVE",
"299 899 CURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE"
);
}
);
width = 1298;
}
);
note = uni17A7;
unicode = 17A7;
},
{
glyphname = uni17A8;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1901 LINE",
"149 1651 LINE",
"1148 1651 LINE",
"1148 1901 LINE"
);
},
{
closed = 1;
nodes = (
"575 586 LINE",
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 932 OFFCURVE",
"199 899 OFFCURVE",
"299 899 CURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE"
);
}
);
width = 1298;
}
);
note = uni17A8;
unicode = 17A8;
},
{
glyphname = uni17A9;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"575 586 LINE",
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 932 OFFCURVE",
"199 899 OFFCURVE",
"299 899 CURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"999 -201 LINE",
"999 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE"
);
},
{
closed = 1;
nodes = (
"1300 600 LINE",
"1099 600 LINE",
"1099 -201 LINE",
"1300 -201 LINE"
);
}
);
width = 1298;
}
);
note = uni17A9;
unicode = 17A9;
},
{
glyphname = uni17AA;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 1901 LINE",
"149 1651 LINE",
"1148 1651 LINE",
"1148 2001 LINE",
"798 2001 LINE",
"798 1901 LINE"
);
},
{
closed = 1;
nodes = (
"575 586 LINE",
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 932 OFFCURVE",
"199 899 OFFCURVE",
"299 899 CURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE"
);
}
);
width = 1298;
}
);
note = uni17AA;
unicode = 17AA;
},
{
glyphname = uni17AB;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE"
);
},
{
closed = 1;
nodes = (
"918 -700 OFFCURVE",
"1151 -583 OFFCURVE",
"1151 -350 CURVE SMOOTH",
"1151 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"801 -350 LINE",
"801 -450 OFFCURVE",
"684 -500 OFFCURVE",
"451 -500 CURVE SMOOTH",
"150 -500 LINE",
"150 -700 LINE",
"451 -700 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17AB;
unicode = 17AB;
},
{
glyphname = uni17AC;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH",
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1067 0 OFFCURVE",
"1151 83 OFFCURVE",
"1151 250 CURVE SMOOTH",
"1151 999 LINE",
"860 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"850 1499 LINE",
"649 1157 LINE",
"801 999 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE"
);
},
{
closed = 1;
nodes = (
"1143 -438 OFFCURVE",
"1151 -397 OFFCURVE",
"1151 -350 CURVE SMOOTH",
"1151 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"801 -350 LINE",
"801 -450 OFFCURVE",
"684 -500 OFFCURVE",
"451 -500 CURVE SMOOTH",
"150 -500 LINE",
"150 -700 LINE",
"451 -700 LINE SMOOTH",
"704 -700 OFFCURVE",
"881 -674 OFFCURVE",
"981 -623 CURVE",
"1036 -674 OFFCURVE",
"1109 -700 OFFCURVE",
"1200 -700 CURVE SMOOTH",
"1300 -700 LINE",
"1300 -500 LINE",
"1200 -500 LINE SMOOTH",
"1171 -500 OFFCURVE",
"1147 -492 OFFCURVE",
"1126 -475 CURVE"
);
}
);
width = 1298;
}
);
note = uni17AC;
unicode = 17AC;
},
{
glyphname = uni17AD;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE"
);
},
{
closed = 1;
nodes = (
"915 -700 OFFCURVE",
"1148 -583 OFFCURVE",
"1148 -350 CURVE SMOOTH",
"1148 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"798 -350 LINE",
"798 -450 OFFCURVE",
"681 -500 OFFCURVE",
"448 -500 CURVE SMOOTH",
"149 -500 LINE",
"149 -700 LINE",
"448 -700 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17AD;
unicode = 17AD;
},
{
glyphname = uni17AE;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1141 -438 OFFCURVE",
"1148 -397 OFFCURVE",
"1148 -350 CURVE SMOOTH",
"1148 -100 LINE",
"649 -100 LINE",
"649 -350 LINE",
"798 -350 LINE",
"798 -450 OFFCURVE",
"681 -500 OFFCURVE",
"448 -500 CURVE SMOOTH",
"149 -500 LINE",
"149 -700 LINE",
"448 -700 LINE SMOOTH",
"703 -700 OFFCURVE",
"880 -674 OFFCURVE",
"978 -623 CURVE",
"1034 -674 OFFCURVE",
"1108 -700 OFFCURVE",
"1200 -700 CURVE SMOOTH",
"1300 -700 LINE",
"1300 -500 LINE",
"1200 -500 LINE SMOOTH",
"1171 -500 OFFCURVE",
"1147 -492 OFFCURVE",
"1126 -475 CURVE"
);
}
);
width = 1298;
}
);
note = uni17AE;
unicode = 17AE;
},
{
glyphname = uni17AF;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1149 1416 OFFCURVE",
"1066 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"497 1499 LINE",
"497 1849 LINE",
"147 1849 LINE",
"147 1151 LINE",
"497 1151 LINE",
"497 1249 LINE",
"798 1249 LINE",
"798 293 LINE",
"649 438 LINE",
"497 293 LINE",
"497 999 LINE",
"98 999 LINE",
"98 801 LINE",
"147 801 LINE",
"147 0 LINE",
"497 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1149 0 LINE",
"1149 1249 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17AF;
unicode = 17AF;
},
{
glyphname = uni17B0;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE"
);
},
{
closed = 1;
nodes = (
"634 -216 OFFCURVE",
"418 -299 OFFCURVE",
"149 -299 CURVE",
"149 -500 LINE SMOOTH",
"149 -633 OFFCURVE",
"220 -700 OFFCURVE",
"362 -700 CURVE SMOOTH",
"505 -700 OFFCURVE",
"606 -660 OFFCURVE",
"665 -580 CURVE",
"736 -660 OFFCURVE",
"822 -700 OFFCURVE",
"921 -700 CURVE SMOOTH",
"1072 -700 OFFCURVE",
"1148 -600 OFFCURVE",
"1148 -399 CURVE SMOOTH",
"1148 -49 LINE",
"798 -49 LINE"
);
},
{
closed = 1;
nodes = (
"707 -274 OFFCURVE",
"756 -241 OFFCURVE",
"798 -203 CURVE",
"798 -371 LINE SMOOTH",
"798 -424 OFFCURVE",
"786 -451 OFFCURVE",
"761 -451 CURVE SMOOTH",
"736 -451 OFFCURVE",
"700 -402 OFFCURVE",
"651 -303 CURVE"
);
},
{
closed = 1;
nodes = (
"584 -416 OFFCURVE",
"540 -469 OFFCURVE",
"501 -469 CURVE SMOOTH",
"452 -469 OFFCURVE",
"428 -447 OFFCURVE",
"428 -403 CURVE",
"481 -384 OFFCURVE",
"549 -354 OFFCURVE",
"634 -311 CURVE"
);
}
);
width = 1298;
}
);
note = uni17B0;
unicode = 17B0;
},
{
glyphname = uni17B1;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1599 LINE",
"1148 1950 LINE",
"149 1950 LINE",
"149 1700 LINE",
"798 1700 LINE",
"798 1599 LINE"
);
},
{
closed = 1;
nodes = (
"575 586 LINE",
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 932 OFFCURVE",
"199 899 OFFCURVE",
"299 899 CURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE"
);
}
);
width = 1298;
}
);
note = uni17B1;
unicode = 17B1;
},
{
glyphname = uni17B2;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1065 0 OFFCURVE",
"1148 83 OFFCURVE",
"1148 250 CURVE SMOOTH",
"1148 451 LINE SMOOTH",
"1148 504 OFFCURVE",
"1098 547 OFFCURVE",
"999 580 CURVE",
"1148 616 LINE",
"1148 1100 LINE",
"700 1100 LINE",
"700 850 LINE",
"899 850 LINE",
"899 782 LINE",
"700 700 LINE",
"700 500 LINE",
"765 500 OFFCURVE",
"798 470 OFFCURVE",
"798 410 CURVE SMOOTH",
"798 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"1148 1249 LINE",
"1148 1499 LINE"
);
}
);
width = 1298;
}
);
note = uni17B2;
unicode = 17B2;
},
{
glyphname = uni17B3;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"798 2001 LINE",
"798 1901 LINE",
"149 1901 LINE",
"149 1550 LINE",
"448 1550 LINE",
"448 1651 LINE",
"1148 1651 LINE",
"1148 2001 LINE"
);
},
{
closed = 1;
nodes = (
"575 586 LINE",
"944 699 OFFCURVE",
"1135 854 OFFCURVE",
"1148 1051 CURVE",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 999 LINE SMOOTH",
"149 932 OFFCURVE",
"199 899 OFFCURVE",
"299 899 CURVE SMOOTH",
"548 899 LINE",
"548 1100 LINE",
"499 1100 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 1051 LINE SMOOTH",
"798 932 OFFCURVE",
"698 838 OFFCURVE",
"499 770 CURVE",
"149 670 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"798 0 LINE",
"798 -201 LINE",
"1148 -201 LINE",
"1148 600 LINE",
"798 600 LINE",
"798 250 LINE",
"499 250 LINE",
"499 559 LINE"
);
}
);
width = 1298;
}
);
note = uni17B3;
unicode = 17B3;
},
{
glyphname = uni17B4;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 1204;
}
);
note = uni17B4;
unicode = 17B4;
},
{
glyphname = uni17B5;
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 1204;
}
);
note = uni17B5;
unicode = 17B5;
},
{
glyphname = uni17B6;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"502 1416 OFFCURVE",
"419 1499 OFFCURVE",
"252 1499 CURVE SMOOTH",
"-98 1499 LINE",
"-98 1249 LINE",
"152 1249 LINE",
"152 0 LINE",
"502 0 LINE",
"502 1249 LINE SMOOTH"
);
}
);
width = 649;
}
);
note = uni17B6;
unicode = 17B6;
},
{
glyphname = uni17B7;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-228 1850 OFFCURVE",
"-313 1925 OFFCURVE",
"-403 1974 CURVE SMOOTH",
"-493 2025 OFFCURVE",
"-588 2050 OFFCURVE",
"-688 2050 CURVE SMOOTH",
"-808 2050 OFFCURVE",
"-898 2025 OFFCURVE",
"-958 1974 CURVE SMOOTH",
"-1018 1925 OFFCURVE",
"-1048 1850 OFFCURVE",
"-1048 1749 CURVE SMOOTH",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 1749 LINE"
);
},
{
closed = 1;
nodes = (
"-609 1849 OFFCURVE",
"-540 1841 OFFCURVE",
"-481 1825 CURVE SMOOTH",
"-422 1808 OFFCURVE",
"-375 1783 OFFCURVE",
"-339 1749 CURVE",
"-808 1749 LINE",
"-808 1783 OFFCURVE",
"-798 1808 OFFCURVE",
"-778 1825 CURVE SMOOTH",
"-759 1841 OFFCURVE",
"-729 1849 OFFCURVE",
"-688 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B7;
unicode = 17B7;
},
{
glyphname = uni17B8;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-383 1968 OFFCURVE",
"-441 1999 OFFCURVE",
"-501 2019 CURVE SMOOTH",
"-561 2040 OFFCURVE",
"-623 2050 OFFCURVE",
"-688 2050 CURVE SMOOTH",
"-808 2050 OFFCURVE",
"-898 2025 OFFCURVE",
"-958 1974 CURVE SMOOTH",
"-1018 1925 OFFCURVE",
"-1048 1850 OFFCURVE",
"-1048 1749 CURVE SMOOTH",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 2099 LINE",
"-327 2099 LINE",
"-327 1925 LINE"
);
},
{
closed = 1;
nodes = (
"-609 1849 OFFCURVE",
"-540 1841 OFFCURVE",
"-481 1825 CURVE SMOOTH",
"-422 1808 OFFCURVE",
"-375 1783 OFFCURVE",
"-339 1749 CURVE",
"-808 1749 LINE",
"-808 1783 OFFCURVE",
"-798 1808 OFFCURVE",
"-778 1825 CURVE SMOOTH",
"-759 1841 OFFCURVE",
"-729 1849 OFFCURVE",
"-688 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B8;
unicode = 17B8;
},
{
glyphname = uni17B9;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-162 1757 OFFCURVE",
"-169 1765 OFFCURVE",
"-176 1774 CURVE",
"-124 1801 OFFCURVE",
"-98 1851 OFFCURVE",
"-98 1923 CURVE SMOOTH",
"-98 1982 OFFCURVE",
"-116 2025 OFFCURVE",
"-151 2054 CURVE SMOOTH",
"-185 2084 OFFCURVE",
"-236 2099 OFFCURVE",
"-305 2099 CURVE SMOOTH",
"-402 2099 OFFCURVE",
"-464 2070 OFFCURVE",
"-493 2013 CURVE",
"-556 2038 OFFCURVE",
"-622 2050 OFFCURVE",
"-692 2050 CURVE SMOOTH",
"-811 2050 OFFCURVE",
"-899 2025 OFFCURVE",
"-958 1974 CURVE SMOOTH",
"-1018 1925 OFFCURVE",
"-1048 1850 OFFCURVE",
"-1048 1749 CURVE SMOOTH",
"-1048 1651 LINE",
"-157 1651 LINE",
"-157 1749 LINE"
);
},
{
closed = 1;
nodes = (
"-217 1892 OFFCURVE",
"-229 1870 OFFCURVE",
"-253 1858 CURVE",
"-297 1899 OFFCURVE",
"-341 1933 OFFCURVE",
"-386 1962 CURVE",
"-374 1987 OFFCURVE",
"-347 1999 OFFCURVE",
"-305 1999 CURVE SMOOTH",
"-276 1999 OFFCURVE",
"-254 1993 OFFCURVE",
"-239 1980 CURVE SMOOTH",
"-224 1968 OFFCURVE",
"-217 1949 OFFCURVE",
"-217 1923 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-613 1849 OFFCURVE",
"-544 1841 OFFCURVE",
"-487 1825 CURVE SMOOTH",
"-428 1808 OFFCURVE",
"-382 1783 OFFCURVE",
"-348 1749 CURVE",
"-810 1749 LINE",
"-810 1783 OFFCURVE",
"-800 1808 OFFCURVE",
"-780 1825 CURVE SMOOTH",
"-761 1841 OFFCURVE",
"-731 1849 OFFCURVE",
"-692 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B9;
unicode = 17B9;
},
{
glyphname = uni17BA;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-306 1912 OFFCURVE",
"-346 1941 OFFCURVE",
"-389 1966 CURVE",
"-389 2099 LINE",
"-507 2099 LINE",
"-507 2021 LINE",
"-566 2040 OFFCURVE",
"-626 2050 OFFCURVE",
"-688 2050 CURVE SMOOTH",
"-808 2050 OFFCURVE",
"-898 2025 OFFCURVE",
"-958 1974 CURVE SMOOTH",
"-1018 1925 OFFCURVE",
"-1048 1850 OFFCURVE",
"-1048 1749 CURVE SMOOTH",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 2099 LINE",
"-268 2099 LINE",
"-268 1878 LINE"
);
},
{
closed = 1;
nodes = (
"-609 1849 OFFCURVE",
"-540 1841 OFFCURVE",
"-481 1825 CURVE SMOOTH",
"-422 1808 OFFCURVE",
"-375 1783 OFFCURVE",
"-339 1749 CURVE",
"-808 1749 LINE",
"-808 1783 OFFCURVE",
"-798 1808 OFFCURVE",
"-778 1825 CURVE SMOOTH",
"-759 1841 OFFCURVE",
"-729 1849 OFFCURVE",
"-688 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BA;
unicode = 17BA;
},
{
glyphname = uni17BB;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-149 -700 LINE",
"-149 -100 LINE",
"-448 -100 LINE",
"-448 -700 LINE"
);
}
);
width = 0;
}
);
note = uni17BB;
unicode = 17BB;
},
{
glyphname = uni17BC;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-798 -650 OFFCURVE",
"-731 -700 OFFCURVE",
"-597 -700 CURVE SMOOTH",
"-347 -700 LINE SMOOTH",
"-215 -700 OFFCURVE",
"-149 -650 OFFCURVE",
"-149 -551 CURVE SMOOTH",
"-149 -100 LINE",
"-448 -100 LINE",
"-448 -551 LINE",
"-597 -551 LINE",
"-597 -100 LINE",
"-798 -100 LINE",
"-798 -551 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BC;
unicode = 17BC;
},
{
glyphname = uni17BD;
lastChange = "2021-03-25 11:20:45 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-648 -100 LINE",
"-849 -100 LINE",
"-849 -700 LINE",
"-648 -700 LINE",
"-550 -569 LINE",
"-450 -700 LINE",
"-149 -700 LINE",
"-149 -100 LINE",
"-450 -100 LINE",
"-450 -510 LINE",
"-550 -381 LINE",
"-648 -510 LINE"
);
}
);
width = 0;
}
);
note = uni17BD;
unicode = 17BD;
},
{
glyphname = uni17BE;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-383 1968 OFFCURVE",
"-441 1999 OFFCURVE",
"-501 2019 CURVE SMOOTH",
"-561 2040 OFFCURVE",
"-623 2050 OFFCURVE",
"-688 2050 CURVE SMOOTH",
"-808 2050 OFFCURVE",
"-898 2025 OFFCURVE",
"-958 1974 CURVE SMOOTH",
"-1018 1925 OFFCURVE",
"-1048 1850 OFFCURVE",
"-1048 1749 CURVE SMOOTH",
"-1048 1651 LINE",
"-149 1651 LINE",
"-149 2099 LINE",
"-327 2099 LINE",
"-327 1925 LINE"
);
},
{
closed = 1;
nodes = (
"-609 1849 OFFCURVE",
"-540 1841 OFFCURVE",
"-481 1825 CURVE SMOOTH",
"-422 1808 OFFCURVE",
"-375 1783 OFFCURVE",
"-339 1749 CURVE",
"-808 1749 LINE",
"-808 1783 OFFCURVE",
"-798 1808 OFFCURVE",
"-778 1825 CURVE SMOOTH",
"-759 1841 OFFCURVE",
"-729 1849 OFFCURVE",
"-688 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BE;
unicode = 17BE;
},
{
glyphname = uni17BF;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"144 2012 OFFCURVE",
"104 2042 OFFCURVE",
"61 2066 CURVE",
"61 2200 LINE",
"-57 2200 LINE",
"-57 2122 LINE",
"-116 2141 OFFCURVE",
"-176 2150 OFFCURVE",
"-238 2150 CURVE SMOOTH",
"-358 2150 OFFCURVE",
"-448 2125 OFFCURVE",
"-508 2075 CURVE SMOOTH",
"-568 2026 OFFCURVE",
"-598 1950 OFFCURVE",
"-598 1849 CURVE SMOOTH",
"-598 1749 LINE",
"2 1749 LINE SMOOTH",
"102 1749 OFFCURVE",
"152 1716 OFFCURVE",
"152 1651 CURVE SMOOTH",
"152 -500 LINE",
"-147 -500 LINE",
"-147 -100 LINE",
"-498 -100 LINE",
"-498 -500 LINE SMOOTH",
"-498 -633 OFFCURVE",
"-415 -700 OFFCURVE",
"-248 -700 CURVE SMOOTH",
"252 -700 LINE SMOOTH",
"419 -700 OFFCURVE",
"502 -633 OFFCURVE",
"502 -500 CURVE SMOOTH",
"502 1651 LINE SMOOTH",
"502 1766 OFFCURVE",
"435 1847 OFFCURVE",
"301 1896 CURVE",
"301 2200 LINE",
"182 2200 LINE",
"182 1976 LINE"
);
},
{
closed = 1;
nodes = (
"-159 1950 OFFCURVE",
"-90 1942 OFFCURVE",
"-31 1925 CURVE SMOOTH",
"28 1909 OFFCURVE",
"75 1884 OFFCURVE",
"111 1849 CURVE",
"-358 1849 LINE",
"-358 1884 OFFCURVE",
"-348 1909 OFFCURVE",
"-328 1925 CURVE SMOOTH",
"-309 1942 OFFCURVE",
"-279 1950 OFFCURVE",
"-238 1950 CURVE SMOOTH"
);
}
);
width = 649;
}
);
note = uni17BF;
unicode = 17BF;
},
{
glyphname = uni17C0;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -633 OFFCURVE",
"-416 -700 OFFCURVE",
"-249 -700 CURVE SMOOTH",
"251 -700 LINE SMOOTH",
"417 -700 OFFCURVE",
"500 -633 OFFCURVE",
"500 -500 CURVE SMOOTH",
"500 1800 LINE SMOOTH",
"500 1934 OFFCURVE",
"417 2001 OFFCURVE",
"251 2001 CURVE SMOOTH",
"-149 2001 LINE",
"-149 2349 LINE",
"-499 2349 LINE",
"-499 1700 LINE",
"-149 1700 LINE",
"-149 1800 LINE",
"150 1800 LINE",
"150 -500 LINE",
"-149 -500 LINE",
"-149 -100 LINE",
"-499 -100 LINE",
"-499 -500 LINE SMOOTH"
);
}
);
width = 649;
}
);
note = uni17C0;
unicode = 17C0;
},
{
glyphname = uni17C1;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 999 LINE",
"150 0 LINE",
"600 0 LINE",
"600 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
}
);
width = 649;
}
);
note = uni17C1;
unicode = 17C1;
},
{
glyphname = uni17C2;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"560 1599 OFFCURVE",
"649 1749 OFFCURVE",
"649 2048 CURVE",
"500 2048 LINE",
"500 1869 OFFCURVE",
"460 1780 OFFCURVE",
"381 1780 CURVE SMOOTH",
"299 1780 LINE",
"299 1849 LINE",
"381 1849 LINE",
"381 2050 LINE",
"0 2050 LINE",
"0 1599 LINE",
"381 1599 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"150 999 LINE",
"150 0 LINE",
"600 0 LINE",
"600 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
}
);
width = 649;
}
);
note = uni17C2;
unicode = 17C2;
},
{
glyphname = uni17C3;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"201 2099 LINE SMOOTH",
"201 2200 OFFCURVE",
"134 2251 OFFCURVE",
"0 2251 CURVE",
"0 2150 LINE",
"33 2150 OFFCURVE",
"49 2133 OFFCURVE",
"49 2099 CURVE SMOOTH",
"49 1849 LINE",
"201 1849 LINE",
"201 1901 LINE",
"250 1901 LINE",
"250 1749 LINE",
"49 1749 LINE",
"49 1599 LINE",
"500 1599 LINE",
"500 2050 LINE",
"201 2050 LINE"
);
},
{
closed = 1;
nodes = (
"150 999 LINE",
"150 0 LINE",
"600 0 LINE",
"600 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE"
);
}
);
width = 649;
}
);
note = uni17C3;
unicode = 17C3;
},
{
glyphname = uni17C4;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"502 1416 OFFCURVE",
"419 1499 OFFCURVE",
"252 1499 CURVE SMOOTH",
"-98 1499 LINE",
"-98 1249 LINE",
"152 1249 LINE",
"152 0 LINE",
"502 0 LINE",
"502 1249 LINE SMOOTH"
);
}
);
width = 649;
}
);
note = uni17C4;
unicode = 17C4;
},
{
glyphname = uni17C5;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-98 1499 LINE",
"-98 1249 LINE",
"152 1249 LINE",
"152 0 LINE",
"502 0 LINE",
"502 2200 LINE",
"2 2200 LINE",
"2 1950 LINE",
"152 1950 LINE",
"152 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17C5;
unicode = 17C5;
},
{
glyphname = uni17C6;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-750 2251 OFFCURVE",
"-852 2197 OFFCURVE",
"-907 2101 CURVE SMOOTH",
"-934 2052 OFFCURVE",
"-948 2002 OFFCURVE",
"-948 1950 CURVE SMOOTH",
"-948 1846 OFFCURVE",
"-892 1742 OFFCURVE",
"-797 1690 CURVE SMOOTH",
"-749 1664 OFFCURVE",
"-700 1651 OFFCURVE",
"-649 1651 CURVE SMOOTH",
"-542 1651 OFFCURVE",
"-441 1705 OFFCURVE",
"-388 1801 CURVE SMOOTH",
"-361 1848 OFFCURVE",
"-348 1898 OFFCURVE",
"-348 1950 CURVE SMOOTH",
"-348 2054 OFFCURVE",
"-407 2160 OFFCURVE",
"-501 2212 CURVE SMOOTH",
"-548 2238 OFFCURVE",
"-597 2251 OFFCURVE",
"-649 2251 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-593 2050 OFFCURVE",
"-549 2005 OFFCURVE",
"-549 1950 CURVE SMOOTH",
"-549 1893 OFFCURVE",
"-591 1849 OFFCURVE",
"-649 1849 CURVE SMOOTH",
"-702 1849 OFFCURVE",
"-747 1895 OFFCURVE",
"-747 1950 CURVE SMOOTH",
"-747 2004 OFFCURVE",
"-702 2050 OFFCURVE",
"-649 2050 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17C6;
unicode = 17C6;
},
{
glyphname = uni17C7;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"347 1499 OFFCURVE",
"245 1447 OFFCURVE",
"190 1351 CURVE SMOOTH",
"163 1302 OFFCURVE",
"149 1252 OFFCURVE",
"149 1200 CURVE SMOOTH",
"149 1096 OFFCURVE",
"206 992 OFFCURVE",
"300 939 CURVE SMOOTH",
"347 912 OFFCURVE",
"396 899 OFFCURVE",
"448 899 CURVE SMOOTH",
"555 899 OFFCURVE",
"656 955 OFFCURVE",
"709 1051 CURVE SMOOTH",
"736 1098 OFFCURVE",
"749 1148 OFFCURVE",
"749 1200 CURVE SMOOTH",
"749 1304 OFFCURVE",
"691 1410 OFFCURVE",
"596 1461 CURVE SMOOTH",
"548 1486 OFFCURVE",
"499 1499 OFFCURVE",
"448 1499 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"504 1300 OFFCURVE",
"548 1256 OFFCURVE",
"548 1200 CURVE SMOOTH",
"548 1143 OFFCURVE",
"506 1100 OFFCURVE",
"448 1100 CURVE SMOOTH",
"392 1100 OFFCURVE",
"350 1144 OFFCURVE",
"350 1200 CURVE SMOOTH",
"350 1256 OFFCURVE",
"394 1300 OFFCURVE",
"448 1300 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"347 600 OFFCURVE",
"245 546 OFFCURVE",
"190 451 CURVE SMOOTH",
"163 403 OFFCURVE",
"149 352 OFFCURVE",
"149 299 CURVE SMOOTH",
"149 195 OFFCURVE",
"206 93 OFFCURVE",
"300 40 CURVE SMOOTH",
"347 13 OFFCURVE",
"396 0 OFFCURVE",
"448 0 CURVE SMOOTH",
"555 0 OFFCURVE",
"656 57 OFFCURVE",
"709 151 CURVE SMOOTH",
"736 198 OFFCURVE",
"749 247 OFFCURVE",
"749 299 CURVE SMOOTH",
"749 406 OFFCURVE",
"691 509 OFFCURVE",
"596 561 CURVE SMOOTH",
"548 587 OFFCURVE",
"499 600 OFFCURVE",
"448 600 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"505 399 OFFCURVE",
"548 357 OFFCURVE",
"548 299 CURVE SMOOTH",
"548 242 OFFCURVE",
"507 201 OFFCURVE",
"448 201 CURVE SMOOTH",
"391 201 OFFCURVE",
"350 242 OFFCURVE",
"350 299 CURVE SMOOTH",
"350 357 OFFCURVE",
"393 399 OFFCURVE",
"448 399 CURVE SMOOTH"
);
}
);
width = 899;
}
);
note = uni17C7;
unicode = 17C7;
},
{
glyphname = uni17C8;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"250 1350 OFFCURVE",
"197 1323 OFFCURVE",
"170 1275 CURVE SMOOTH",
"156 1251 OFFCURVE",
"149 1226 OFFCURVE",
"149 1200 CURVE SMOOTH",
"149 1148 OFFCURVE",
"178 1097 OFFCURVE",
"225 1071 CURVE SMOOTH",
"248 1058 OFFCURVE",
"273 1051 OFFCURVE",
"299 1051 CURVE SMOOTH",
"350 1051 OFFCURVE",
"403 1078 OFFCURVE",
"429 1126 CURVE SMOOTH",
"442 1149 OFFCURVE",
"448 1174 OFFCURVE",
"448 1200 CURVE SMOOTH",
"448 1252 OFFCURVE",
"419 1305 OFFCURVE",
"372 1331 CURVE SMOOTH",
"349 1344 OFFCURVE",
"324 1350 OFFCURVE",
"299 1350 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"250 451 OFFCURVE",
"197 424 OFFCURVE",
"170 376 CURVE SMOOTH",
"156 352 OFFCURVE",
"149 326 OFFCURVE",
"149 299 CURVE SMOOTH",
"149 247 OFFCURVE",
"178 197 OFFCURVE",
"225 170 CURVE SMOOTH",
"248 157 OFFCURVE",
"273 150 OFFCURVE",
"299 150 CURVE SMOOTH",
"350 150 OFFCURVE",
"403 178 OFFCURVE",
"429 225 CURVE SMOOTH",
"442 248 OFFCURVE",
"448 273 OFFCURVE",
"448 299 CURVE SMOOTH",
"448 354 OFFCURVE",
"419 406 OFFCURVE",
"372 432 CURVE SMOOTH",
"349 445 OFFCURVE",
"324 451 OFFCURVE",
"299 451 CURVE SMOOTH"
);
}
);
width = 598;
}
);
note = uni17C8;
unicode = 17C8;
},
{
glyphname = uni17C9;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-923 2251 LINE",
"-923 1651 LINE",
"-722 1651 LINE",
"-722 2251 LINE"
);
},
{
closed = 1;
nodes = (
"-573 2251 LINE",
"-573 1651 LINE",
"-372 1651 LINE",
"-372 2251 LINE"
);
}
);
width = 0;
}
);
note = uni17C9;
unicode = 17C9;
},
{
glyphname = uni17CA;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-648 1800 LINE",
"-724 1849 LINE",
"-1148 1849 LINE",
"-1148 1599 LINE",
"-149 1599 LINE",
"-149 1849 LINE",
"-570 1849 LINE"
);
}
);
width = 0;
}
);
note = uni17CA;
unicode = 17CA;
},
{
glyphname = uni17CB;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-774 2251 LINE",
"-774 1651 LINE",
"-524 1651 LINE",
"-524 2251 LINE"
);
}
);
width = 0;
}
);
note = uni17CB;
unicode = 17CB;
},
{
glyphname = uni17CC;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-294 1849 OFFCURVE",
"-200 1883 OFFCURVE",
"-200 1950 CURVE SMOOTH",
"-200 2099 LINE",
"-507 2099 LINE",
"-507 2000 OFFCURVE",
"-559 1950 OFFCURVE",
"-663 1950 CURVE SMOOTH",
"-1099 1950 LINE",
"-1099 1651 LINE",
"-200 1651 LINE",
"-200 1759 LINE",
"-790 1759 LINE",
"-790 1849 LINE",
"-481 1849 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17CC;
unicode = 17CC;
},
{
glyphname = uni17CD;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-294 1849 OFFCURVE",
"-200 1883 OFFCURVE",
"-200 1950 CURVE SMOOTH",
"-200 2099 LINE",
"-507 2099 LINE",
"-507 2000 OFFCURVE",
"-559 1950 OFFCURVE",
"-663 1950 CURVE SMOOTH",
"-1099 1950 LINE",
"-1099 1651 LINE",
"-642 1651 LINE",
"-642 1759 LINE",
"-790 1759 LINE",
"-790 1849 LINE",
"-481 1849 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17CD;
unicode = 17CD;
},
{
glyphname = uni17CE;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-348 2050 LINE",
"-549 2050 LINE",
"-549 2251 LINE",
"-747 2251 LINE",
"-747 2050 LINE",
"-948 2050 LINE",
"-948 1849 LINE",
"-747 1849 LINE",
"-747 1651 LINE",
"-549 1651 LINE",
"-549 1849 LINE",
"-348 1849 LINE"
);
}
);
width = 0;
}
);
note = uni17CE;
unicode = 17CE;
},
{
glyphname = uni17CF;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-511 1651 LINE",
"-200 1651 LINE",
"-200 1870 LINE",
"-511 1870 LINE",
"-511 1769 LINE",
"-648 1855 LINE",
"-786 1769 LINE",
"-786 1950 LINE",
"-478 1950 LINE SMOOTH",
"-293 1950 OFFCURVE",
"-200 1983 OFFCURVE",
"-200 2050 CURVE SMOOTH",
"-200 2150 LINE",
"-511 2150 LINE",
"-511 2083 OFFCURVE",
"-562 2050 OFFCURVE",
"-665 2050 CURVE SMOOTH",
"-1099 2050 LINE",
"-1099 1651 LINE",
"-784 1651 LINE",
"-650 1737 LINE"
);
}
);
width = 0;
}
);
note = uni17CF;
unicode = 17CF;
},
{
glyphname = uni17D0;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-74 1651 OFFCURVE",
"0 1701 OFFCURVE",
"0 1800 CURVE SMOOTH",
"0 2050 LINE",
"-281 2050 LINE",
"-281 1849 LINE",
"-616 1849 LINE",
"-616 1901 LINE",
"-506 1901 LINE",
"-506 2001 LINE",
"-899 2001 LINE",
"-899 1651 LINE",
"-223 1651 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D0;
unicode = 17D0;
},
{
glyphname = uni17D1;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1148 1901 LINE",
"-1148 1651 LINE",
"-149 1651 LINE",
"-149 1901 LINE"
);
}
);
width = 0;
}
);
note = uni17D1;
unicode = 17D1;
},
{
glyphname = uni17D2;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-348 -299 LINE",
"-549 -299 LINE",
"-549 -100 LINE",
"-747 -100 LINE",
"-747 -299 LINE",
"-948 -299 LINE",
"-948 -500 LINE",
"-747 -500 LINE",
"-747 -700 LINE",
"-549 -700 LINE",
"-549 -500 LINE",
"-348 -500 LINE"
);
}
);
width = 0;
}
);
note = uni17D2;
unicode = 17D2;
},
{
glyphname = uni17D3;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-799 2349 OFFCURVE",
"-956 2289 OFFCURVE",
"-1038 2176 CURVE SMOOTH",
"-1079 2119 OFFCURVE",
"-1099 2061 OFFCURVE",
"-1099 2001 CURVE SMOOTH",
"-1099 1878 OFFCURVE",
"-1014 1758 OFFCURVE",
"-871 1697 CURVE SMOOTH",
"-799 1666 OFFCURVE",
"-725 1651 OFFCURVE",
"-648 1651 CURVE SMOOTH",
"-493 1651 OFFCURVE",
"-337 1715 OFFCURVE",
"-259 1826 CURVE SMOOTH",
"-220 1881 OFFCURVE",
"-200 1940 OFFCURVE",
"-200 2001 CURVE SMOOTH",
"-200 2121 OFFCURVE",
"-286 2246 OFFCURVE",
"-428 2305 CURVE SMOOTH",
"-499 2334 OFFCURVE",
"-572 2349 OFFCURVE",
"-648 2349 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-583 2118 OFFCURVE",
"-532 2065 OFFCURVE",
"-532 2001 CURVE SMOOTH",
"-532 1935 OFFCURVE",
"-582 1882 OFFCURVE",
"-648 1882 CURVE SMOOTH",
"-708 1882 OFFCURVE",
"-765 1939 OFFCURVE",
"-765 2001 CURVE SMOOTH",
"-765 2063 OFFCURVE",
"-709 2118 OFFCURVE",
"-648 2118 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D3;
unicode = 17D3;
},
{
glyphname = uni17D4;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"602 1100 OFFCURVE",
"701 1148 OFFCURVE",
"798 1245 CURVE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"660 1380 OFFCURVE",
"560 1321 OFFCURVE",
"499 1321 CURVE",
"499 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17D4;
unicode = 17D4;
},
{
glyphname = uni17D5;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"602 1100 OFFCURVE",
"701 1148 OFFCURVE",
"798 1245 CURVE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"660 1380 OFFCURVE",
"560 1321 OFFCURVE",
"499 1321 CURVE",
"499 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1648 1499 LINE",
"1300 1499 LINE",
"1300 0 LINE",
"1648 0 LINE"
);
}
);
width = 1798;
}
);
note = uni17D5;
unicode = 17D5;
},
{
glyphname = uni17D6;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"348 1499 OFFCURVE",
"242 1447 OFFCURVE",
"189 1351 CURVE SMOOTH",
"162 1302 OFFCURVE",
"149 1252 OFFCURVE",
"149 1200 CURVE SMOOTH",
"149 1096 OFFCURVE",
"203 992 OFFCURVE",
"299 939 CURVE SMOOTH",
"347 912 OFFCURVE",
"397 899 OFFCURVE",
"448 899 CURVE SMOOTH",
"552 899 OFFCURVE",
"657 955 OFFCURVE",
"710 1051 CURVE SMOOTH",
"736 1098 OFFCURVE",
"749 1148 OFFCURVE",
"749 1200 CURVE SMOOTH",
"749 1304 OFFCURVE",
"691 1410 OFFCURVE",
"596 1461 CURVE SMOOTH",
"548 1486 OFFCURVE",
"499 1499 OFFCURVE",
"448 1499 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"504 1300 OFFCURVE",
"549 1256 OFFCURVE",
"549 1200 CURVE SMOOTH",
"549 1144 OFFCURVE",
"504 1100 OFFCURVE",
"448 1100 CURVE SMOOTH",
"395 1100 OFFCURVE",
"348 1145 OFFCURVE",
"348 1200 CURVE SMOOTH",
"348 1255 OFFCURVE",
"397 1300 OFFCURVE",
"448 1300 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"49 801 LINE",
"49 700 LINE",
"850 700 LINE",
"850 801 LINE"
);
},
{
closed = 1;
nodes = (
"348 600 OFFCURVE",
"242 546 OFFCURVE",
"189 451 CURVE SMOOTH",
"162 403 OFFCURVE",
"149 352 OFFCURVE",
"149 299 CURVE SMOOTH",
"149 195 OFFCURVE",
"203 93 OFFCURVE",
"299 40 CURVE SMOOTH",
"347 13 OFFCURVE",
"397 0 OFFCURVE",
"448 0 CURVE SMOOTH",
"552 0 OFFCURVE",
"657 57 OFFCURVE",
"710 151 CURVE SMOOTH",
"736 198 OFFCURVE",
"749 247 OFFCURVE",
"749 299 CURVE SMOOTH",
"749 406 OFFCURVE",
"691 509 OFFCURVE",
"596 561 CURVE SMOOTH",
"548 587 OFFCURVE",
"499 600 OFFCURVE",
"448 600 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"505 399 OFFCURVE",
"549 357 OFFCURVE",
"549 299 CURVE SMOOTH",
"549 243 OFFCURVE",
"505 201 OFFCURVE",
"448 201 CURVE SMOOTH",
"394 201 OFFCURVE",
"348 243 OFFCURVE",
"348 299 CURVE SMOOTH",
"348 356 OFFCURVE",
"396 399 OFFCURVE",
"448 399 CURVE SMOOTH"
);
}
);
width = 899;
}
);
note = uni17D6;
unicode = 17D6;
},
{
glyphname = uni17D7;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"499 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE",
"499 1239 LINE",
"649 1100 LINE",
"798 1239 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1360 LINE"
);
}
);
width = 1298;
}
);
note = uni17D7;
unicode = 17D7;
},
{
glyphname = uni17D8;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"602 1100 OFFCURVE",
"701 1148 OFFCURVE",
"798 1245 CURVE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"660 1380 OFFCURVE",
"560 1321 OFFCURVE",
"499 1321 CURVE",
"499 1499 LINE",
"149 1499 LINE",
"149 1100 LINE",
"499 1100 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2449 1416 OFFCURVE",
"2366 1499 OFFCURVE",
"2199 1499 CURVE SMOOTH",
"1699 1499 LINE SMOOTH",
"1532 1499 OFFCURVE",
"1449 1416 OFFCURVE",
"1449 1249 CURVE SMOOTH",
"1449 0 LINE",
"1898 0 LINE",
"1898 250 LINE",
"1800 250 LINE",
"1800 1249 LINE",
"2099 1249 LINE",
"2099 250 LINE SMOOTH",
"2099 83 OFFCURVE",
"2182 0 OFFCURVE",
"2349 0 CURVE SMOOTH",
"2848 0 LINE SMOOTH",
"3015 0 OFFCURVE",
"3098 83 OFFCURVE",
"3098 250 CURVE SMOOTH",
"3098 999 LINE",
"2809 1249 LINE",
"3098 1249 LINE",
"3098 1499 LINE",
"2799 1499 LINE",
"2598 1157 LINE",
"2750 999 LINE",
"2750 250 LINE",
"2449 250 LINE",
"2449 1249 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"3852 1100 OFFCURVE",
"3951 1148 OFFCURVE",
"4048 1245 CURVE",
"4048 0 LINE",
"4399 0 LINE",
"4399 1499 LINE",
"4048 1499 LINE",
"3911 1380 OFFCURVE",
"3811 1321 OFFCURVE",
"3749 1321 CURVE",
"3749 1499 LINE",
"3399 1499 LINE",
"3399 1100 LINE",
"3749 1100 LINE SMOOTH"
);
}
);
width = 4548;
}
);
note = uni17D8;
unicode = 17D8;
},
{
glyphname = uni17D9;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1066 0 OFFCURVE",
"1249 250 OFFCURVE",
"1249 750 CURVE SMOOTH",
"1249 1249 OFFCURVE",
"1066 1499 OFFCURVE",
"700 1499 CURVE SMOOTH",
"333 1499 OFFCURVE",
"149 1249 OFFCURVE",
"149 750 CURVE SMOOTH",
"149 250 OFFCURVE",
"333 0 OFFCURVE",
"700 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"975 1374 OFFCURVE",
"1112 1166 OFFCURVE",
"1112 750 CURVE SMOOTH",
"1112 333 OFFCURVE",
"975 125 OFFCURVE",
"700 125 CURVE SMOOTH",
"424 125 OFFCURVE",
"286 333 OFFCURVE",
"286 750 CURVE SMOOTH",
"286 1166 OFFCURVE",
"424 1374 OFFCURVE",
"700 1374 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"883 250 OFFCURVE",
"974 417 OFFCURVE",
"974 750 CURVE SMOOTH",
"974 1083 OFFCURVE",
"883 1249 OFFCURVE",
"700 1249 CURVE SMOOTH",
"515 1249 OFFCURVE",
"423 1083 OFFCURVE",
"423 750 CURVE SMOOTH",
"423 417 OFFCURVE",
"515 250 OFFCURVE",
"700 250 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"791 1124 OFFCURVE",
"837 999 OFFCURVE",
"837 750 CURVE SMOOTH",
"837 500 OFFCURVE",
"791 375 OFFCURVE",
"700 375 CURVE SMOOTH",
"609 375 OFFCURVE",
"563 500 OFFCURVE",
"563 750 CURVE SMOOTH",
"563 999 OFFCURVE",
"609 1124 OFFCURVE",
"700 1124 CURVE SMOOTH"
);
}
);
width = 1398;
}
);
note = uni17D9;
unicode = 17D9;
},
{
glyphname = uni17DA;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"274 1499 OFFCURVE",
"149 1363 OFFCURVE",
"149 1092 CURVE SMOOTH",
"149 410 LINE SMOOTH",
"149 137 OFFCURVE",
"274 0 OFFCURVE",
"524 0 CURVE SMOOTH",
"742 0 OFFCURVE",
"943 227 OFFCURVE",
"1128 680 CURVE SMOOTH",
"1337 1192 LINE",
"1650 135 LINE",
"1775 135 LINE",
"1961 954 LINE",
"2150 272 LINE",
"2275 272 LINE",
"2400 680 LINE",
"2588 680 LINE SMOOTH",
"2629 680 OFFCURVE",
"2650 703 OFFCURVE",
"2650 748 CURVE SMOOTH",
"2650 793 OFFCURVE",
"2629 815 OFFCURVE",
"2588 815 CURVE SMOOTH",
"2338 815 LINE",
"2211 510 LINE",
"2025 1223 LINE",
"1898 1223 LINE",
"1714 365 LINE",
"1400 1360 LINE",
"1273 1360 LINE",
"1028 748 LINE SMOOTH",
"945 539 OFFCURVE",
"861 384 OFFCURVE",
"778 284 CURVE SMOOTH",
"695 183 OFFCURVE",
"611 133 OFFCURVE",
"528 133 CURVE SMOOTH",
"359 133 OFFCURVE",
"274 225 OFFCURVE",
"274 410 CURVE SMOOTH",
"274 1092 LINE SMOOTH",
"274 1273 OFFCURVE",
"359 1364 OFFCURVE",
"528 1364 CURVE SMOOTH",
"693 1364 OFFCURVE",
"776 1273 OFFCURVE",
"776 1092 CURVE SMOOTH",
"776 1000 OFFCURVE",
"714 954 OFFCURVE",
"589 954 CURVE SMOOTH",
"548 954 OFFCURVE",
"528 932 OFFCURVE",
"528 887 CURVE SMOOTH",
"528 842 OFFCURVE",
"548 819 OFFCURVE",
"589 819 CURVE SMOOTH",
"798 819 OFFCURVE",
"903 909 OFFCURVE",
"903 1090 CURVE SMOOTH",
"903 1363 OFFCURVE",
"777 1499 OFFCURVE",
"524 1499 CURVE SMOOTH"
);
}
);
width = 2799;
}
);
note = uni17DA;
unicode = 17DA;
},
{
glyphname = uni17DB;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 874 LINE",
"0 874 LINE",
"0 625 LINE",
"150 625 LINE",
"150 250 LINE",
"49 250 LINE",
"49 0 LINE",
"500 0 LINE",
"500 625 LINE",
"649 625 LINE",
"649 874 LINE",
"500 874 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE"
);
}
);
width = 649;
}
);
note = uni17DB;
unicode = 17DB;
},
{
glyphname = uni17DC;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"988 -10 OFFCURVE",
"1150 123 OFFCURVE",
"1150 359 CURVE SMOOTH",
"1150 564 OFFCURVE",
"994 658 OFFCURVE",
"675 658 CURVE SMOOTH",
"543 658 OFFCURVE",
"466 671 OFFCURVE",
"422 724 CURVE SMOOTH",
"399 751 OFFCURVE",
"388 790 OFFCURVE",
"388 842 CURVE SMOOTH",
"388 974 OFFCURVE",
"487 1055 OFFCURVE",
"675 1055 CURVE SMOOTH",
"864 1055 OFFCURVE",
"963 1002 OFFCURVE",
"963 910 CURVE SMOOTH",
"963 871 OFFCURVE",
"949 851 OFFCURVE",
"922 851 CURVE SMOOTH",
"882 851 OFFCURVE",
"862 832 OFFCURVE",
"862 793 CURVE SMOOTH",
"862 754 OFFCURVE",
"882 734 OFFCURVE",
"922 734 CURVE SMOOTH",
"1027 734 OFFCURVE",
"1091 750 OFFCURVE",
"1125 802 CURVE SMOOTH",
"1142 827 OFFCURVE",
"1150 863 OFFCURVE",
"1150 910 CURVE SMOOTH",
"1150 1106 OFFCURVE",
"990 1210 OFFCURVE",
"675 1210 CURVE SMOOTH",
"362 1210 OFFCURVE",
"200 1078 OFFCURVE",
"200 842 CURVE SMOOTH",
"200 637 OFFCURVE",
"356 543 OFFCURVE",
"675 543 CURVE SMOOTH",
"808 543 OFFCURVE",
"884 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"952 451 OFFCURVE",
"963 412 OFFCURVE",
"963 360 CURVE SMOOTH",
"963 227 OFFCURVE",
"864 146 OFFCURVE",
"675 146 CURVE SMOOTH",
"486 146 OFFCURVE",
"388 199 OFFCURVE",
"388 292 CURVE SMOOTH",
"388 331 OFFCURVE",
"402 350 OFFCURVE",
"429 350 CURVE SMOOTH",
"468 350 OFFCURVE",
"489 371 OFFCURVE",
"489 408 CURVE SMOOTH",
"489 448 OFFCURVE",
"469 468 OFFCURVE",
"429 468 CURVE SMOOTH",
"324 468 OFFCURVE",
"260 452 OFFCURVE",
"226 401 CURVE SMOOTH",
"209 376 OFFCURVE",
"200 340 OFFCURVE",
"200 293 CURVE SMOOTH",
"200 96 OFFCURVE",
"359 -10 OFFCURVE",
"675 -10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */\0120 5 0 8 7 5 8 105 0 7 0 6 9 7 6 105 0 9 0 4 1 9 4 105 0 1 0 2 3 1 2 105 0 3 3 0 97 10 1 0 0 25 0 78 1 0 54 52 47 45 42 40 38 36 31 29 25 23 18 16 13 11 8 6 0 62 1 58 11 7 22 \012CALL[ ]	/* CallFunction */";
};
width = 1350;
}
);
note = uni17DC;
unicode = 17DC;
},
{
glyphname = uni17DD;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-898 1470 LINE",
"-898 1591 OFFCURVE",
"-814 1651 OFFCURVE",
"-645 1651 CURVE SMOOTH",
"-477 1651 OFFCURVE",
"-393 1591 OFFCURVE",
"-393 1470 CURVE",
"-199 1470 LINE",
"-199 1671 OFFCURVE",
"-347 1771 OFFCURVE",
"-644 1771 CURVE SMOOTH",
"-941 1771 OFFCURVE",
"-1089 1671 OFFCURVE",
"-1089 1470 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */\0126 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01213 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NPUSHB[ ]	/* 23 values pushed */\0123 1 1 2 2 1 113 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 \012ELSE[ ]	/* Else */\012NPUSHB[ ]	/* 22 values pushed */\0123 1 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 7 values pushed */\01217 33 17 33 4 7 26 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0126 0 \012WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni17DD;
unicode = 17DD;
},
{
glyphname = uni17E0;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1065 0 OFFCURVE",
"1148 83 OFFCURVE",
"1148 250 CURVE SMOOTH",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 250 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"798 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE"
);
}
);
width = 1298;
}
);
note = uni17E0;
unicode = 17E0;
},
{
glyphname = uni17E1;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1065 0 OFFCURVE",
"1148 83 OFFCURVE",
"1148 250 CURVE SMOOTH",
"1148 1249 LINE SMOOTH",
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 600 LINE",
"649 600 LINE",
"649 850 LINE",
"499 850 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 250 LINE",
"399 250 LINE",
"399 0 LINE",
"899 0 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17E1;
unicode = 17E1;
},
{
glyphname = uni17E2;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"600 756 LINE",
"999 756 LINE",
"999 950 LINE",
"948 950 LINE",
"948 1233 LINE",
"1048 1108 LINE",
"1149 1233 LINE",
"1149 250 LINE",
"500 250 LINE",
"500 1599 LINE SMOOTH",
"500 1699 OFFCURVE",
"417 1749 OFFCURVE",
"250 1749 CURVE SMOOTH",
"49 1749 LINE",
"49 1499 LINE",
"149 1499 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"1249 0 LINE SMOOTH",
"1416 0 OFFCURVE",
"1499 83 OFFCURVE",
"1499 250 CURVE SMOOTH",
"1499 1499 LINE",
"1149 1499 LINE",
"1048 1376 LINE",
"948 1499 LINE",
"600 1499 LINE"
);
}
);
width = 1648;
}
);
note = uni17E2;
unicode = 17E2;
},
{
glyphname = uni17E3;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1800 1249 LINE SMOOTH",
"1800 1416 OFFCURVE",
"1717 1499 OFFCURVE",
"1550 1499 CURVE SMOOTH",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1416 OFFCURVE",
"149 1249 CURVE SMOOTH",
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1249 LINE",
"1449 1249 LINE",
"1449 0 LINE",
"1800 0 LINE"
);
}
);
width = 1949;
}
);
note = uni17E3;
unicode = 17E3;
},
{
glyphname = uni17E4;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"500 1699 OFFCURVE",
"417 1749 OFFCURVE",
"250 1749 CURVE SMOOTH",
"49 1749 LINE",
"49 1499 LINE",
"149 1499 LINE",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"249 0 OFFCURVE",
"448 0 CURVE SMOOTH",
"1100 0 LINE",
"1149 250 LINE",
"999 397 LINE",
"999 801 LINE",
"1149 801 LINE",
"1149 999 LINE",
"899 999 LINE SMOOTH",
"699 999 OFFCURVE",
"649 898 OFFCURVE",
"649 801 CURVE SMOOTH",
"649 449 LINE",
"878 250 LINE",
"500 250 LINE",
"500 1599 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17E4;
unicode = 17E4;
},
{
glyphname = uni17E5;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 167 OFFCURVE",
"174 104 OFFCURVE",
"225 63 CURVE SMOOTH",
"274 21 OFFCURVE",
"349 0 OFFCURVE",
"448 0 CURVE SMOOTH",
"1099 0 LINE",
"1148 250 LINE",
"999 397 LINE",
"999 750 LINE",
"1148 750 LINE",
"1148 950 LINE",
"899 950 LINE SMOOTH",
"699 950 OFFCURVE",
"649 850 OFFCURVE",
"649 750 CURVE SMOOTH",
"649 449 LINE",
"888 250 LINE",
"499 250 LINE",
"499 1151 LINE",
"950 1151 LINE SMOOTH",
"1082 1151 OFFCURVE",
"1148 1217 OFFCURVE",
"1148 1350 CURVE SMOOTH",
"1148 1700 LINE",
"798 1700 LINE",
"798 1350 LINE",
"499 1350 LINE",
"499 1599 LINE",
"149 1599 LINE",
"149 1401 LINE SMOOTH",
"149 1330 OFFCURVE",
"190 1262 OFFCURVE",
"262 1227 CURVE SMOOTH",
"281 1217 OFFCURVE",
"300 1210 OFFCURVE",
"319 1206 CURVE",
"149 1100 LINE",
"149 250 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17E5;
unicode = 17E5;
},
{
glyphname = uni17E6;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 1416 OFFCURVE",
"1065 1499 OFFCURVE",
"899 1499 CURVE SMOOTH",
"499 1499 LINE",
"499 1849 LINE",
"149 1849 LINE",
"149 1151 LINE",
"499 1151 LINE",
"499 1249 LINE",
"798 1249 LINE",
"798 250 LINE",
"499 250 LINE",
"499 649 LINE",
"649 649 LINE",
"649 899 LINE",
"399 899 LINE SMOOTH",
"232 899 OFFCURVE",
"149 816 OFFCURVE",
"149 649 CURVE SMOOTH",
"149 250 LINE SMOOTH",
"149 83 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1065 0 OFFCURVE",
"1148 83 OFFCURVE",
"1148 250 CURVE SMOOTH",
"1148 1249 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17E6;
unicode = 17E6;
},
{
glyphname = uni17E7;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 250 LINE SMOOTH",
"798 83 OFFCURVE",
"881 0 OFFCURVE",
"1048 0 CURVE SMOOTH",
"1398 0 LINE SMOOTH",
"1565 0 OFFCURVE",
"1648 83 OFFCURVE",
"1648 250 CURVE SMOOTH",
"1648 1800 LINE",
"1300 1800 LINE",
"1300 250 LINE",
"1148 250 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE"
);
}
);
width = 1798;
}
);
note = uni17E7;
unicode = 17E7;
},
{
glyphname = uni17E8;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"1148 801 LINE SMOOTH",
"1148 900 OFFCURVE",
"1098 950 OFFCURVE",
"999 950 CURVE SMOOTH",
"649 950 LINE",
"649 700 LINE",
"798 700 LINE",
"798 293 LINE",
"649 438 LINE",
"499 293 LINE",
"499 1300 LINE",
"798 1300 LINE",
"798 1200 LINE",
"1148 1200 LINE",
"1148 1849 LINE",
"798 1849 LINE",
"798 1499 LINE",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1433 OFFCURVE",
"149 1300 CURVE SMOOTH",
"149 0 LINE",
"499 0 LINE",
"649 145 LINE",
"798 0 LINE",
"1148 0 LINE"
);
}
);
width = 1298;
}
);
note = uni17E8;
unicode = 17E8;
},
{
glyphname = uni17E9;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"549 1051 OFFCURVE",
"499 1084 OFFCURVE",
"499 1151 CURVE SMOOTH",
"499 1300 LINE",
"798 1300 LINE",
"798 1200 LINE",
"1148 1200 LINE",
"1148 1849 LINE",
"798 1849 LINE",
"798 1499 LINE",
"399 1499 LINE SMOOTH",
"232 1499 OFFCURVE",
"149 1433 OFFCURVE",
"149 1300 CURVE SMOOTH",
"149 1051 LINE",
"175 999 OFFCURVE",
"211 957 OFFCURVE",
"258 926 CURVE",
"211 895 OFFCURVE",
"175 853 OFFCURVE",
"149 801 CURVE",
"149 201 LINE SMOOTH",
"149 67 OFFCURVE",
"232 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"899 0 LINE SMOOTH",
"1065 0 OFFCURVE",
"1148 67 OFFCURVE",
"1148 201 CURVE SMOOTH",
"1148 500 LINE SMOOTH",
"1148 599 OFFCURVE",
"1087 649 OFFCURVE",
"966 649 CURVE SMOOTH",
"649 649 LINE",
"649 350 LINE",
"798 350 LINE",
"798 201 LINE",
"499 201 LINE",
"499 700 LINE SMOOTH",
"499 767 OFFCURVE",
"549 801 OFFCURVE",
"649 801 CURVE SMOOTH",
"999 801 LINE",
"999 1051 LINE",
"649 1051 LINE SMOOTH"
);
}
);
width = 1298;
}
);
note = uni17E9;
unicode = 17E9;
},
{
glyphname = uni17D2_1780;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -131 OFFCURVE",
"-283 -82 OFFCURVE",
"-450 -82 CURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1016 -82 OFFCURVE",
"-1099 -131 OFFCURVE",
"-1099 -229 CURVE SMOOTH",
"-1099 -594 LINE",
"-800 -594 LINE",
"-800 -229 LINE",
"-499 -229 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -229 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1780;
},
{
glyphname = uni17D2_1781;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -277 OFFCURVE",
"-599 -301 OFFCURVE",
"-799 -320 CURVE SMOOTH",
"-999 -339 OFFCURVE",
"-1099 -368 OFFCURVE",
"-1099 -408 CURVE SMOOTH",
"-1099 -508 LINE SMOOTH",
"-1099 -565 OFFCURVE",
"-1016 -594 OFFCURVE",
"-849 -594 CURVE SMOOTH",
"-450 -594 LINE SMOOTH",
"-283 -594 OFFCURVE",
"-200 -565 OFFCURVE",
"-200 -508 CURVE SMOOTH",
"-200 -369 LINE",
"-499 -416 LINE",
"-499 -508 LINE",
"-800 -508 LINE",
"-800 -442 LINE SMOOTH",
"-800 -404 OFFCURVE",
"-700 -375 OFFCURVE",
"-500 -356 CURVE SMOOTH",
"-300 -336 OFFCURVE",
"-200 -306 OFFCURVE",
"-200 -266 CURVE SMOOTH",
"-200 -168 LINE SMOOTH",
"-200 -111 OFFCURVE",
"-283 -82 OFFCURVE",
"-450 -82 CURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1016 -82 OFFCURVE",
"-1099 -111 OFFCURVE",
"-1099 -168 CURVE SMOOTH",
"-1099 -231 LINE SMOOTH",
"-1099 -249 OFFCURVE",
"-1038 -258 OFFCURVE",
"-917 -258 CURVE SMOOTH",
"-800 -258 LINE",
"-800 -168 LINE",
"-499 -168 LINE",
"-499 -250 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1781;
},
{
glyphname = uni17D2_1782;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -124 OFFCURVE",
"-283 -82 OFFCURVE",
"-450 -82 CURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1016 -82 OFFCURVE",
"-1099 -124 OFFCURVE",
"-1099 -209 CURVE SMOOTH",
"-1099 -594 LINE",
"-800 -594 LINE",
"-800 -584 LINE",
"-612 -393 LINE",
"-702 -315 LINE",
"-800 -408 LINE",
"-800 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -209 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1782;
},
{
glyphname = uni17D2_1783;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-749 -422 LINE",
"-749 -82 LINE",
"-1099 -82 LINE",
"-1099 -182 LINE",
"-1050 -182 LINE",
"-1050 -422 LINE SMOOTH",
"-1050 -537 OFFCURVE",
"-967 -594 OFFCURVE",
"-800 -594 CURVE SMOOTH",
"251 -594 LINE SMOOTH",
"417 -594 OFFCURVE",
"500 -537 OFFCURVE",
"500 -422 CURVE SMOOTH",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 -422 LINE",
"-149 -422 LINE",
"-149 -82 LINE",
"-450 -82 LINE",
"-450 -422 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1783;
},
{
glyphname = uni17D2_1784;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-367 -594 OFFCURVE",
"-200 -423 OFFCURVE",
"-200 -82 CURVE",
"-499 -82 LINE",
"-499 -339 OFFCURVE",
"-567 -467 OFFCURVE",
"-702 -467 CURVE SMOOTH",
"-767 -467 OFFCURVE",
"-800 -438 OFFCURVE",
"-800 -381 CURVE SMOOTH",
"-800 -324 OFFCURVE",
"-767 -295 OFFCURVE",
"-700 -295 CURVE",
"-700 -168 LINE",
"-849 -168 LINE SMOOTH",
"-1016 -168 OFFCURVE",
"-1099 -225 OFFCURVE",
"-1099 -338 CURVE SMOOTH",
"-1099 -381 LINE SMOOTH",
"-1099 -523 OFFCURVE",
"-967 -594 OFFCURVE",
"-702 -594 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1784;
},
{
glyphname = uni17D2_1785;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -82 LINE",
"-499 -168 LINE",
"-597 -168 LINE",
"-597 -252 LINE",
"-499 -252 LINE",
"-499 -467 LINE",
"-798 -467 LINE",
"-798 -82 LINE",
"-1148 -82 LINE",
"-1148 -209 LINE",
"-1099 -209 LINE",
"-1099 -467 LINE SMOOTH",
"-1099 -552 OFFCURVE",
"-1016 -594 OFFCURVE",
"-849 -594 CURVE SMOOTH",
"-198 -594 LINE",
"-198 -252 LINE",
"-97 -252 LINE",
"-97 -168 LINE",
"-198 -168 LINE",
"-198 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1785;
},
{
glyphname = uni17D2_1786;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-498 -594 LINE",
"-199 -594 LINE",
"-199 -82 LINE",
"-598 -82 LINE",
"-598 -252 LINE",
"-498 -252 LINE",
"-498 -446 LINE",
"-799 -313 LINE",
"-799 -82 LINE",
"-1098 -82 LINE",
"-1098 -295 LINE",
"-1198 -295 LINE",
"-1198 -422 LINE",
"-1098 -422 LINE",
"-1098 -594 LINE",
"-799 -594 LINE",
"-799 -457 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1786;
},
{
glyphname = uni17D2_1787;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -403 LINE",
"-648 -279 LINE",
"-800 -403 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-648 -469 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -252 LINE",
"-100 -252 LINE",
"-100 -168 LINE",
"-200 -168 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-499 -168 LINE",
"-599 -168 LINE",
"-599 -252 LINE",
"-499 -252 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1787;
},
{
glyphname = uni17D2_1788;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-548 -422 LINE",
"-548 -209 LINE SMOOTH",
"-548 -124 OFFCURVE",
"-631 -82 OFFCURVE",
"-798 -82 CURVE SMOOTH",
"-1099 -82 LINE SMOOTH",
"-1266 -82 OFFCURVE",
"-1349 -124 OFFCURVE",
"-1349 -209 CURVE SMOOTH",
"-1349 -594 LINE",
"-950 -594 LINE",
"-950 -422 LINE",
"-1050 -422 LINE",
"-1050 -209 LINE",
"-849 -209 LINE",
"-849 -422 LINE SMOOTH",
"-849 -537 OFFCURVE",
"-766 -594 OFFCURVE",
"-599 -594 CURVE SMOOTH",
"250 -594 LINE SMOOTH",
"417 -594 OFFCURVE",
"500 -537 OFFCURVE",
"500 -422 CURVE SMOOTH",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 -422 LINE",
"-49 -422 LINE",
"-49 -82 LINE",
"-350 -82 LINE",
"-350 -422 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1788;
},
{
glyphname = uni17D2_1789;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-947 -391 OFFCURVE",
"-866 -425 OFFCURVE",
"-777 -494 CURVE SMOOTH",
"-688 -561 OFFCURVE",
"-582 -594 OFFCURVE",
"-458 -594 CURVE SMOOTH",
"-252 -594 OFFCURVE",
"-149 -492 OFFCURVE",
"-149 -287 CURVE SMOOTH",
"-149 -82 LINE",
"-536 -82 LINE",
"-536 -287 LINE",
"-425 -287 LINE",
"-425 -369 OFFCURVE",
"-454 -410 OFFCURVE",
"-511 -410 CURVE SMOOTH",
"-568 -410 OFFCURVE",
"-641 -364 OFFCURVE",
"-728 -272 CURVE SMOOTH",
"-815 -181 OFFCURVE",
"-927 -135 OFFCURVE",
"-1064 -135 CURVE SMOOTH",
"-1148 -135 LINE",
"-1148 -391 LINE",
"-1021 -391 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1789;
},
{
glyphname = uni17D2_1789.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1798 -365 LINE",
"-1358 -365 LINE",
"-1358 -260 LINE",
"-1448 -260 LINE",
"-1448 -184 LINE",
"-1298 -236 LINE",
"-1149 -184 LINE",
"-1149 -365 LINE",
"-799 -365 LINE",
"-799 -82 LINE",
"-1149 -82 LINE",
"-1298 -133 LINE",
"-1448 -82 LINE",
"-1798 -82 LINE"
);
},
{
closed = 1;
nodes = (
"-498 -170 LINE",
"-498 -365 LINE",
"-147 -365 LINE",
"-147 -82 LINE",
"-747 -82 LINE",
"-747 -170 LINE"
);
},
{
closed = 1;
nodes = (
"-1334 -506 OFFCURVE",
"-1130 -535 OFFCURVE",
"-887 -594 CURVE",
"-348 -594 LINE SMOOTH",
"-214 -594 OFFCURVE",
"-147 -570 OFFCURVE",
"-147 -522 CURVE SMOOTH",
"-147 -401 LINE",
"-647 -401 LINE",
"-647 -487 LINE",
"-498 -487 LINE",
"-498 -522 LINE",
"-743 -522 LINE",
"-1015 -453 OFFCURVE",
"-1267 -418 OFFCURVE",
"-1499 -418 CURVE SMOOTH",
"-1798 -418 LINE",
"-1798 -506 LINE",
"-1499 -506 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1789.a;
},
{
glyphname = uni17D2_178A;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -124 OFFCURVE",
"-283 -82 OFFCURVE",
"-450 -82 CURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1016 -82 OFFCURVE",
"-1099 -124 OFFCURVE",
"-1099 -209 CURVE SMOOTH",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE",
"-800 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -209 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_178A;
},
{
glyphname = uni17D2_178B;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -82 LINE",
"-499 -158 LINE",
"-1099 -158 LINE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-648 -489 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -289 LINE",
"-100 -289 LINE",
"-100 -158 LINE",
"-200 -158 LINE",
"-200 -82 LINE"
);
},
{
closed = 1;
nodes = (
"-648 -334 LINE",
"-800 -420 LINE",
"-800 -289 LINE",
"-499 -289 LINE",
"-499 -420 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178B;
},
{
glyphname = uni17D2_178C;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1099 -276 LINE",
"-800 -276 LINE",
"-800 -201 LINE",
"-648 -256 LINE",
"-499 -201 LINE",
"-499 -250 LINE SMOOTH",
"-499 -277 OFFCURVE",
"-699 -310 OFFCURVE",
"-1099 -348 CURVE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-499 -526 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -381 LINE",
"-499 -381 LINE",
"-499 -451 LINE",
"-800 -508 LINE",
"-800 -385 LINE",
"-400 -346 OFFCURVE",
"-200 -306 OFFCURVE",
"-200 -266 CURVE SMOOTH",
"-200 -82 LINE",
"-485 -82 LINE",
"-648 -158 LINE",
"-814 -82 LINE",
"-1099 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178C;
},
{
glyphname = uni17D2_178D;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"82 -354 OFFCURVE",
"-1 -328 OFFCURVE",
"-100 -328 CURVE SMOOTH",
"-200 -328 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-648 -164 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE",
"-800 -248 LINE",
"-648 -330 LINE",
"-499 -248 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -457 LINE",
"-100 -457 LINE SMOOTH",
"29 -457 OFFCURVE",
"150 -529 OFFCURVE",
"150 -594 CURVE",
"500 -594 LINE",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 -406 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_178D;
},
{
glyphname = uni17D2_178E;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-798 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-149 -594 LINE",
"-149 -209 LINE SMOOTH",
"-149 -124 OFFCURVE",
"-232 -82 OFFCURVE",
"-399 -82 CURVE SMOOTH",
"-899 -82 LINE SMOOTH",
"-1066 -82 OFFCURVE",
"-1149 -124 OFFCURVE",
"-1149 -209 CURVE SMOOTH",
"-1149 -406 LINE",
"-1298 -313 LINE",
"-1450 -406 LINE",
"-1450 -209 LINE SMOOTH",
"-1450 -124 OFFCURVE",
"-1533 -82 OFFCURVE",
"-1699 -82 CURVE SMOOTH",
"-2199 -82 LINE SMOOTH",
"-2366 -82 OFFCURVE",
"-2449 -124 OFFCURVE",
"-2449 -209 CURVE SMOOTH",
"-2449 -594 LINE",
"-2099 -594 LINE",
"-2099 -209 LINE",
"-1800 -209 LINE",
"-1800 -594 LINE",
"-1450 -594 LINE",
"-1298 -500 LINE",
"-1149 -594 LINE",
"-798 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178E;
},
{
glyphname = uni17D2_178F;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -124 OFFCURVE",
"-283 -82 OFFCURVE",
"-450 -82 CURVE SMOOTH",
"-849 -82 LINE SMOOTH",
"-1016 -82 OFFCURVE",
"-1099 -124 OFFCURVE",
"-1099 -209 CURVE SMOOTH",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE",
"-800 -209 LINE",
"-499 -209 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -209 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_178F;
},
{
glyphname = uni17D2_1790;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-337 -315 OFFCURVE",
"-416 -276 OFFCURVE",
"-503 -199 CURVE SMOOTH",
"-592 -121 OFFCURVE",
"-688 -82 OFFCURVE",
"-792 -82 CURVE SMOOTH",
"-874 -82 LINE SMOOTH",
"-1057 -82 OFFCURVE",
"-1148 -143 OFFCURVE",
"-1148 -266 CURVE SMOOTH",
"-1148 -549 LINE",
"-779 -549 LINE",
"-779 -360 LINE",
"-884 -360 LINE",
"-884 -315 LINE SMOOTH",
"-884 -252 OFFCURVE",
"-857 -221 OFFCURVE",
"-802 -221 CURVE SMOOTH",
"-749 -221 OFFCURVE",
"-700 -252 OFFCURVE",
"-656 -315 CURVE SMOOTH",
"-527 -501 OFFCURVE",
"-397 -594 OFFCURVE",
"-267 -594 CURVE SMOOTH",
"-149 -594 LINE",
"-149 -315 LINE",
"-267 -315 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1790;
},
{
glyphname = uni17D2_1791;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-605 -594 LINE",
"-345 -594 LINE SMOOTH",
"-248 -594 OFFCURVE",
"-200 -563 OFFCURVE",
"-200 -500 CURVE SMOOTH",
"-200 -360 LINE",
"-800 -434 LINE",
"-800 -332 LINE",
"-429 -309 LINE",
"-276 -293 OFFCURVE",
"-200 -251 OFFCURVE",
"-200 -182 CURVE SMOOTH",
"-200 -82 LINE",
"-612 -82 LINE",
"-612 -168 LINE",
"-499 -168 LINE",
"-499 -202 OFFCURVE",
"-557 -223 OFFCURVE",
"-673 -231 CURVE SMOOTH",
"-1099 -266 LINE",
"-1099 -547 LINE",
"-759 -547 LINE",
"-540 -500 LINE",
"-540 -547 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1791;
},
{
glyphname = uni17D2_1792;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-468 -108 OFFCURVE",
"-525 -137 OFFCURVE",
"-640 -169 CURVE SMOOTH",
"-755 -201 OFFCURVE",
"-908 -236 OFFCURVE",
"-1099 -274 CURVE",
"-1099 -594 LINE",
"-812 -594 LINE SMOOTH",
"-740 -594 OFFCURVE",
"-685 -576 OFFCURVE",
"-648 -541 CURVE SMOOTH",
"-611 -508 OFFCURVE",
"-593 -474 OFFCURVE",
"-593 -438 CURVE",
"-483 -469 LINE",
"-374 -469 OFFCURVE",
"-299 -458 OFFCURVE",
"-260 -435 CURVE SMOOTH",
"-220 -412 OFFCURVE",
"-200 -380 OFFCURVE",
"-200 -338 CURVE SMOOTH",
"-200 -82 LINE",
"-468 -82 LINE"
);
},
{
closed = 1;
nodes = (
"-468 -346 LINE",
"-630 -313 LINE",
"-468 -236 LINE"
);
},
{
closed = 1;
nodes = (
"-704 -424 OFFCURVE",
"-713 -449 OFFCURVE",
"-730 -467 CURVE SMOOTH",
"-748 -484 OFFCURVE",
"-775 -492 OFFCURVE",
"-812 -492 CURVE",
"-812 -401 LINE",
"-704 -360 LINE",
"-704 -391 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1792;
},
{
glyphname = uni17D2_1793;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-249 -295 LINE",
"-149 -295 LINE",
"-149 -168 LINE",
"-249 -168 LINE",
"-249 -82 LINE",
"-548 -82 LINE",
"-548 -168 LINE",
"-949 -168 LINE SMOOTH",
"-1049 -168 OFFCURVE",
"-1099 -196 OFFCURVE",
"-1099 -252 CURVE SMOOTH",
"-1099 -422 LINE SMOOTH",
"-1099 -479 OFFCURVE",
"-1049 -508 OFFCURVE",
"-949 -508 CURVE SMOOTH",
"-548 -508 LINE",
"-548 -594 LINE",
"-149 -594 LINE",
"-149 -381 LINE",
"-249 -381 LINE"
);
},
{
closed = 1;
nodes = (
"-548 -381 LINE",
"-800 -381 LINE",
"-800 -295 LINE",
"-548 -295 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1793;
},
{
glyphname = uni17D2_1794;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 -594 LINE",
"500 -594 LINE",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 -344 LINE",
"1 -219 LINE",
"-149 -344 LINE",
"-149 -209 LINE",
"-100 -209 LINE",
"-100 -82 LINE",
"-499 -82 LINE",
"-499 -594 LINE",
"-149 -594 LINE",
"1 -469 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1794;
},
{
glyphname = uni17D2_1795;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-800 -594 LINE",
"-648 -469 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -82 LINE",
"-599 -82 LINE",
"-599 -252 LINE",
"-499 -252 LINE",
"-499 -403 LINE",
"-648 -279 LINE",
"-800 -403 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1795;
},
{
glyphname = uni17D2_1796;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-648 -330 LINE",
"-499 -248 LINE",
"-499 -594 LINE",
"-200 -594 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-648 -164 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-700 -594 LINE",
"-700 -422 LINE",
"-800 -422 LINE",
"-800 -248 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1796;
},
{
glyphname = uni17D2_1797;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-199 -124 OFFCURVE",
"-282 -82 OFFCURVE",
"-448 -82 CURVE SMOOTH",
"-848 -82 LINE SMOOTH",
"-1015 -82 OFFCURVE",
"-1098 -124 OFFCURVE",
"-1098 -209 CURVE SMOOTH",
"-1098 -422 LINE",
"-1198 -422 LINE",
"-1198 -594 LINE",
"-799 -594 LINE",
"-799 -209 LINE",
"-498 -209 LINE",
"-498 -594 LINE",
"-199 -594 LINE",
"-199 -209 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1797;
},
{
glyphname = uni17D2_1798;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-436 -552 OFFCURVE",
"-378 -594 OFFCURVE",
"-266 -594 CURVE SMOOTH",
"-154 -594 OFFCURVE",
"-98 -539 OFFCURVE",
"-98 -428 CURVE SMOOTH",
"-98 -368 OFFCURVE",
"-135 -309 OFFCURVE",
"-199 -285 CURVE",
"-222 -272 OFFCURVE",
"-245 -265 OFFCURVE",
"-270 -264 CURVE",
"-147 -211 LINE",
"-147 -82 LINE",
"-448 -82 LINE",
"-448 -262 LINE",
"-1198 -262 LINE",
"-1198 -471 LINE",
"-440 -469 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1798;
},
{
glyphname = uni17D2_1799;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -82 LINE",
"-499 -422 LINE SMOOTH",
"-499 -537 OFFCURVE",
"-416 -594 OFFCURVE",
"-249 -594 CURVE SMOOTH",
"251 -594 LINE SMOOTH",
"417 -594 OFFCURVE",
"500 -537 OFFCURVE",
"500 -422 CURVE SMOOTH",
"500 999 LINE",
"212 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE",
"1 1157 LINE",
"150 999 LINE",
"150 -422 LINE",
"-149 -422 LINE",
"-149 -252 LINE",
"-100 -252 LINE",
"-100 -82 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_1799;
},
{
glyphname = uni17D2_179A;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 -422 LINE SMOOTH",
"150 -537 OFFCURVE",
"233 -594 OFFCURVE",
"399 -594 CURVE SMOOTH",
"899 -594 LINE SMOOTH",
"1067 -594 OFFCURVE",
"1151 -537 OFFCURVE",
"1151 -422 CURVE SMOOTH",
"1151 -82 LINE",
"801 -82 LINE",
"801 -422 LINE",
"500 -422 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_179A;
},
{
glyphname = uni17D2_179B;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -594 LINE",
"-200 -82 LINE",
"-499 -82 LINE",
"-499 -338 LINE",
"-800 -82 LINE",
"-1099 -82 LINE",
"-1099 -594 LINE",
"-800 -594 LINE",
"-800 -338 LINE",
"-499 -594 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_179B;
},
{
glyphname = uni17D2_179C;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-431 -594 OFFCURVE",
"-200 -449 OFFCURVE",
"-200 -168 CURVE SMOOTH",
"-200 -82 LINE",
"-499 -82 LINE",
"-578 -138 OFFCURVE",
"-679 -184 OFFCURVE",
"-800 -219 CURVE SMOOTH",
"-923 -254 OFFCURVE",
"-1022 -280 OFFCURVE",
"-1099 -295 CURVE",
"-1099 -381 LINE SMOOTH",
"-1099 -448 OFFCURVE",
"-1075 -500 OFFCURVE",
"-1027 -538 CURVE SMOOTH",
"-978 -575 OFFCURVE",
"-873 -594 OFFCURVE",
"-710 -594 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-744 -364 OFFCURVE",
"-689 -346 OFFCURVE",
"-634 -322 CURVE SMOOTH",
"-578 -297 OFFCURVE",
"-533 -267 OFFCURVE",
"-499 -231 CURVE",
"-499 -312 OFFCURVE",
"-512 -371 OFFCURVE",
"-538 -410 CURVE SMOOTH",
"-565 -447 OFFCURVE",
"-616 -465 OFFCURVE",
"-689 -465 CURVE SMOOTH",
"-726 -465 OFFCURVE",
"-754 -458 OFFCURVE",
"-771 -444 CURVE SMOOTH",
"-790 -429 OFFCURVE",
"-800 -407 OFFCURVE",
"-800 -377 CURVE"
);
}
);
width = 0;
}
);
note = uni17D2_179C;
},
{
glyphname = uni17D2_179F;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"212 1249 LINE",
"503 1249 LINE",
"503 1499 LINE",
"202 1499 LINE",
"3 1157 LINE",
"152 999 LINE",
"152 250 LINE",
"3 250 LINE",
"3 0 LINE",
"152 0 LINE",
"152 -422 LINE",
"-149 -422 LINE",
"-149 -82 LINE",
"-548 -82 LINE",
"-548 -252 LINE",
"-499 -252 LINE",
"-499 -422 LINE SMOOTH",
"-499 -537 OFFCURVE",
"-416 -594 OFFCURVE",
"-249 -594 CURVE SMOOTH",
"253 -594 LINE SMOOTH",
"420 -594 OFFCURVE",
"503 -537 OFFCURVE",
"503 -422 CURVE SMOOTH",
"503 0 LINE",
"603 0 LINE",
"603 250 LINE",
"503 250 LINE",
"503 999 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_179F;
},
{
glyphname = uni17D2_17A0;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1099 -500 OFFCURVE",
"-1085 -531 OFFCURVE",
"-1056 -557 CURVE SMOOTH",
"-1029 -582 OFFCURVE",
"-988 -594 OFFCURVE",
"-933 -594 CURVE SMOOTH",
"-558 -594 LINE",
"-558 -236 LINE",
"-450 -236 LINE",
"-450 -594 LINE",
"-200 -594 LINE",
"-200 -209 LINE SMOOTH",
"-200 -176 OFFCURVE",
"-214 -147 OFFCURVE",
"-241 -121 CURVE SMOOTH",
"-268 -95 OFFCURVE",
"-309 -82 OFFCURVE",
"-364 -82 CURVE SMOOTH",
"-739 -82 LINE",
"-739 -440 LINE",
"-849 -440 LINE",
"-849 -82 LINE",
"-1099 -82 LINE",
"-1099 -465 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_17A0;
},
{
glyphname = uni17D2_17A2;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-799 -594 LINE",
"-799 -82 LINE",
"-1098 -82 LINE",
"-1098 -467 LINE",
"-1198 -467 LINE",
"-1198 -594 LINE"
);
},
{
closed = 1;
nodes = (
"-747 -209 LINE",
"-747 -338 LINE",
"-498 -338 LINE",
"-498 -467 LINE",
"-598 -467 LINE",
"-598 -594 LINE",
"-199 -594 LINE",
"-199 -82 LINE",
"-498 -82 LINE",
"-498 -209 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_17A2;
},
{
glyphname = uni17BB.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-200 -1126 LINE",
"-200 -676 LINE",
"-499 -676 LINE",
"-499 -1126 LINE"
);
}
);
width = 0;
}
);
note = uni17BB.b;
},
{
glyphname = uni17BC.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-849 -1076 OFFCURVE",
"-782 -1126 OFFCURVE",
"-648 -1126 CURVE SMOOTH",
"-450 -1126 LINE SMOOTH",
"-283 -1126 OFFCURVE",
"-200 -1076 OFFCURVE",
"-200 -977 CURVE SMOOTH",
"-200 -676 LINE",
"-499 -676 LINE",
"-499 -977 LINE",
"-648 -977 LINE",
"-648 -676 LINE",
"-849 -676 LINE",
"-849 -977 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BC.b;
},
{
glyphname = uni17BD.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-698 -676 LINE",
"-899 -676 LINE",
"-899 -1126 LINE",
"-698 -1126 LINE",
"-600 -1028 LINE",
"-500 -1126 LINE",
"-199 -1126 LINE",
"-199 -676 LINE",
"-500 -676 LINE",
"-500 -971 LINE",
"-600 -872 LINE",
"-698 -971 LINE"
);
}
);
width = 0;
}
);
note = uni17BD.b;
},
{
glyphname = uni17B7.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-228 2150 OFFCURVE",
"-313 2225 OFFCURVE",
"-403 2275 CURVE SMOOTH",
"-493 2324 OFFCURVE",
"-588 2349 OFFCURVE",
"-688 2349 CURVE SMOOTH",
"-808 2349 OFFCURVE",
"-898 2324 OFFCURVE",
"-958 2275 CURVE SMOOTH",
"-1018 2225 OFFCURVE",
"-1048 2150 OFFCURVE",
"-1048 2050 CURVE SMOOTH",
"-1048 1950 LINE",
"-149 1950 LINE",
"-149 2050 LINE"
);
},
{
closed = 1;
nodes = (
"-609 2150 OFFCURVE",
"-540 2142 OFFCURVE",
"-481 2126 CURVE SMOOTH",
"-422 2108 OFFCURVE",
"-375 2083 OFFCURVE",
"-339 2050 CURVE",
"-808 2050 LINE",
"-808 2083 OFFCURVE",
"-798 2108 OFFCURVE",
"-778 2126 CURVE SMOOTH",
"-759 2142 OFFCURVE",
"-729 2150 OFFCURVE",
"-688 2150 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B7.a;
},
{
glyphname = uni17B8.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-383 2267 OFFCURVE",
"-441 2298 OFFCURVE",
"-501 2318 CURVE SMOOTH",
"-561 2339 OFFCURVE",
"-623 2349 OFFCURVE",
"-688 2349 CURVE SMOOTH",
"-808 2349 OFFCURVE",
"-898 2324 OFFCURVE",
"-958 2275 CURVE SMOOTH",
"-1018 2225 OFFCURVE",
"-1048 2150 OFFCURVE",
"-1048 2050 CURVE SMOOTH",
"-1048 1950 LINE",
"-149 1950 LINE",
"-149 2400 LINE",
"-327 2400 LINE",
"-327 2226 LINE"
);
},
{
closed = 1;
nodes = (
"-609 2150 OFFCURVE",
"-540 2142 OFFCURVE",
"-481 2126 CURVE SMOOTH",
"-422 2108 OFFCURVE",
"-375 2083 OFFCURVE",
"-339 2050 CURVE",
"-808 2050 LINE",
"-808 2083 OFFCURVE",
"-798 2108 OFFCURVE",
"-778 2126 CURVE SMOOTH",
"-759 2142 OFFCURVE",
"-729 2150 OFFCURVE",
"-688 2150 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B8.a;
},
{
glyphname = uni17B9.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-162 2058 OFFCURVE",
"-169 2066 OFFCURVE",
"-176 2075 CURVE",
"-124 2102 OFFCURVE",
"-98 2152 OFFCURVE",
"-98 2224 CURVE SMOOTH",
"-98 2283 OFFCURVE",
"-116 2326 OFFCURVE",
"-151 2355 CURVE SMOOTH",
"-185 2384 OFFCURVE",
"-236 2398 OFFCURVE",
"-305 2398 CURVE SMOOTH",
"-402 2398 OFFCURVE",
"-464 2370 OFFCURVE",
"-493 2314 CURVE",
"-556 2337 OFFCURVE",
"-622 2349 OFFCURVE",
"-692 2349 CURVE SMOOTH",
"-811 2349 OFFCURVE",
"-899 2324 OFFCURVE",
"-958 2275 CURVE SMOOTH",
"-1018 2225 OFFCURVE",
"-1048 2150 OFFCURVE",
"-1048 2050 CURVE SMOOTH",
"-1048 1950 LINE",
"-157 1950 LINE",
"-157 2050 LINE"
);
},
{
closed = 1;
nodes = (
"-217 2191 OFFCURVE",
"-229 2169 OFFCURVE",
"-253 2157 CURVE",
"-297 2198 OFFCURVE",
"-341 2232 OFFCURVE",
"-386 2261 CURVE",
"-374 2287 OFFCURVE",
"-347 2300 OFFCURVE",
"-305 2300 CURVE SMOOTH",
"-276 2300 OFFCURVE",
"-254 2293 OFFCURVE",
"-239 2279 CURVE SMOOTH",
"-224 2267 OFFCURVE",
"-217 2249 OFFCURVE",
"-217 2224 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-613 2150 OFFCURVE",
"-544 2142 OFFCURVE",
"-487 2126 CURVE SMOOTH",
"-428 2108 OFFCURVE",
"-382 2083 OFFCURVE",
"-348 2050 CURVE",
"-810 2050 LINE",
"-810 2083 OFFCURVE",
"-800 2108 OFFCURVE",
"-780 2126 CURVE SMOOTH",
"-761 2142 OFFCURVE",
"-731 2150 OFFCURVE",
"-692 2150 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B9.a;
},
{
glyphname = uni17BA.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-306 2211 OFFCURVE",
"-346 2240 OFFCURVE",
"-389 2265 CURVE",
"-389 2400 LINE",
"-507 2400 LINE",
"-507 2320 LINE",
"-566 2339 OFFCURVE",
"-626 2349 OFFCURVE",
"-688 2349 CURVE SMOOTH",
"-808 2349 OFFCURVE",
"-898 2324 OFFCURVE",
"-958 2275 CURVE SMOOTH",
"-1018 2225 OFFCURVE",
"-1048 2150 OFFCURVE",
"-1048 2050 CURVE SMOOTH",
"-1048 1950 LINE",
"-149 1950 LINE",
"-149 2400 LINE",
"-268 2400 LINE",
"-268 2177 LINE"
);
},
{
closed = 1;
nodes = (
"-609 2150 OFFCURVE",
"-540 2142 OFFCURVE",
"-481 2126 CURVE SMOOTH",
"-422 2108 OFFCURVE",
"-375 2083 OFFCURVE",
"-339 2050 CURVE",
"-808 2050 LINE",
"-808 2083 OFFCURVE",
"-798 2108 OFFCURVE",
"-778 2126 CURVE SMOOTH",
"-759 2142 OFFCURVE",
"-729 2150 OFFCURVE",
"-688 2150 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BA.a;
},
{
glyphname = uni17C6.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-750 2501 OFFCURVE",
"-852 2447 OFFCURVE",
"-907 2350 CURVE SMOOTH",
"-934 2301 OFFCURVE",
"-948 2251 OFFCURVE",
"-948 2200 CURVE SMOOTH",
"-948 2096 OFFCURVE",
"-892 1991 OFFCURVE",
"-797 1940 CURVE SMOOTH",
"-749 1914 OFFCURVE",
"-700 1901 OFFCURVE",
"-649 1901 CURVE SMOOTH",
"-542 1901 OFFCURVE",
"-441 1954 OFFCURVE",
"-388 2050 CURVE SMOOTH",
"-361 2098 OFFCURVE",
"-348 2148 OFFCURVE",
"-348 2200 CURVE SMOOTH",
"-348 2303 OFFCURVE",
"-407 2410 OFFCURVE",
"-501 2462 CURVE SMOOTH",
"-548 2488 OFFCURVE",
"-597 2501 OFFCURVE",
"-649 2501 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-593 2300 OFFCURVE",
"-549 2255 OFFCURVE",
"-549 2200 CURVE SMOOTH",
"-549 2144 OFFCURVE",
"-591 2099 OFFCURVE",
"-649 2099 CURVE SMOOTH",
"-703 2099 OFFCURVE",
"-747 2146 OFFCURVE",
"-747 2200 CURVE SMOOTH",
"-747 2254 OFFCURVE",
"-702 2300 OFFCURVE",
"-649 2300 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17C6.a;
},
{
glyphname = uni17CE.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-348 2300 LINE",
"-549 2300 LINE",
"-549 2501 LINE",
"-747 2501 LINE",
"-747 2300 LINE",
"-948 2300 LINE",
"-948 2099 LINE",
"-747 2099 LINE",
"-747 1901 LINE",
"-549 1901 LINE",
"-549 2099 LINE",
"-348 2099 LINE"
);
}
);
width = 0;
}
);
note = uni17CE.a;
},
{
glyphname = uni17D0.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-74 1950 OFFCURVE",
"0 2000 OFFCURVE",
"0 2099 CURVE SMOOTH",
"0 2349 LINE",
"-281 2349 LINE",
"-281 2150 LINE",
"-616 2150 LINE",
"-616 2200 LINE",
"-506 2200 LINE",
"-506 2300 LINE",
"-899 2300 LINE",
"-899 1950 LINE",
"-223 1950 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D0.a;
},
{
glyphname = uni1789.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"149 0 LINE",
"600 0 LINE",
"600 250 LINE",
"499 250 LINE",
"499 1206 LINE",
"649 1061 LINE",
"798 1206 LINE",
"798 0 LINE",
"1148 0 LINE",
"1148 1499 LINE",
"798 1499 LINE",
"649 1354 LINE",
"499 1499 LINE",
"149 1499 LINE"
);
},
{
closed = 1;
nodes = (
"1449 1249 LINE",
"1449 0 LINE",
"1800 0 LINE",
"1800 1499 LINE",
"1200 1499 LINE",
"1200 1249 LINE"
);
}
);
width = 1949;
}
);
note = uni1789.a;
},
{
glyphname = uni17D2_179A.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"0 1157 LINE",
"150 999 LINE",
"150 -954 LINE SMOOTH",
"150 -1069 OFFCURVE",
"233 -1126 OFFCURVE",
"399 -1126 CURVE SMOOTH",
"899 -1126 LINE SMOOTH",
"1067 -1126 OFFCURVE",
"1151 -1069 OFFCURVE",
"1151 -954 CURVE SMOOTH",
"1151 -676 LINE",
"801 -676 LINE",
"801 -954 LINE",
"500 -954 LINE",
"500 999 LINE",
"211 1249 LINE",
"500 1249 LINE",
"500 1499 LINE",
"201 1499 LINE"
);
}
);
width = 649;
}
);
note = uni17D2_179A.b;
},
{
glyphname = uni17BF.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"144 2012 OFFCURVE",
"104 2042 OFFCURVE",
"61 2066 CURVE",
"61 2200 LINE",
"-57 2200 LINE",
"-57 2122 LINE",
"-116 2141 OFFCURVE",
"-176 2150 OFFCURVE",
"-238 2150 CURVE SMOOTH",
"-358 2150 OFFCURVE",
"-448 2125 OFFCURVE",
"-508 2075 CURVE SMOOTH",
"-568 2026 OFFCURVE",
"-598 1950 OFFCURVE",
"-598 1849 CURVE SMOOTH",
"-598 1749 LINE",
"2 1749 LINE SMOOTH",
"102 1749 OFFCURVE",
"152 1716 OFFCURVE",
"152 1651 CURVE SMOOTH",
"152 -926 LINE",
"-147 -926 LINE",
"-147 -676 LINE",
"-498 -676 LINE",
"-498 -926 LINE SMOOTH",
"-498 -1059 OFFCURVE",
"-415 -1126 OFFCURVE",
"-248 -1126 CURVE SMOOTH",
"252 -1126 LINE SMOOTH",
"419 -1126 OFFCURVE",
"502 -1059 OFFCURVE",
"502 -926 CURVE SMOOTH",
"502 1651 LINE SMOOTH",
"502 1766 OFFCURVE",
"435 1847 OFFCURVE",
"301 1896 CURVE",
"301 2200 LINE",
"182 2200 LINE",
"182 1976 LINE"
);
},
{
closed = 1;
nodes = (
"-159 1950 OFFCURVE",
"-90 1942 OFFCURVE",
"-31 1925 CURVE SMOOTH",
"28 1909 OFFCURVE",
"75 1884 OFFCURVE",
"111 1849 CURVE",
"-358 1849 LINE",
"-358 1884 OFFCURVE",
"-348 1909 OFFCURVE",
"-328 1925 CURVE SMOOTH",
"-309 1942 OFFCURVE",
"-279 1950 OFFCURVE",
"-238 1950 CURVE SMOOTH"
);
}
);
width = 649;
}
);
note = uni17BF.b;
},
{
glyphname = uni17C0.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-499 -1059 OFFCURVE",
"-416 -1126 OFFCURVE",
"-249 -1126 CURVE SMOOTH",
"251 -1126 LINE SMOOTH",
"417 -1126 OFFCURVE",
"500 -1059 OFFCURVE",
"500 -926 CURVE SMOOTH",
"500 1800 LINE SMOOTH",
"500 1934 OFFCURVE",
"417 2001 OFFCURVE",
"251 2001 CURVE SMOOTH",
"-149 2001 LINE",
"-149 2349 LINE",
"-499 2349 LINE",
"-499 1700 LINE",
"-149 1700 LINE",
"-149 1800 LINE",
"150 1800 LINE",
"150 -926 LINE",
"-149 -926 LINE",
"-149 -676 LINE",
"-499 -676 LINE",
"-499 -926 LINE SMOOTH"
);
}
);
width = 649;
}
);
note = uni17C0.b;
},
{
glyphname = uni17B7_17CD;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-77 1849 OFFCURVE",
"1 1883 OFFCURVE",
"1 1950 CURVE SMOOTH",
"1 2099 LINE",
"-255 2099 LINE",
"-255 2000 OFFCURVE",
"-281 1950 OFFCURVE",
"-333 1950 CURVE SMOOTH",
"-475 1950 LINE",
"-487 1958 OFFCURVE",
"-498 1966 OFFCURVE",
"-509 1974 CURVE SMOOTH",
"-584 2025 OFFCURVE",
"-664 2050 OFFCURVE",
"-747 2050 CURVE SMOOTH",
"-848 2050 OFFCURVE",
"-923 2025 OFFCURVE",
"-972 1974 CURVE SMOOTH",
"-1023 1925 OFFCURVE",
"-1048 1850 OFFCURVE",
"-1048 1749 CURVE SMOOTH",
"-1048 1651 LINE",
"-231 1651 LINE",
"-231 1759 LINE",
"-303 1759 LINE",
"-303 1849 LINE",
"-233 1849 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-847 1783 OFFCURVE",
"-839 1808 OFFCURVE",
"-823 1825 CURVE SMOOTH",
"-806 1841 OFFCURVE",
"-781 1849 OFFCURVE",
"-747 1849 CURVE SMOOTH",
"-682 1849 OFFCURVE",
"-624 1841 OFFCURVE",
"-575 1825 CURVE SMOOTH",
"-537 1812 OFFCURVE",
"-504 1794 OFFCURVE",
"-477 1769 CURVE",
"-477 1749 LINE",
"-847 1749 LINE"
);
}
);
width = 0;
}
);
note = uni17B7_17CD;
},
{
glyphname = uni17B7.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-23 1850 OFFCURVE",
"-108 1925 OFFCURVE",
"-198 1974 CURVE SMOOTH",
"-288 2025 OFFCURVE",
"-383 2050 OFFCURVE",
"-483 2050 CURVE SMOOTH",
"-603 2050 OFFCURVE",
"-693 2025 OFFCURVE",
"-753 1974 CURVE SMOOTH",
"-813 1925 OFFCURVE",
"-843 1850 OFFCURVE",
"-843 1749 CURVE SMOOTH",
"-843 1651 LINE",
"56 1651 LINE",
"56 1749 LINE"
);
},
{
closed = 1;
nodes = (
"-404 1849 OFFCURVE",
"-335 1841 OFFCURVE",
"-276 1825 CURVE SMOOTH",
"-217 1808 OFFCURVE",
"-170 1783 OFFCURVE",
"-134 1749 CURVE",
"-603 1749 LINE",
"-603 1783 OFFCURVE",
"-593 1808 OFFCURVE",
"-573 1825 CURVE SMOOTH",
"-554 1841 OFFCURVE",
"-524 1849 OFFCURVE",
"-483 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B7.r;
},
{
glyphname = uni17B8.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-178 1968 OFFCURVE",
"-236 1999 OFFCURVE",
"-296 2019 CURVE SMOOTH",
"-356 2040 OFFCURVE",
"-418 2050 OFFCURVE",
"-483 2050 CURVE SMOOTH",
"-603 2050 OFFCURVE",
"-693 2025 OFFCURVE",
"-753 1974 CURVE SMOOTH",
"-813 1925 OFFCURVE",
"-843 1850 OFFCURVE",
"-843 1749 CURVE SMOOTH",
"-843 1651 LINE",
"56 1651 LINE",
"56 2099 LINE",
"-122 2099 LINE",
"-122 1925 LINE"
);
},
{
closed = 1;
nodes = (
"-404 1849 OFFCURVE",
"-335 1841 OFFCURVE",
"-276 1825 CURVE SMOOTH",
"-217 1808 OFFCURVE",
"-170 1783 OFFCURVE",
"-134 1749 CURVE",
"-603 1749 LINE",
"-603 1783 OFFCURVE",
"-593 1808 OFFCURVE",
"-573 1825 CURVE SMOOTH",
"-554 1841 OFFCURVE",
"-524 1849 OFFCURVE",
"-483 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B8.r;
},
{
glyphname = uni17B9.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"43 1757 OFFCURVE",
"36 1765 OFFCURVE",
"29 1774 CURVE",
"81 1801 OFFCURVE",
"107 1851 OFFCURVE",
"107 1923 CURVE SMOOTH",
"107 1982 OFFCURVE",
"89 2025 OFFCURVE",
"54 2054 CURVE SMOOTH",
"20 2084 OFFCURVE",
"-31 2099 OFFCURVE",
"-100 2099 CURVE SMOOTH",
"-197 2099 OFFCURVE",
"-259 2070 OFFCURVE",
"-288 2013 CURVE",
"-351 2038 OFFCURVE",
"-417 2050 OFFCURVE",
"-487 2050 CURVE SMOOTH",
"-606 2050 OFFCURVE",
"-694 2025 OFFCURVE",
"-753 1974 CURVE SMOOTH",
"-813 1925 OFFCURVE",
"-843 1850 OFFCURVE",
"-843 1749 CURVE SMOOTH",
"-843 1651 LINE",
"48 1651 LINE",
"48 1749 LINE"
);
},
{
closed = 1;
nodes = (
"-12 1892 OFFCURVE",
"-24 1870 OFFCURVE",
"-48 1858 CURVE",
"-92 1899 OFFCURVE",
"-136 1933 OFFCURVE",
"-181 1962 CURVE",
"-169 1987 OFFCURVE",
"-142 1999 OFFCURVE",
"-100 1999 CURVE SMOOTH",
"-71 1999 OFFCURVE",
"-49 1993 OFFCURVE",
"-34 1980 CURVE SMOOTH",
"-19 1968 OFFCURVE",
"-12 1949 OFFCURVE",
"-12 1923 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-408 1849 OFFCURVE",
"-339 1841 OFFCURVE",
"-282 1825 CURVE SMOOTH",
"-223 1808 OFFCURVE",
"-177 1783 OFFCURVE",
"-143 1749 CURVE",
"-605 1749 LINE",
"-605 1783 OFFCURVE",
"-595 1808 OFFCURVE",
"-575 1825 CURVE SMOOTH",
"-556 1841 OFFCURVE",
"-526 1849 OFFCURVE",
"-487 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17B9.r;
},
{
glyphname = uni17BA.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-101 1912 OFFCURVE",
"-141 1941 OFFCURVE",
"-184 1966 CURVE",
"-184 2099 LINE",
"-302 2099 LINE",
"-302 2021 LINE",
"-361 2040 OFFCURVE",
"-421 2050 OFFCURVE",
"-483 2050 CURVE SMOOTH",
"-603 2050 OFFCURVE",
"-693 2025 OFFCURVE",
"-753 1974 CURVE SMOOTH",
"-813 1925 OFFCURVE",
"-843 1850 OFFCURVE",
"-843 1749 CURVE SMOOTH",
"-843 1651 LINE",
"56 1651 LINE",
"56 2099 LINE",
"-63 2099 LINE",
"-63 1878 LINE"
);
},
{
closed = 1;
nodes = (
"-404 1849 OFFCURVE",
"-335 1841 OFFCURVE",
"-276 1825 CURVE SMOOTH",
"-217 1808 OFFCURVE",
"-170 1783 OFFCURVE",
"-134 1749 CURVE",
"-603 1749 LINE",
"-603 1783 OFFCURVE",
"-593 1808 OFFCURVE",
"-573 1825 CURVE SMOOTH",
"-554 1841 OFFCURVE",
"-524 1849 OFFCURVE",
"-483 1849 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BA.r;
},
{
glyphname = uni17C6.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-545 2251 OFFCURVE",
"-647 2197 OFFCURVE",
"-702 2101 CURVE SMOOTH",
"-729 2052 OFFCURVE",
"-743 2002 OFFCURVE",
"-743 1950 CURVE SMOOTH",
"-743 1846 OFFCURVE",
"-687 1742 OFFCURVE",
"-592 1690 CURVE SMOOTH",
"-544 1664 OFFCURVE",
"-495 1651 OFFCURVE",
"-444 1651 CURVE SMOOTH",
"-337 1651 OFFCURVE",
"-236 1705 OFFCURVE",
"-183 1801 CURVE SMOOTH",
"-156 1848 OFFCURVE",
"-143 1898 OFFCURVE",
"-143 1950 CURVE SMOOTH",
"-143 2054 OFFCURVE",
"-202 2160 OFFCURVE",
"-296 2212 CURVE SMOOTH",
"-343 2238 OFFCURVE",
"-392 2251 OFFCURVE",
"-444 2251 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-388 2050 OFFCURVE",
"-344 2005 OFFCURVE",
"-344 1950 CURVE SMOOTH",
"-344 1893 OFFCURVE",
"-386 1849 OFFCURVE",
"-444 1849 CURVE SMOOTH",
"-497 1849 OFFCURVE",
"-542 1895 OFFCURVE",
"-542 1950 CURVE SMOOTH",
"-542 2004 OFFCURVE",
"-497 2050 OFFCURVE",
"-444 2050 CURVE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17C6.r;
},
{
glyphname = uni17C9.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-718 2251 LINE",
"-718 1651 LINE",
"-517 1651 LINE",
"-517 2251 LINE"
);
},
{
closed = 1;
nodes = (
"-368 2251 LINE",
"-368 1651 LINE",
"-167 1651 LINE",
"-167 2251 LINE"
);
}
);
width = 0;
}
);
note = uni17C9.r;
},
{
glyphname = uni17CD.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-89 1849 OFFCURVE",
"5 1883 OFFCURVE",
"5 1950 CURVE SMOOTH",
"5 2099 LINE",
"-302 2099 LINE",
"-302 2000 OFFCURVE",
"-354 1950 OFFCURVE",
"-458 1950 CURVE SMOOTH",
"-894 1950 LINE",
"-894 1651 LINE",
"-437 1651 LINE",
"-437 1759 LINE",
"-585 1759 LINE",
"-585 1849 LINE",
"-276 1849 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17CD.r;
},
{
glyphname = uni17B7_17CD.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"128 1849 OFFCURVE",
"206 1883 OFFCURVE",
"206 1950 CURVE SMOOTH",
"206 2099 LINE",
"-50 2099 LINE",
"-50 2000 OFFCURVE",
"-76 1950 OFFCURVE",
"-128 1950 CURVE SMOOTH",
"-270 1950 LINE",
"-282 1958 OFFCURVE",
"-293 1966 OFFCURVE",
"-304 1974 CURVE SMOOTH",
"-379 2025 OFFCURVE",
"-459 2050 OFFCURVE",
"-542 2050 CURVE SMOOTH",
"-643 2050 OFFCURVE",
"-718 2025 OFFCURVE",
"-767 1974 CURVE SMOOTH",
"-818 1925 OFFCURVE",
"-843 1850 OFFCURVE",
"-843 1749 CURVE SMOOTH",
"-843 1651 LINE",
"-26 1651 LINE",
"-26 1759 LINE",
"-98 1759 LINE",
"-98 1849 LINE",
"-28 1849 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-642 1783 OFFCURVE",
"-634 1808 OFFCURVE",
"-618 1825 CURVE SMOOTH",
"-601 1841 OFFCURVE",
"-576 1849 OFFCURVE",
"-542 1849 CURVE SMOOTH",
"-477 1849 OFFCURVE",
"-419 1841 OFFCURVE",
"-370 1825 CURVE SMOOTH",
"-332 1812 OFFCURVE",
"-299 1794 OFFCURVE",
"-272 1769 CURVE",
"-272 1749 LINE",
"-642 1749 LINE"
);
}
);
width = 0;
}
);
note = uni17B7_17CD.r;
},
{
glyphname = uni17D2_178A.n;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-856 -124 OFFCURVE",
"-939 -82 OFFCURVE",
"-1106 -82 CURVE SMOOTH",
"-1505 -82 LINE SMOOTH",
"-1672 -82 OFFCURVE",
"-1755 -124 OFFCURVE",
"-1755 -209 CURVE SMOOTH",
"-1755 -594 LINE",
"-1356 -594 LINE",
"-1356 -422 LINE",
"-1456 -422 LINE",
"-1456 -209 LINE",
"-1155 -209 LINE",
"-1155 -594 LINE",
"-856 -594 LINE",
"-856 -209 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_178A.n;
},
{
glyphname = uni17D2_178B.n;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1155 -82 LINE",
"-1155 -158 LINE",
"-1755 -158 LINE",
"-1755 -594 LINE",
"-1456 -594 LINE",
"-1304 -489 LINE",
"-1155 -594 LINE",
"-856 -594 LINE",
"-856 -289 LINE",
"-756 -289 LINE",
"-756 -158 LINE",
"-856 -158 LINE",
"-856 -82 LINE"
);
},
{
closed = 1;
nodes = (
"-1304 -334 LINE",
"-1456 -420 LINE",
"-1456 -289 LINE",
"-1155 -289 LINE",
"-1155 -420 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178B.n;
},
{
glyphname = uni17D2_178C.n;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1755 -276 LINE",
"-1456 -276 LINE",
"-1456 -201 LINE",
"-1304 -256 LINE",
"-1155 -201 LINE",
"-1155 -250 LINE SMOOTH",
"-1155 -277 OFFCURVE",
"-1355 -310 OFFCURVE",
"-1755 -348 CURVE",
"-1755 -594 LINE",
"-1456 -594 LINE",
"-1155 -526 LINE",
"-1155 -594 LINE",
"-856 -594 LINE",
"-856 -381 LINE",
"-1155 -381 LINE",
"-1155 -451 LINE",
"-1456 -508 LINE",
"-1456 -385 LINE",
"-1056 -346 OFFCURVE",
"-856 -306 OFFCURVE",
"-856 -266 CURVE SMOOTH",
"-856 -82 LINE",
"-1141 -82 LINE",
"-1304 -158 LINE",
"-1470 -82 LINE",
"-1755 -82 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_178C.n;
},
{
glyphname = uni17D2_17A0.n;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1755 -500 OFFCURVE",
"-1741 -531 OFFCURVE",
"-1712 -557 CURVE SMOOTH",
"-1685 -582 OFFCURVE",
"-1644 -594 OFFCURVE",
"-1589 -594 CURVE SMOOTH",
"-1214 -594 LINE",
"-1214 -236 LINE",
"-1106 -236 LINE",
"-1106 -594 LINE",
"-856 -594 LINE",
"-856 -209 LINE SMOOTH",
"-856 -176 OFFCURVE",
"-870 -147 OFFCURVE",
"-897 -121 CURVE SMOOTH",
"-924 -95 OFFCURVE",
"-965 -82 OFFCURVE",
"-1020 -82 CURVE SMOOTH",
"-1395 -82 LINE",
"-1395 -440 LINE",
"-1505 -440 LINE",
"-1505 -82 LINE",
"-1755 -82 LINE",
"-1755 -465 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_17A0.n;
},
{
glyphname = uni17D2_178A.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"5 -124 OFFCURVE",
"-78 -82 OFFCURVE",
"-245 -82 CURVE SMOOTH",
"-644 -82 LINE SMOOTH",
"-811 -82 OFFCURVE",
"-894 -124 OFFCURVE",
"-894 -209 CURVE SMOOTH",
"-894 -594 LINE",
"-495 -594 LINE",
"-495 -422 LINE",
"-595 -422 LINE",
"-595 -209 LINE",
"-294 -209 LINE",
"-294 -594 LINE",
"5 -594 LINE",
"5 -209 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_178A.r;
},
{
glyphname = uni17D2_1797.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"6 -124 OFFCURVE",
"-77 -82 OFFCURVE",
"-243 -82 CURVE SMOOTH",
"-643 -82 LINE SMOOTH",
"-810 -82 OFFCURVE",
"-893 -124 OFFCURVE",
"-893 -209 CURVE SMOOTH",
"-893 -422 LINE",
"-993 -422 LINE",
"-993 -594 LINE",
"-594 -594 LINE",
"-594 -209 LINE",
"-293 -209 LINE",
"-293 -594 LINE",
"6 -594 LINE",
"6 -209 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17D2_1797.r;
},
{
glyphname = uni17D2_1798.r;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-231 -552 OFFCURVE",
"-173 -594 OFFCURVE",
"-61 -594 CURVE SMOOTH",
"51 -594 OFFCURVE",
"107 -539 OFFCURVE",
"107 -428 CURVE SMOOTH",
"107 -368 OFFCURVE",
"70 -309 OFFCURVE",
"6 -285 CURVE",
"-17 -272 OFFCURVE",
"-40 -265 OFFCURVE",
"-65 -264 CURVE",
"58 -211 LINE",
"58 -82 LINE",
"-243 -82 LINE",
"-243 -262 LINE",
"-993 -262 LINE",
"-993 -471 LINE",
"-235 -469 LINE"
);
}
);
width = 0;
}
);
note = uni17D2_1798.r;
},
{
glyphname = uni17BB.n;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-804 -700 LINE",
"-804 -100 LINE",
"-1103 -100 LINE",
"-1103 -700 LINE"
);
}
);
width = 0;
}
);
note = uni17BB.n;
},
{
glyphname = uni17BC.n;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1454 -650 OFFCURVE",
"-1387 -700 OFFCURVE",
"-1253 -700 CURVE SMOOTH",
"-1003 -700 LINE SMOOTH",
"-871 -700 OFFCURVE",
"-805 -650 OFFCURVE",
"-805 -551 CURVE SMOOTH",
"-805 -100 LINE",
"-1104 -100 LINE",
"-1104 -551 LINE",
"-1253 -551 LINE",
"-1253 -100 LINE",
"-1454 -100 LINE",
"-1454 -551 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BC.n;
},
{
glyphname = uni17BD.n;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1304 -100 LINE",
"-1505 -100 LINE",
"-1505 -700 LINE",
"-1304 -700 LINE",
"-1206 -569 LINE",
"-1106 -700 LINE",
"-805 -700 LINE",
"-805 -100 LINE",
"-1106 -100 LINE",
"-1106 -510 LINE",
"-1206 -381 LINE",
"-1304 -510 LINE"
);
}
);
width = 0;
}
);
note = uni17BD.n;
},
{
glyphname = uni17BB.n2;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-794 -1126 LINE",
"-794 -676 LINE",
"-1093 -676 LINE",
"-1093 -1126 LINE"
);
}
);
width = 0;
}
);
note = uni17BB.n2;
},
{
glyphname = uni17BC.n2;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1443 -1076 OFFCURVE",
"-1376 -1126 OFFCURVE",
"-1242 -1126 CURVE SMOOTH",
"-1044 -1126 LINE SMOOTH",
"-877 -1126 OFFCURVE",
"-794 -1076 OFFCURVE",
"-794 -977 CURVE SMOOTH",
"-794 -676 LINE",
"-1093 -676 LINE",
"-1093 -977 LINE",
"-1242 -977 LINE",
"-1242 -676 LINE",
"-1443 -676 LINE",
"-1443 -977 LINE SMOOTH"
);
}
);
width = 0;
}
);
note = uni17BC.n2;
},
{
glyphname = uni17BD.n2;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1291 -676 LINE",
"-1492 -676 LINE",
"-1492 -1126 LINE",
"-1291 -1126 LINE",
"-1193 -1028 LINE",
"-1093 -1126 LINE",
"-792 -1126 LINE",
"-792 -676 LINE",
"-1093 -676 LINE",
"-1093 -971 LINE",
"-1193 -872 LINE",
"-1291 -971 LINE"
);
}
);
width = 0;
}
);
note = uni17BD.n2;
},
{
glyphname = uni17D2_1798.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-436 -1089 OFFCURVE",
"-378 -1126 OFFCURVE",
"-266 -1126 CURVE SMOOTH",
"-154 -1126 OFFCURVE",
"-98 -1078 OFFCURVE",
"-98 -981 CURVE SMOOTH",
"-98 -926 OFFCURVE",
"-135 -875 OFFCURVE",
"-199 -854 CURVE",
"-222 -843 OFFCURVE",
"-245 -837 OFFCURVE",
"-270 -836 CURVE",
"-147 -788 LINE",
"-147 -676 LINE",
"-448 -676 LINE",
"-448 -834 LINE",
"-1198 -834 LINE",
"-1198 -1018 LINE",
"-440 -1016 LINE"
);
}
);
width = 1318;
}
);
note = uni17D2_1798.b;
},
{
glyphname = uni17D2_17A0.b;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"-1099 -1044 OFFCURVE",
"-1085 -1071 OFFCURVE",
"-1056 -1094 CURVE SMOOTH",
"-1029 -1115 OFFCURVE",
"-988 -1126 OFFCURVE",
"-933 -1126 CURVE SMOOTH",
"-558 -1126 LINE",
"-558 -811 LINE",
"-450 -811 LINE",
"-450 -1126 LINE",
"-200 -1126 LINE",
"-200 -788 LINE SMOOTH",
"-200 -758 OFFCURVE",
"-214 -732 OFFCURVE",
"-241 -711 CURVE SMOOTH",
"-268 -688 OFFCURVE",
"-309 -676 OFFCURVE",
"-364 -676 CURVE SMOOTH",
"-739 -676 LINE",
"-739 -991 LINE",
"-849 -991 LINE",
"-849 -676 LINE",
"-1099 -676 LINE",
"-1099 -1014 LINE SMOOTH"
);
}
);
width = 1318;
}
);
note = uni17D2_17A0.b;
},
{
glyphname = uni1794.a;
lastChange = "2021-03-25 11:20:46 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
paths = (
{
closed = 1;
nodes = (
"150 83 OFFCURVE",
"233 0 OFFCURVE",
"399 0 CURVE SMOOTH",
"801 0 LINE",
"801 -80 LINE",
"1151 -80 LINE",
"1151 1100 LINE",
"801 1100 LINE",
"801 250 LINE",
"500 250 LINE",
"500 999 LINE",
"211 1249 LINE",
"1151 1249 LINE",
"1151 1499 LINE",
"201 1499 LINE",
"0 1157 LINE",
"150 999 LINE",
"150 250 LINE SMOOTH"
);
}
);
width = 1300;
}
);
note = uni1794.a;
},
{
glyphname = uni00A0;
lastChange = "2021-03-25 11:34:53 +0000";
layers = (
{
layerId = "CA83E40A-73A6-405E-BD72-6C931CC3ADE9";
width = 532;
}
);
unicode = 00A0;
}
);
instances = (
{
customParameters = (
{
name = postscriptFullName;
value = Koulen;
},
{
name = postscriptFontName;
value = Koulen;
}
);
interpolationWeight = 400;
instanceInterpolations = {
"CA83E40A-73A6-405E-BD72-6C931CC3ADE9" = 1;
};
name = Regular;
weightClass = Normal;
}
);
kerning = {
"CA83E40A-73A6-405E-BD72-6C931CC3ADE9" = {
A = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -123;
U = -41;
V = -164;
W = -143;
Y = -143;
asterisk = -143;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
question = -123;
quotedbl = -164;
quotesingle = -164;
u = -41;
v = -123;
w = -61;
y = -102;
};
B = {
A = -41;
T = -41;
V = -82;
W = -61;
X = -41;
Y = -82;
Z = -41;
asterisk = -41;
question = -41;
w = -20;
y = -41;
};
D = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
E = {
V = -41;
W = -41;
Y = -41;
};
F = {
A = -143;
a = -82;
c = -82;
d = -82;
e = -82;
g = -82;
o = -82;
q = -82;
};
G = {
T = -41;
V = -41;
W = -41;
Y = -41;
question = -41;
};
K = {
C = -41;
G = -41;
O = -41;
Q = -41;
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
u = -41;
w = -61;
y = -61;
};
L = {
T = -143;
V = -102;
W = -102;
Y = -123;
asterisk = -164;
question = -143;
quotedbl = -123;
quotesingle = -123;
};
O = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
P = {
A = -102;
comma = -246;
period = -246;
};
Q = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -61;
question = -41;
};
R = {
C = -41;
G = -41;
O = -41;
Q = -41;
T = -41;
U = -20;
V = -61;
W = -61;
Y = -61;
asterisk = -41;
question = -41;
w = -41;
y = -41;
};
S = {
A = -41;
T = -41;
V = -41;
W = -41;
X = -41;
Y = -41;
question = -41;
w = -20;
y = -41;
};
T = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -61;
c = -61;
comma = -184;
d = -61;
e = -61;
g = -61;
o = -61;
period = -184;
q = -61;
};
U = {
A = -41;
};
V = {
A = -164;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -123;
c = -123;
comma = -225;
d = -123;
e = -123;
g = -123;
o = -123;
period = -225;
q = -123;
s = -82;
};
W = {
A = -123;
C = -41;
G = -41;
O = -41;
Q = -41;
a = -102;
c = -123;
comma = -184;
d = -123;
e = -123;
g = -123;
o = -123;
period = -184;
q = -123;
};
X = {
C = -41;
G = -41;
O = -41;
Q = -41;
S = -20;
w = -61;
y = -102;
};
Y = {
A = -143;
C = -61;
G = -61;
O = -61;
Q = -61;
S = -41;
a = -123;
c = -143;
comma = -164;
d = -143;
e = -143;
g = -143;
o = -143;
period = -164;
q = -143;
s = -123;
};
a = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
asterisk = {
A = -102;
comma = -246;
period = -246;
};
b = {
y = -41;
};
f = {
asterisk = 164;
braceright = 184;
bracketright = 184;
parenright = 184;
quotedbl = 164;
quotesingle = 164;
};
h = {
quotedbl = -82;
y = -41;
};
k = {
c = -41;
d = -41;
e = -41;
g = -41;
o = -41;
q = -41;
};
n = {
quotedbl = -82;
quotesingle = -82;
y = -41;
};
o = {
y = -41;
};
p = {
y = -41;
};
quotedbl = {
A = -164;
g = -82;
};
quotesingle = {
A = -164;
g = -82;
};
r = {
a = -41;
asterisk = 61;
};
v = {
comma = -102;
period = -143;
};
w = {
comma = -143;
period = -143;
};
y = {
comma = -184;
period = -184;
};
};
};
manufacturer = "Danh Hong";
manufacturerURL = "http://code.google.com/p/noto/";
unitsPerEm = 2048;
versionMajor = 8;
versionMinor = 0;
}
